/*
 * Selling Partner API for Direct Fulfillment Shipping
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorDirectFulfillmentShipping_2021-12-28/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorDirectFulfillmentShipping_2021-12-28/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForDirectFulfillmentShipping);
  }
}(this, function(expect, SellingPartnerApiForDirectFulfillmentShipping) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForDirectFulfillmentShipping.VendorShippingLabelsApi();
  });

  describe('vendorDirectFulfillmentShipping_2021-12-28', function() {
    describe('VendorShippingLabelsApi', function() {
      describe('createShippingLabels', function() {
        it('should call createShippingLabels successfully', function(done) {
          // TODO: uncomment, update parameter values for createShippingLabels call and complete the assertions
          /*
          var purchaseOrderNumber = "purchaseOrderNumber_example";
          var body = new SellingPartnerApiForDirectFulfillmentShipping.CreateShippingLabelsRequest();
          body.sellingParty = new SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification();
          body.sellingParty.partyId = "";
          body.sellingParty.address = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.sellingParty.address.name = "";
          body.sellingParty.address.addressLine1 = "";
          body.sellingParty.address.addressLine2 = "";
          body.sellingParty.address.addressLine3 = "";
          body.sellingParty.address.city = "";
          body.sellingParty.address.county = "";
          body.sellingParty.address.district = "";
          body.sellingParty.address.stateOrRegion = "";
          body.sellingParty.address.postalCode = "";
          body.sellingParty.address.countryCode = "";
          body.sellingParty.address.phone = "";
          body.sellingParty.taxRegistrationDetails = [new SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails()];
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationType = "VAT";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationNumber = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.name = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine1 = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine2 = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine3 = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.city = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.county = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.district = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.stateOrRegion = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.postalCode = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.countryCode = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.phone = "";
          body.sellingParty.taxRegistrationDetails[0].taxRegistrationMessages = "";
          body.shipFromParty = new SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification();
          body.shipFromParty.partyId = "";
          body.shipFromParty.address = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.shipFromParty.address.name = "";
          body.shipFromParty.address.addressLine1 = "";
          body.shipFromParty.address.addressLine2 = "";
          body.shipFromParty.address.addressLine3 = "";
          body.shipFromParty.address.city = "";
          body.shipFromParty.address.county = "";
          body.shipFromParty.address.district = "";
          body.shipFromParty.address.stateOrRegion = "";
          body.shipFromParty.address.postalCode = "";
          body.shipFromParty.address.countryCode = "";
          body.shipFromParty.address.phone = "";
          body.shipFromParty.taxRegistrationDetails = [new SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails()];
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationType = "VAT";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationNumber = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.name = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine1 = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine2 = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine3 = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.city = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.county = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.district = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.stateOrRegion = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.postalCode = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.countryCode = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.phone = "";
          body.shipFromParty.taxRegistrationDetails[0].taxRegistrationMessages = "";
          body.containers = [new SellingPartnerApiForDirectFulfillmentShipping.Container()];
          body.containers[0].containerType = "Carton";
          body.containers[0].containerIdentifier = "";
          body.containers[0].trackingNumber = "";
          body.containers[0].manifestId = "";
          body.containers[0].manifestDate = "";
          body.containers[0].shipMethod = "";
          body.containers[0].scacCode = "";
          body.containers[0].carrier = "";
          body.containers[0].containerSequenceNumber = 0;
          body.containers[0].dimensions = new SellingPartnerApiForDirectFulfillmentShipping.Dimensions();
          body.containers[0].dimensions.length = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.containers[0].dimensions.width = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.containers[0].dimensions.height = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.containers[0].dimensions.unitOfMeasure = "IN";
          body.containers[0].weight = new SellingPartnerApiForDirectFulfillmentShipping.Weight();
          body.containers[0].weight.unitOfMeasure = "KG";
          body.containers[0].weight.value = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.containers[0].packedItems = [new SellingPartnerApiForDirectFulfillmentShipping.PackedItem()];
          body.containers[0].packedItems[0].itemSequenceNumber = 0;
          body.containers[0].packedItems[0].buyerProductIdentifier = "";
          body.containers[0].packedItems[0].pieceNumber = 0;
          body.containers[0].packedItems[0].vendorProductIdentifier = "";
          body.containers[0].packedItems[0].packedQuantity = new SellingPartnerApiForDirectFulfillmentShipping.ItemQuantity();
          body.containers[0].packedItems[0].packedQuantity.amount = 0;
          body.containers[0].packedItems[0].packedQuantity.unitOfMeasure = "";

          instance.createShippingLabels(purchaseOrderNumber, body).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.ShippingLabel);
            expect(data.purchaseOrderNumber).to.be.a('string');
            // expect(data.purchaseOrderNumber).to.be("");
            expect(data.sellingParty).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification);
                  expect(data.sellingParty.partyId).to.be.a('string');
              // expect(data.sellingParty.partyId).to.be("");
              expect(data.sellingParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                    expect(data.sellingParty.address.name).to.be.a('string');
                // expect(data.sellingParty.address.name).to.be("");
                expect(data.sellingParty.address.addressLine1).to.be.a('string');
                // expect(data.sellingParty.address.addressLine1).to.be("");
                expect(data.sellingParty.address.addressLine2).to.be.a('string');
                // expect(data.sellingParty.address.addressLine2).to.be("");
                expect(data.sellingParty.address.addressLine3).to.be.a('string');
                // expect(data.sellingParty.address.addressLine3).to.be("");
                expect(data.sellingParty.address.city).to.be.a('string');
                // expect(data.sellingParty.address.city).to.be("");
                expect(data.sellingParty.address.county).to.be.a('string');
                // expect(data.sellingParty.address.county).to.be("");
                expect(data.sellingParty.address.district).to.be.a('string');
                // expect(data.sellingParty.address.district).to.be("");
                expect(data.sellingParty.address.stateOrRegion).to.be.a('string');
                // expect(data.sellingParty.address.stateOrRegion).to.be("");
                expect(data.sellingParty.address.postalCode).to.be.a('string');
                // expect(data.sellingParty.address.postalCode).to.be("");
                expect(data.sellingParty.address.countryCode).to.be.a('string');
                // expect(data.sellingParty.address.countryCode).to.be("");
                expect(data.sellingParty.address.phone).to.be.a('string');
                // expect(data.sellingParty.address.phone).to.be("");
              {
                let dataCtr = data.sellingParty.taxRegistrationDetails;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails);
                  expect(data.taxRegistrationType).to.be.a('string');
                  // expect(data.taxRegistrationType).to.be("VAT");
                  expect(data.taxRegistrationNumber).to.be.a('string');
                  // expect(data.taxRegistrationNumber).to.be("");
                  expect(data.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                        expect(data.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.taxRegistrationAddress.name).to.be("");
                    expect(data.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.taxRegistrationAddress.city).to.be("");
                    expect(data.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.taxRegistrationAddress.county).to.be("");
                    expect(data.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.taxRegistrationAddress.district).to.be("");
                    expect(data.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.taxRegistrationAddress.phone).to.be("");
                  expect(data.taxRegistrationMessages).to.be.a('string');
                  // expect(data.taxRegistrationMessages).to.be("");
                }
              }
            expect(data.shipFromParty).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification);
                  expect(data.shipFromParty.partyId).to.be.a('string');
              // expect(data.shipFromParty.partyId).to.be("");
              expect(data.shipFromParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                    expect(data.shipFromParty.address.name).to.be.a('string');
                // expect(data.shipFromParty.address.name).to.be("");
                expect(data.shipFromParty.address.addressLine1).to.be.a('string');
                // expect(data.shipFromParty.address.addressLine1).to.be("");
                expect(data.shipFromParty.address.addressLine2).to.be.a('string');
                // expect(data.shipFromParty.address.addressLine2).to.be("");
                expect(data.shipFromParty.address.addressLine3).to.be.a('string');
                // expect(data.shipFromParty.address.addressLine3).to.be("");
                expect(data.shipFromParty.address.city).to.be.a('string');
                // expect(data.shipFromParty.address.city).to.be("");
                expect(data.shipFromParty.address.county).to.be.a('string');
                // expect(data.shipFromParty.address.county).to.be("");
                expect(data.shipFromParty.address.district).to.be.a('string');
                // expect(data.shipFromParty.address.district).to.be("");
                expect(data.shipFromParty.address.stateOrRegion).to.be.a('string');
                // expect(data.shipFromParty.address.stateOrRegion).to.be("");
                expect(data.shipFromParty.address.postalCode).to.be.a('string');
                // expect(data.shipFromParty.address.postalCode).to.be("");
                expect(data.shipFromParty.address.countryCode).to.be.a('string');
                // expect(data.shipFromParty.address.countryCode).to.be("");
                expect(data.shipFromParty.address.phone).to.be.a('string');
                // expect(data.shipFromParty.address.phone).to.be("");
              {
                let dataCtr = data.shipFromParty.taxRegistrationDetails;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails);
                  expect(data.taxRegistrationType).to.be.a('string');
                  // expect(data.taxRegistrationType).to.be("VAT");
                  expect(data.taxRegistrationNumber).to.be.a('string');
                  // expect(data.taxRegistrationNumber).to.be("");
                  expect(data.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                        expect(data.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.taxRegistrationAddress.name).to.be("");
                    expect(data.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.taxRegistrationAddress.city).to.be("");
                    expect(data.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.taxRegistrationAddress.county).to.be("");
                    expect(data.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.taxRegistrationAddress.district).to.be("");
                    expect(data.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.taxRegistrationAddress.phone).to.be("");
                  expect(data.taxRegistrationMessages).to.be.a('string');
                  // expect(data.taxRegistrationMessages).to.be("");
                }
              }
            expect(data.labelFormat).to.be.a('string');
            // expect(data.labelFormat).to.be("PNG");
            {
              let dataCtr = data.labelData;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.LabelData);
                expect(data.packageIdentifier).to.be.a('string');
                // expect(data.packageIdentifier).to.be("");
                expect(data.trackingNumber).to.be.a('string');
                // expect(data.trackingNumber).to.be("");
                expect(data.shipMethod).to.be.a('string');
                // expect(data.shipMethod).to.be("");
                expect(data.shipMethodName).to.be.a('string');
                // expect(data.shipMethodName).to.be("");
                expect(data.content).to.be.a('string');
                // expect(data.content).to.be("");
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getShippingLabel', function() {
        it('should call getShippingLabel successfully', function(done) {
          // TODO: uncomment, update parameter values for getShippingLabel call and complete the assertions
          /*
          var purchaseOrderNumber = "purchaseOrderNumber_example";

          instance.getShippingLabel(purchaseOrderNumber).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.ShippingLabel);
            expect(data.purchaseOrderNumber).to.be.a('string');
            // expect(data.purchaseOrderNumber).to.be("");
            expect(data.sellingParty).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification);
                  expect(data.sellingParty.partyId).to.be.a('string');
              // expect(data.sellingParty.partyId).to.be("");
              expect(data.sellingParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                    expect(data.sellingParty.address.name).to.be.a('string');
                // expect(data.sellingParty.address.name).to.be("");
                expect(data.sellingParty.address.addressLine1).to.be.a('string');
                // expect(data.sellingParty.address.addressLine1).to.be("");
                expect(data.sellingParty.address.addressLine2).to.be.a('string');
                // expect(data.sellingParty.address.addressLine2).to.be("");
                expect(data.sellingParty.address.addressLine3).to.be.a('string');
                // expect(data.sellingParty.address.addressLine3).to.be("");
                expect(data.sellingParty.address.city).to.be.a('string');
                // expect(data.sellingParty.address.city).to.be("");
                expect(data.sellingParty.address.county).to.be.a('string');
                // expect(data.sellingParty.address.county).to.be("");
                expect(data.sellingParty.address.district).to.be.a('string');
                // expect(data.sellingParty.address.district).to.be("");
                expect(data.sellingParty.address.stateOrRegion).to.be.a('string');
                // expect(data.sellingParty.address.stateOrRegion).to.be("");
                expect(data.sellingParty.address.postalCode).to.be.a('string');
                // expect(data.sellingParty.address.postalCode).to.be("");
                expect(data.sellingParty.address.countryCode).to.be.a('string');
                // expect(data.sellingParty.address.countryCode).to.be("");
                expect(data.sellingParty.address.phone).to.be.a('string');
                // expect(data.sellingParty.address.phone).to.be("");
              {
                let dataCtr = data.sellingParty.taxRegistrationDetails;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails);
                  expect(data.taxRegistrationType).to.be.a('string');
                  // expect(data.taxRegistrationType).to.be("VAT");
                  expect(data.taxRegistrationNumber).to.be.a('string');
                  // expect(data.taxRegistrationNumber).to.be("");
                  expect(data.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                        expect(data.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.taxRegistrationAddress.name).to.be("");
                    expect(data.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.taxRegistrationAddress.city).to.be("");
                    expect(data.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.taxRegistrationAddress.county).to.be("");
                    expect(data.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.taxRegistrationAddress.district).to.be("");
                    expect(data.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.taxRegistrationAddress.phone).to.be("");
                  expect(data.taxRegistrationMessages).to.be.a('string');
                  // expect(data.taxRegistrationMessages).to.be("");
                }
              }
            expect(data.shipFromParty).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification);
                  expect(data.shipFromParty.partyId).to.be.a('string');
              // expect(data.shipFromParty.partyId).to.be("");
              expect(data.shipFromParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                    expect(data.shipFromParty.address.name).to.be.a('string');
                // expect(data.shipFromParty.address.name).to.be("");
                expect(data.shipFromParty.address.addressLine1).to.be.a('string');
                // expect(data.shipFromParty.address.addressLine1).to.be("");
                expect(data.shipFromParty.address.addressLine2).to.be.a('string');
                // expect(data.shipFromParty.address.addressLine2).to.be("");
                expect(data.shipFromParty.address.addressLine3).to.be.a('string');
                // expect(data.shipFromParty.address.addressLine3).to.be("");
                expect(data.shipFromParty.address.city).to.be.a('string');
                // expect(data.shipFromParty.address.city).to.be("");
                expect(data.shipFromParty.address.county).to.be.a('string');
                // expect(data.shipFromParty.address.county).to.be("");
                expect(data.shipFromParty.address.district).to.be.a('string');
                // expect(data.shipFromParty.address.district).to.be("");
                expect(data.shipFromParty.address.stateOrRegion).to.be.a('string');
                // expect(data.shipFromParty.address.stateOrRegion).to.be("");
                expect(data.shipFromParty.address.postalCode).to.be.a('string');
                // expect(data.shipFromParty.address.postalCode).to.be("");
                expect(data.shipFromParty.address.countryCode).to.be.a('string');
                // expect(data.shipFromParty.address.countryCode).to.be("");
                expect(data.shipFromParty.address.phone).to.be.a('string');
                // expect(data.shipFromParty.address.phone).to.be("");
              {
                let dataCtr = data.shipFromParty.taxRegistrationDetails;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails);
                  expect(data.taxRegistrationType).to.be.a('string');
                  // expect(data.taxRegistrationType).to.be("VAT");
                  expect(data.taxRegistrationNumber).to.be.a('string');
                  // expect(data.taxRegistrationNumber).to.be("");
                  expect(data.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                        expect(data.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.taxRegistrationAddress.name).to.be("");
                    expect(data.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.taxRegistrationAddress.city).to.be("");
                    expect(data.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.taxRegistrationAddress.county).to.be("");
                    expect(data.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.taxRegistrationAddress.district).to.be("");
                    expect(data.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.taxRegistrationAddress.phone).to.be("");
                  expect(data.taxRegistrationMessages).to.be.a('string');
                  // expect(data.taxRegistrationMessages).to.be("");
                }
              }
            expect(data.labelFormat).to.be.a('string');
            // expect(data.labelFormat).to.be("PNG");
            {
              let dataCtr = data.labelData;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.LabelData);
                expect(data.packageIdentifier).to.be.a('string');
                // expect(data.packageIdentifier).to.be("");
                expect(data.trackingNumber).to.be.a('string');
                // expect(data.trackingNumber).to.be("");
                expect(data.shipMethod).to.be.a('string');
                // expect(data.shipMethod).to.be("");
                expect(data.shipMethodName).to.be.a('string');
                // expect(data.shipMethodName).to.be("");
                expect(data.content).to.be.a('string');
                // expect(data.content).to.be("");
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getShippingLabels', function() {
        it('should call getShippingLabels successfully', function(done) {
          // TODO: uncomment, update parameter values for getShippingLabels call and complete the assertions
          /*
          var createdAfter = new Date("2013-10-20T19:20:30+01:00");
          var createdBefore = new Date("2013-10-20T19:20:30+01:00");
          var opts = {};
          opts.shipFromPartyId = "shipFromPartyId_example";
          opts.limit = 56;
          opts.sortOrder = "ASC";
          opts.nextToken = "nextToken_example";

          instance.getShippingLabels(createdAfter, createdBefore, opts).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.ShippingLabelList);
            expect(data.pagination).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Pagination);
                  expect(data.pagination.nextToken).to.be.a('string');
              // expect(data.pagination.nextToken).to.be("");
            {
              let dataCtr = data.shippingLabels;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.ShippingLabel);
                expect(data.purchaseOrderNumber).to.be.a('string');
                // expect(data.purchaseOrderNumber).to.be("");
                expect(data.sellingParty).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification);
                      expect(data.sellingParty.partyId).to.be.a('string');
                  // expect(data.sellingParty.partyId).to.be("");
                  expect(data.sellingParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                        expect(data.sellingParty.address.name).to.be.a('string');
                    // expect(data.sellingParty.address.name).to.be("");
                    expect(data.sellingParty.address.addressLine1).to.be.a('string');
                    // expect(data.sellingParty.address.addressLine1).to.be("");
                    expect(data.sellingParty.address.addressLine2).to.be.a('string');
                    // expect(data.sellingParty.address.addressLine2).to.be("");
                    expect(data.sellingParty.address.addressLine3).to.be.a('string');
                    // expect(data.sellingParty.address.addressLine3).to.be("");
                    expect(data.sellingParty.address.city).to.be.a('string');
                    // expect(data.sellingParty.address.city).to.be("");
                    expect(data.sellingParty.address.county).to.be.a('string');
                    // expect(data.sellingParty.address.county).to.be("");
                    expect(data.sellingParty.address.district).to.be.a('string');
                    // expect(data.sellingParty.address.district).to.be("");
                    expect(data.sellingParty.address.stateOrRegion).to.be.a('string');
                    // expect(data.sellingParty.address.stateOrRegion).to.be("");
                    expect(data.sellingParty.address.postalCode).to.be.a('string');
                    // expect(data.sellingParty.address.postalCode).to.be("");
                    expect(data.sellingParty.address.countryCode).to.be.a('string');
                    // expect(data.sellingParty.address.countryCode).to.be("");
                    expect(data.sellingParty.address.phone).to.be.a('string');
                    // expect(data.sellingParty.address.phone).to.be("");
                  {
                    let dataCtr = data.sellingParty.taxRegistrationDetails;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails);
                      expect(data.taxRegistrationType).to.be.a('string');
                      // expect(data.taxRegistrationType).to.be("VAT");
                      expect(data.taxRegistrationNumber).to.be.a('string');
                      // expect(data.taxRegistrationNumber).to.be("");
                      expect(data.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                            expect(data.taxRegistrationAddress.name).to.be.a('string');
                        // expect(data.taxRegistrationAddress.name).to.be("");
                        expect(data.taxRegistrationAddress.addressLine1).to.be.a('string');
                        // expect(data.taxRegistrationAddress.addressLine1).to.be("");
                        expect(data.taxRegistrationAddress.addressLine2).to.be.a('string');
                        // expect(data.taxRegistrationAddress.addressLine2).to.be("");
                        expect(data.taxRegistrationAddress.addressLine3).to.be.a('string');
                        // expect(data.taxRegistrationAddress.addressLine3).to.be("");
                        expect(data.taxRegistrationAddress.city).to.be.a('string');
                        // expect(data.taxRegistrationAddress.city).to.be("");
                        expect(data.taxRegistrationAddress.county).to.be.a('string');
                        // expect(data.taxRegistrationAddress.county).to.be("");
                        expect(data.taxRegistrationAddress.district).to.be.a('string');
                        // expect(data.taxRegistrationAddress.district).to.be("");
                        expect(data.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                        // expect(data.taxRegistrationAddress.stateOrRegion).to.be("");
                        expect(data.taxRegistrationAddress.postalCode).to.be.a('string');
                        // expect(data.taxRegistrationAddress.postalCode).to.be("");
                        expect(data.taxRegistrationAddress.countryCode).to.be.a('string');
                        // expect(data.taxRegistrationAddress.countryCode).to.be("");
                        expect(data.taxRegistrationAddress.phone).to.be.a('string');
                        // expect(data.taxRegistrationAddress.phone).to.be("");
                      expect(data.taxRegistrationMessages).to.be.a('string');
                      // expect(data.taxRegistrationMessages).to.be("");
                    }
                  }
                expect(data.shipFromParty).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification);
                      expect(data.shipFromParty.partyId).to.be.a('string');
                  // expect(data.shipFromParty.partyId).to.be("");
                  expect(data.shipFromParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                        expect(data.shipFromParty.address.name).to.be.a('string');
                    // expect(data.shipFromParty.address.name).to.be("");
                    expect(data.shipFromParty.address.addressLine1).to.be.a('string');
                    // expect(data.shipFromParty.address.addressLine1).to.be("");
                    expect(data.shipFromParty.address.addressLine2).to.be.a('string');
                    // expect(data.shipFromParty.address.addressLine2).to.be("");
                    expect(data.shipFromParty.address.addressLine3).to.be.a('string');
                    // expect(data.shipFromParty.address.addressLine3).to.be("");
                    expect(data.shipFromParty.address.city).to.be.a('string');
                    // expect(data.shipFromParty.address.city).to.be("");
                    expect(data.shipFromParty.address.county).to.be.a('string');
                    // expect(data.shipFromParty.address.county).to.be("");
                    expect(data.shipFromParty.address.district).to.be.a('string');
                    // expect(data.shipFromParty.address.district).to.be("");
                    expect(data.shipFromParty.address.stateOrRegion).to.be.a('string');
                    // expect(data.shipFromParty.address.stateOrRegion).to.be("");
                    expect(data.shipFromParty.address.postalCode).to.be.a('string');
                    // expect(data.shipFromParty.address.postalCode).to.be("");
                    expect(data.shipFromParty.address.countryCode).to.be.a('string');
                    // expect(data.shipFromParty.address.countryCode).to.be("");
                    expect(data.shipFromParty.address.phone).to.be.a('string');
                    // expect(data.shipFromParty.address.phone).to.be("");
                  {
                    let dataCtr = data.shipFromParty.taxRegistrationDetails;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails);
                      expect(data.taxRegistrationType).to.be.a('string');
                      // expect(data.taxRegistrationType).to.be("VAT");
                      expect(data.taxRegistrationNumber).to.be.a('string');
                      // expect(data.taxRegistrationNumber).to.be("");
                      expect(data.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.Address);
                            expect(data.taxRegistrationAddress.name).to.be.a('string');
                        // expect(data.taxRegistrationAddress.name).to.be("");
                        expect(data.taxRegistrationAddress.addressLine1).to.be.a('string');
                        // expect(data.taxRegistrationAddress.addressLine1).to.be("");
                        expect(data.taxRegistrationAddress.addressLine2).to.be.a('string');
                        // expect(data.taxRegistrationAddress.addressLine2).to.be("");
                        expect(data.taxRegistrationAddress.addressLine3).to.be.a('string');
                        // expect(data.taxRegistrationAddress.addressLine3).to.be("");
                        expect(data.taxRegistrationAddress.city).to.be.a('string');
                        // expect(data.taxRegistrationAddress.city).to.be("");
                        expect(data.taxRegistrationAddress.county).to.be.a('string');
                        // expect(data.taxRegistrationAddress.county).to.be("");
                        expect(data.taxRegistrationAddress.district).to.be.a('string');
                        // expect(data.taxRegistrationAddress.district).to.be("");
                        expect(data.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                        // expect(data.taxRegistrationAddress.stateOrRegion).to.be("");
                        expect(data.taxRegistrationAddress.postalCode).to.be.a('string');
                        // expect(data.taxRegistrationAddress.postalCode).to.be("");
                        expect(data.taxRegistrationAddress.countryCode).to.be.a('string');
                        // expect(data.taxRegistrationAddress.countryCode).to.be("");
                        expect(data.taxRegistrationAddress.phone).to.be.a('string');
                        // expect(data.taxRegistrationAddress.phone).to.be("");
                      expect(data.taxRegistrationMessages).to.be.a('string');
                      // expect(data.taxRegistrationMessages).to.be("");
                    }
                  }
                expect(data.labelFormat).to.be.a('string');
                // expect(data.labelFormat).to.be("PNG");
                {
                  let dataCtr = data.labelData;
                  expect(dataCtr).to.be.an(Array);
                  expect(dataCtr).to.not.be.empty();
                  for (let p in dataCtr) {
                    let data = dataCtr[p];
                    expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.LabelData);
                    expect(data.packageIdentifier).to.be.a('string');
                    // expect(data.packageIdentifier).to.be("");
                    expect(data.trackingNumber).to.be.a('string');
                    // expect(data.trackingNumber).to.be("");
                    expect(data.shipMethod).to.be.a('string');
                    // expect(data.shipMethod).to.be("");
                    expect(data.shipMethodName).to.be.a('string');
                    // expect(data.shipMethodName).to.be("");
                    expect(data.content).to.be.a('string');
                    // expect(data.content).to.be("");
                  }
                }
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitShippingLabelRequest', function() {
        it('should call submitShippingLabelRequest successfully', function(done) {
          // TODO: uncomment, update parameter values for submitShippingLabelRequest call and complete the assertions
          /*
          var body = new SellingPartnerApiForDirectFulfillmentShipping.SubmitShippingLabelsRequest();
          body.shippingLabelRequests = [new SellingPartnerApiForDirectFulfillmentShipping.ShippingLabelRequest()];
          body.shippingLabelRequests[0].purchaseOrderNumber = "";
          body.shippingLabelRequests[0].sellingParty = new SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification();
          body.shippingLabelRequests[0].sellingParty.partyId = "";
          body.shippingLabelRequests[0].sellingParty.address = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.shippingLabelRequests[0].sellingParty.address.name = "";
          body.shippingLabelRequests[0].sellingParty.address.addressLine1 = "";
          body.shippingLabelRequests[0].sellingParty.address.addressLine2 = "";
          body.shippingLabelRequests[0].sellingParty.address.addressLine3 = "";
          body.shippingLabelRequests[0].sellingParty.address.city = "";
          body.shippingLabelRequests[0].sellingParty.address.county = "";
          body.shippingLabelRequests[0].sellingParty.address.district = "";
          body.shippingLabelRequests[0].sellingParty.address.stateOrRegion = "";
          body.shippingLabelRequests[0].sellingParty.address.postalCode = "";
          body.shippingLabelRequests[0].sellingParty.address.countryCode = "";
          body.shippingLabelRequests[0].sellingParty.address.phone = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails = [new SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails()];
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationType = "VAT";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationNumber = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.name = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine1 = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine2 = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine3 = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.city = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.county = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.district = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.stateOrRegion = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.postalCode = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.countryCode = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationAddress.phone = "";
          body.shippingLabelRequests[0].sellingParty.taxRegistrationDetails[0].taxRegistrationMessages = "";
          body.shippingLabelRequests[0].shipFromParty = new SellingPartnerApiForDirectFulfillmentShipping.PartyIdentification();
          body.shippingLabelRequests[0].shipFromParty.partyId = "";
          body.shippingLabelRequests[0].shipFromParty.address = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.shippingLabelRequests[0].shipFromParty.address.name = "";
          body.shippingLabelRequests[0].shipFromParty.address.addressLine1 = "";
          body.shippingLabelRequests[0].shipFromParty.address.addressLine2 = "";
          body.shippingLabelRequests[0].shipFromParty.address.addressLine3 = "";
          body.shippingLabelRequests[0].shipFromParty.address.city = "";
          body.shippingLabelRequests[0].shipFromParty.address.county = "";
          body.shippingLabelRequests[0].shipFromParty.address.district = "";
          body.shippingLabelRequests[0].shipFromParty.address.stateOrRegion = "";
          body.shippingLabelRequests[0].shipFromParty.address.postalCode = "";
          body.shippingLabelRequests[0].shipFromParty.address.countryCode = "";
          body.shippingLabelRequests[0].shipFromParty.address.phone = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails = [new SellingPartnerApiForDirectFulfillmentShipping.TaxRegistrationDetails()];
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationType = "VAT";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationNumber = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress = new SellingPartnerApiForDirectFulfillmentShipping.Address();
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.name = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine1 = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine2 = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.addressLine3 = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.city = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.county = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.district = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.stateOrRegion = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.postalCode = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.countryCode = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationAddress.phone = "";
          body.shippingLabelRequests[0].shipFromParty.taxRegistrationDetails[0].taxRegistrationMessages = "";
          body.shippingLabelRequests[0].containers = [new SellingPartnerApiForDirectFulfillmentShipping.Container()];
          body.shippingLabelRequests[0].containers[0].containerType = "Carton";
          body.shippingLabelRequests[0].containers[0].containerIdentifier = "";
          body.shippingLabelRequests[0].containers[0].trackingNumber = "";
          body.shippingLabelRequests[0].containers[0].manifestId = "";
          body.shippingLabelRequests[0].containers[0].manifestDate = "";
          body.shippingLabelRequests[0].containers[0].shipMethod = "";
          body.shippingLabelRequests[0].containers[0].scacCode = "";
          body.shippingLabelRequests[0].containers[0].carrier = "";
          body.shippingLabelRequests[0].containers[0].containerSequenceNumber = 0;
          body.shippingLabelRequests[0].containers[0].dimensions = new SellingPartnerApiForDirectFulfillmentShipping.Dimensions();
          body.shippingLabelRequests[0].containers[0].dimensions.length = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.shippingLabelRequests[0].containers[0].dimensions.width = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.shippingLabelRequests[0].containers[0].dimensions.height = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.shippingLabelRequests[0].containers[0].dimensions.unitOfMeasure = "IN";
          body.shippingLabelRequests[0].containers[0].weight = new SellingPartnerApiForDirectFulfillmentShipping.Weight();
          body.shippingLabelRequests[0].containers[0].weight.unitOfMeasure = "KG";
          body.shippingLabelRequests[0].containers[0].weight.value = new SellingPartnerApiForDirectFulfillmentShipping.Decimal();
          body.shippingLabelRequests[0].containers[0].packedItems = [new SellingPartnerApiForDirectFulfillmentShipping.PackedItem()];
          body.shippingLabelRequests[0].containers[0].packedItems[0].itemSequenceNumber = 0;
          body.shippingLabelRequests[0].containers[0].packedItems[0].buyerProductIdentifier = "";
          body.shippingLabelRequests[0].containers[0].packedItems[0].pieceNumber = 0;
          body.shippingLabelRequests[0].containers[0].packedItems[0].vendorProductIdentifier = "";
          body.shippingLabelRequests[0].containers[0].packedItems[0].packedQuantity = new SellingPartnerApiForDirectFulfillmentShipping.ItemQuantity();
          body.shippingLabelRequests[0].containers[0].packedItems[0].packedQuantity.amount = 0;
          body.shippingLabelRequests[0].containers[0].packedItems[0].packedQuantity.unitOfMeasure = "";

          instance.submitShippingLabelRequest(body).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentShipping.TransactionReference);
            expect(data.transactionId).to.be.a('string');
            // expect(data.transactionId).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
