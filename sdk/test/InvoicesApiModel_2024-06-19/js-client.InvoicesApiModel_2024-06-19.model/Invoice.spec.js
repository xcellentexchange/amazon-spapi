/*
 * The Selling Partner API for Invoices.
 * Use the Selling Partner API for Invoices to retrieve and manage invoice-related operations, which can help selling partners manage their bookkeeping processes.
 *
 * OpenAPI spec version: 2024-06-19
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/InvoicesApiModel_2024-06-19/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/InvoicesApiModel_2024-06-19/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForInvoices);
  }
}(this, function(expect, TheSellingPartnerApiForInvoices) {
  'use strict';

  var instance;

  describe('InvoicesApiModel_2024-06-19', function() {
    describe('Invoice', function() {
      beforeEach(function() {
        instance = new TheSellingPartnerApiForInvoices.Invoice();
      });

      it('should create an instance of Invoice', function() {
        // TODO: update the code to test Invoice
        expect(instance).to.be.a(TheSellingPartnerApiForInvoices.Invoice);
      });

      it('should have the property _date (base name: "date")', function() {
        // TODO: update the code to test the property _date
        expect(instance).to.have.property('_date');
        // expect(instance._date).to.be(expectedValueLiteral);
      });

      it('should have the property errorCode (base name: "errorCode")', function() {
        // TODO: update the code to test the property errorCode
        expect(instance).to.have.property('errorCode');
        // expect(instance.errorCode).to.be(expectedValueLiteral);
      });

      it('should have the property externalInvoiceId (base name: "externalInvoiceId")', function() {
        // TODO: update the code to test the property externalInvoiceId
        expect(instance).to.have.property('externalInvoiceId');
        // expect(instance.externalInvoiceId).to.be(expectedValueLiteral);
      });

      it('should have the property govResponse (base name: "govResponse")', function() {
        // TODO: update the code to test the property govResponse
        expect(instance).to.have.property('govResponse');
        // expect(instance.govResponse).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property invoiceType (base name: "invoiceType")', function() {
        // TODO: update the code to test the property invoiceType
        expect(instance).to.have.property('invoiceType');
        // expect(instance.invoiceType).to.be(expectedValueLiteral);
      });

      it('should have the property series (base name: "series")', function() {
        // TODO: update the code to test the property series
        expect(instance).to.have.property('series');
        // expect(instance.series).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property transactionIds (base name: "transactionIds")', function() {
        // TODO: update the code to test the property transactionIds
        expect(instance).to.have.property('transactionIds');
        // expect(instance.transactionIds).to.be(expectedValueLiteral);
      });

      it('should have the property transactionType (base name: "transactionType")', function() {
        // TODO: update the code to test the property transactionType
        expect(instance).to.have.property('transactionType');
        // expect(instance.transactionType).to.be(expectedValueLiteral);
      });

    });
  });

}));
