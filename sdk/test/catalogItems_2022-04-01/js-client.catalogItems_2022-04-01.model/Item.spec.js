/*
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, refer to the [Catalog Items API Use Case Guide](doc:catalog-items-api-v2022-04-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-04-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/catalogItems_2022-04-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/catalogItems_2022-04-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForCatalogItems);
  }
}(this, function(expect, SellingPartnerApiForCatalogItems) {
  'use strict';

  var instance;

  describe('catalogItems_2022-04-01', function() {
    describe('Item', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForCatalogItems.Item();
      });

      it('should create an instance of Item', function() {
        // TODO: update the code to test Item
        expect(instance).to.be.a(SellingPartnerApiForCatalogItems.Item);
      });

      it('should have the property asin (base name: "asin")', function() {
        // TODO: update the code to test the property asin
        expect(instance).to.have.property('asin');
        // expect(instance.asin).to.be(expectedValueLiteral);
      });

      it('should have the property attributes (base name: "attributes")', function() {
        // TODO: update the code to test the property attributes
        expect(instance).to.have.property('attributes');
        // expect(instance.attributes).to.be(expectedValueLiteral);
      });

      it('should have the property classifications (base name: "classifications")', function() {
        // TODO: update the code to test the property classifications
        expect(instance).to.have.property('classifications');
        // expect(instance.classifications).to.be(expectedValueLiteral);
      });

      it('should have the property dimensions (base name: "dimensions")', function() {
        // TODO: update the code to test the property dimensions
        expect(instance).to.have.property('dimensions');
        // expect(instance.dimensions).to.be(expectedValueLiteral);
      });

      it('should have the property identifiers (base name: "identifiers")', function() {
        // TODO: update the code to test the property identifiers
        expect(instance).to.have.property('identifiers');
        // expect(instance.identifiers).to.be(expectedValueLiteral);
      });

      it('should have the property images (base name: "images")', function() {
        // TODO: update the code to test the property images
        expect(instance).to.have.property('images');
        // expect(instance.images).to.be(expectedValueLiteral);
      });

      it('should have the property productTypes (base name: "productTypes")', function() {
        // TODO: update the code to test the property productTypes
        expect(instance).to.have.property('productTypes');
        // expect(instance.productTypes).to.be(expectedValueLiteral);
      });

      it('should have the property relationships (base name: "relationships")', function() {
        // TODO: update the code to test the property relationships
        expect(instance).to.have.property('relationships');
        // expect(instance.relationships).to.be(expectedValueLiteral);
      });

      it('should have the property salesRanks (base name: "salesRanks")', function() {
        // TODO: update the code to test the property salesRanks
        expect(instance).to.have.property('salesRanks');
        // expect(instance.salesRanks).to.be(expectedValueLiteral);
      });

      it('should have the property summaries (base name: "summaries")', function() {
        // TODO: update the code to test the property summaries
        expect(instance).to.have.property('summaries');
        // expect(instance.summaries).to.be(expectedValueLiteral);
      });

      it('should have the property vendorDetails (base name: "vendorDetails")', function() {
        // TODO: update the code to test the property vendorDetails
        expect(instance).to.have.property('vendorDetails');
        // expect(instance.vendorDetails).to.be(expectedValueLiteral);
      });

    });
  });

}));
