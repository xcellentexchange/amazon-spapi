/*
 * Selling Partner API for Supply Sources
 * Manage configurations and capabilities of seller supply sources.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/supplySources_2020-07-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/supplySources_2020-07-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForSupplySources);
  }
}(this, function(expect, SellingPartnerApiForSupplySources) {
  'use strict';

  var instance;

  describe('supplySources_2020-07-01', function() {
    describe('PickupChannel', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForSupplySources.PickupChannel();
      });

      it('should create an instance of PickupChannel', function() {
        // TODO: update the code to test PickupChannel
        expect(instance).to.be.a(SellingPartnerApiForSupplySources.PickupChannel);
      });

      it('should have the property inventoryHoldPeriod (base name: "inventoryHoldPeriod")', function() {
        // TODO: update the code to test the property inventoryHoldPeriod
        expect(instance).to.have.property('inventoryHoldPeriod');
        // expect(instance.inventoryHoldPeriod).to.be(expectedValueLiteral);
      });

      it('should have the property isSupported (base name: "isSupported")', function() {
        // TODO: update the code to test the property isSupported
        expect(instance).to.have.property('isSupported');
        // expect(instance.isSupported).to.be(expectedValueLiteral);
      });

      it('should have the property operationalConfiguration (base name: "operationalConfiguration")', function() {
        // TODO: update the code to test the property operationalConfiguration
        expect(instance).to.have.property('operationalConfiguration');
        // expect(instance.operationalConfiguration).to.be(expectedValueLiteral);
      });

      it('should have the property inStorePickupConfiguration (base name: "inStorePickupConfiguration")', function() {
        // TODO: update the code to test the property inStorePickupConfiguration
        expect(instance).to.have.property('inStorePickupConfiguration');
        // expect(instance.inStorePickupConfiguration).to.be(expectedValueLiteral);
      });

      it('should have the property curbsidePickupConfiguration (base name: "curbsidePickupConfiguration")', function() {
        // TODO: update the code to test the property curbsidePickupConfiguration
        expect(instance).to.have.property('curbsidePickupConfiguration');
        // expect(instance.curbsidePickupConfiguration).to.be(expectedValueLiteral);
      });

    });
  });

}));
