/*
 * Selling Partner API for Feeds
 * The Selling Partner API for Feeds lets you upload data to Amazon on behalf of a selling partner.
 *
 * OpenAPI spec version: 2021-06-30
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/feeds_2021-06-30/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/feeds_2021-06-30/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFeeds);
  }
}(this, function(expect, SellingPartnerApiForFeeds) {
  'use strict';

  var instance;

  describe('feeds_2021-06-30', function() {
    describe('Feed', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForFeeds.Feed();
      });

      it('should create an instance of Feed', function() {
        // TODO: update the code to test Feed
        expect(instance).to.be.a(SellingPartnerApiForFeeds.Feed);
      });

      it('should have the property feedId (base name: "feedId")', function() {
        // TODO: update the code to test the property feedId
        expect(instance).to.have.property('feedId');
        // expect(instance.feedId).to.be(expectedValueLiteral);
      });

      it('should have the property feedType (base name: "feedType")', function() {
        // TODO: update the code to test the property feedType
        expect(instance).to.have.property('feedType');
        // expect(instance.feedType).to.be(expectedValueLiteral);
      });

      it('should have the property marketplaceIds (base name: "marketplaceIds")', function() {
        // TODO: update the code to test the property marketplaceIds
        expect(instance).to.have.property('marketplaceIds');
        // expect(instance.marketplaceIds).to.be(expectedValueLiteral);
      });

      it('should have the property createdTime (base name: "createdTime")', function() {
        // TODO: update the code to test the property createdTime
        expect(instance).to.have.property('createdTime');
        // expect(instance.createdTime).to.be(expectedValueLiteral);
      });

      it('should have the property processingStatus (base name: "processingStatus")', function() {
        // TODO: update the code to test the property processingStatus
        expect(instance).to.have.property('processingStatus');
        // expect(instance.processingStatus).to.be(expectedValueLiteral);
      });

      it('should have the property processingStartTime (base name: "processingStartTime")', function() {
        // TODO: update the code to test the property processingStartTime
        expect(instance).to.have.property('processingStartTime');
        // expect(instance.processingStartTime).to.be(expectedValueLiteral);
      });

      it('should have the property processingEndTime (base name: "processingEndTime")', function() {
        // TODO: update the code to test the property processingEndTime
        expect(instance).to.have.property('processingEndTime');
        // expect(instance.processingEndTime).to.be(expectedValueLiteral);
      });

      it('should have the property resultFeedDocumentId (base name: "resultFeedDocumentId")', function() {
        // TODO: update the code to test the property resultFeedDocumentId
        expect(instance).to.have.property('resultFeedDocumentId');
        // expect(instance.resultFeedDocumentId).to.be(expectedValueLiteral);
      });

    });
  });

}));
