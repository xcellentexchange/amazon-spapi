/*
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorOrders/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorOrders/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForRetailProcurementOrders);
  }
}(this, function(expect, SellingPartnerApiForRetailProcurementOrders) {
  'use strict';

  var instance;

  describe('vendorOrders', function() {
    describe('ImportDetails', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForRetailProcurementOrders.ImportDetails();
      });

      it('should create an instance of ImportDetails', function() {
        // TODO: update the code to test ImportDetails
        expect(instance).to.be.a(SellingPartnerApiForRetailProcurementOrders.ImportDetails);
      });

      it('should have the property methodOfPayment (base name: "methodOfPayment")', function() {
        // TODO: update the code to test the property methodOfPayment
        expect(instance).to.have.property('methodOfPayment');
        // expect(instance.methodOfPayment).to.be(expectedValueLiteral);
      });

      it('should have the property internationalCommercialTerms (base name: "internationalCommercialTerms")', function() {
        // TODO: update the code to test the property internationalCommercialTerms
        expect(instance).to.have.property('internationalCommercialTerms');
        // expect(instance.internationalCommercialTerms).to.be(expectedValueLiteral);
      });

      it('should have the property portOfDelivery (base name: "portOfDelivery")', function() {
        // TODO: update the code to test the property portOfDelivery
        expect(instance).to.have.property('portOfDelivery');
        // expect(instance.portOfDelivery).to.be(expectedValueLiteral);
      });

      it('should have the property importContainers (base name: "importContainers")', function() {
        // TODO: update the code to test the property importContainers
        expect(instance).to.have.property('importContainers');
        // expect(instance.importContainers).to.be(expectedValueLiteral);
      });

      it('should have the property shippingInstructions (base name: "shippingInstructions")', function() {
        // TODO: update the code to test the property shippingInstructions
        expect(instance).to.have.property('shippingInstructions');
        // expect(instance.shippingInstructions).to.be(expectedValueLiteral);
      });

    });
  });

}));
