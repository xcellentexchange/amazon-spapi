/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentOutbound_2020-07-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentOutbound_2020-07-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApisForFulfillmentOutbound);
  }
}(this, function(expect, SellingPartnerApisForFulfillmentOutbound) {
  'use strict';

  var instance;

  describe('fulfillmentOutbound_2020-07-01', function() {
    describe('FulfillmentShipmentPackage', function() {
      beforeEach(function() {
        instance = new SellingPartnerApisForFulfillmentOutbound.FulfillmentShipmentPackage();
      });

      it('should create an instance of FulfillmentShipmentPackage', function() {
        // TODO: update the code to test FulfillmentShipmentPackage
        expect(instance).to.be.a(SellingPartnerApisForFulfillmentOutbound.FulfillmentShipmentPackage);
      });

      it('should have the property packageNumber (base name: "packageNumber")', function() {
        // TODO: update the code to test the property packageNumber
        expect(instance).to.have.property('packageNumber');
        // expect(instance.packageNumber).to.be(expectedValueLiteral);
      });

      it('should have the property carrierCode (base name: "carrierCode")', function() {
        // TODO: update the code to test the property carrierCode
        expect(instance).to.have.property('carrierCode');
        // expect(instance.carrierCode).to.be(expectedValueLiteral);
      });

      it('should have the property trackingNumber (base name: "trackingNumber")', function() {
        // TODO: update the code to test the property trackingNumber
        expect(instance).to.have.property('trackingNumber');
        // expect(instance.trackingNumber).to.be(expectedValueLiteral);
      });

      it('should have the property estimatedArrivalDate (base name: "estimatedArrivalDate")', function() {
        // TODO: update the code to test the property estimatedArrivalDate
        expect(instance).to.have.property('estimatedArrivalDate');
        // expect(instance.estimatedArrivalDate).to.be(expectedValueLiteral);
      });

      it('should have the property lockerDetails (base name: "lockerDetails")', function() {
        // TODO: update the code to test the property lockerDetails
        expect(instance).to.have.property('lockerDetails');
        // expect(instance.lockerDetails).to.be(expectedValueLiteral);
      });

      it('should have the property deliveryInformation (base name: "deliveryInformation")', function() {
        // TODO: update the code to test the property deliveryInformation
        expect(instance).to.have.property('deliveryInformation');
        // expect(instance.deliveryInformation).to.be(expectedValueLiteral);
      });

    });
  });

}));
