/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentOutbound_2020-07-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentOutbound_2020-07-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApisForFulfillmentOutbound);
  }
}(this, function(expect, SellingPartnerApisForFulfillmentOutbound) {
  'use strict';

  var instance;

  describe('fulfillmentOutbound_2020-07-01', function() {
    describe('UpdateFulfillmentOrderRequest', function() {
      beforeEach(function() {
        instance = new SellingPartnerApisForFulfillmentOutbound.UpdateFulfillmentOrderRequest();
      });

      it('should create an instance of UpdateFulfillmentOrderRequest', function() {
        // TODO: update the code to test UpdateFulfillmentOrderRequest
        expect(instance).to.be.a(SellingPartnerApisForFulfillmentOutbound.UpdateFulfillmentOrderRequest);
      });

      it('should have the property marketplaceId (base name: "marketplaceId")', function() {
        // TODO: update the code to test the property marketplaceId
        expect(instance).to.have.property('marketplaceId');
        // expect(instance.marketplaceId).to.be(expectedValueLiteral);
      });

      it('should have the property displayableOrderId (base name: "displayableOrderId")', function() {
        // TODO: update the code to test the property displayableOrderId
        expect(instance).to.have.property('displayableOrderId');
        // expect(instance.displayableOrderId).to.be(expectedValueLiteral);
      });

      it('should have the property displayableOrderDate (base name: "displayableOrderDate")', function() {
        // TODO: update the code to test the property displayableOrderDate
        expect(instance).to.have.property('displayableOrderDate');
        // expect(instance.displayableOrderDate).to.be(expectedValueLiteral);
      });

      it('should have the property displayableOrderComment (base name: "displayableOrderComment")', function() {
        // TODO: update the code to test the property displayableOrderComment
        expect(instance).to.have.property('displayableOrderComment');
        // expect(instance.displayableOrderComment).to.be(expectedValueLiteral);
      });

      it('should have the property shippingSpeedCategory (base name: "shippingSpeedCategory")', function() {
        // TODO: update the code to test the property shippingSpeedCategory
        expect(instance).to.have.property('shippingSpeedCategory');
        // expect(instance.shippingSpeedCategory).to.be(expectedValueLiteral);
      });

      it('should have the property destinationAddress (base name: "destinationAddress")', function() {
        // TODO: update the code to test the property destinationAddress
        expect(instance).to.have.property('destinationAddress');
        // expect(instance.destinationAddress).to.be(expectedValueLiteral);
      });

      it('should have the property fulfillmentAction (base name: "fulfillmentAction")', function() {
        // TODO: update the code to test the property fulfillmentAction
        expect(instance).to.have.property('fulfillmentAction');
        // expect(instance.fulfillmentAction).to.be(expectedValueLiteral);
      });

      it('should have the property fulfillmentPolicy (base name: "fulfillmentPolicy")', function() {
        // TODO: update the code to test the property fulfillmentPolicy
        expect(instance).to.have.property('fulfillmentPolicy');
        // expect(instance.fulfillmentPolicy).to.be(expectedValueLiteral);
      });

      it('should have the property shipFromCountryCode (base name: "shipFromCountryCode")', function() {
        // TODO: update the code to test the property shipFromCountryCode
        expect(instance).to.have.property('shipFromCountryCode');
        // expect(instance.shipFromCountryCode).to.be(expectedValueLiteral);
      });

      it('should have the property notificationEmails (base name: "notificationEmails")', function() {
        // TODO: update the code to test the property notificationEmails
        expect(instance).to.have.property('notificationEmails');
        // expect(instance.notificationEmails).to.be(expectedValueLiteral);
      });

      it('should have the property featureConstraints (base name: "featureConstraints")', function() {
        // TODO: update the code to test the property featureConstraints
        expect(instance).to.have.property('featureConstraints');
        // expect(instance.featureConstraints).to.be(expectedValueLiteral);
      });

      it('should have the property items (base name: "items")', function() {
        // TODO: update the code to test the property items
        expect(instance).to.have.property('items');
        // expect(instance.items).to.be(expectedValueLiteral);
      });

    });
  });

}));
