/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentOutbound_2020-07-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentOutbound_2020-07-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApisForFulfillmentOutbound);
  }
}(this, function(expect, SellingPartnerApisForFulfillmentOutbound) {
  'use strict';

  var instance;

  describe('fulfillmentOutbound_2020-07-01', function() {
    describe('GetFulfillmentOrderResult', function() {
      beforeEach(function() {
        instance = new SellingPartnerApisForFulfillmentOutbound.GetFulfillmentOrderResult();
      });

      it('should create an instance of GetFulfillmentOrderResult', function() {
        // TODO: update the code to test GetFulfillmentOrderResult
        expect(instance).to.be.a(SellingPartnerApisForFulfillmentOutbound.GetFulfillmentOrderResult);
      });

      it('should have the property fulfillmentOrder (base name: "fulfillmentOrder")', function() {
        // TODO: update the code to test the property fulfillmentOrder
        expect(instance).to.have.property('fulfillmentOrder');
        // expect(instance.fulfillmentOrder).to.be(expectedValueLiteral);
      });

      it('should have the property fulfillmentOrderItems (base name: "fulfillmentOrderItems")', function() {
        // TODO: update the code to test the property fulfillmentOrderItems
        expect(instance).to.have.property('fulfillmentOrderItems');
        // expect(instance.fulfillmentOrderItems).to.be(expectedValueLiteral);
      });

      it('should have the property fulfillmentShipments (base name: "fulfillmentShipments")', function() {
        // TODO: update the code to test the property fulfillmentShipments
        expect(instance).to.have.property('fulfillmentShipments');
        // expect(instance.fulfillmentShipments).to.be(expectedValueLiteral);
      });

      it('should have the property returnItems (base name: "returnItems")', function() {
        // TODO: update the code to test the property returnItems
        expect(instance).to.have.property('returnItems');
        // expect(instance.returnItems).to.be(expectedValueLiteral);
      });

      it('should have the property returnAuthorizations (base name: "returnAuthorizations")', function() {
        // TODO: update the code to test the property returnAuthorizations
        expect(instance).to.have.property('returnAuthorizations');
        // expect(instance.returnAuthorizations).to.be(expectedValueLiteral);
      });

      it('should have the property paymentInformation (base name: "paymentInformation")', function() {
        // TODO: update the code to test the property paymentInformation
        expect(instance).to.have.property('paymentInformation');
        // expect(instance.paymentInformation).to.be(expectedValueLiteral);
      });

    });
  });

}));
