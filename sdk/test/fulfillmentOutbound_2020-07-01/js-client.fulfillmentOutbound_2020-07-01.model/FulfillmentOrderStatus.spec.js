/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentOutbound_2020-07-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentOutbound_2020-07-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApisForFulfillmentOutbound);
  }
}(this, function(expect, SellingPartnerApisForFulfillmentOutbound) {
  'use strict';

  var instance;

  describe('fulfillmentOutbound_2020-07-01', function() {
    describe('FulfillmentOrderStatus', function() {
      beforeEach(function() {
        instance = SellingPartnerApisForFulfillmentOutbound.FulfillmentOrderStatus;
      });

      it('should create an instance of FulfillmentOrderStatus', function() {
        // TODO: update the code to test FulfillmentOrderStatus
        expect(instance).to.be.a('object');
      });

      it('should have the property _new', function() {
        expect(instance).to.have.property('_new');
        expect(instance._new).to.be("New");
      });

      it('should have the property received', function() {
        expect(instance).to.have.property('received');
        expect(instance.received).to.be("Received");
      });

      it('should have the property planning', function() {
        expect(instance).to.have.property('planning');
        expect(instance.planning).to.be("Planning");
      });

      it('should have the property processing', function() {
        expect(instance).to.have.property('processing');
        expect(instance.processing).to.be("Processing");
      });

      it('should have the property cancelled', function() {
        expect(instance).to.have.property('cancelled');
        expect(instance.cancelled).to.be("Cancelled");
      });

      it('should have the property complete', function() {
        expect(instance).to.have.property('complete');
        expect(instance.complete).to.be("Complete");
      });

      it('should have the property completePartialled', function() {
        expect(instance).to.have.property('completePartialled');
        expect(instance.completePartialled).to.be("CompletePartialled");
      });

      it('should have the property unfulfillable', function() {
        expect(instance).to.have.property('unfulfillable');
        expect(instance.unfulfillable).to.be("Unfulfillable");
      });

      it('should have the property invalid', function() {
        expect(instance).to.have.property('invalid');
        expect(instance.invalid).to.be("Invalid");
      });

    });
  });

}));
