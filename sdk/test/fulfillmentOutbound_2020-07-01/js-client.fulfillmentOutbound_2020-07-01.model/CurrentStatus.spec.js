/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentOutbound_2020-07-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentOutbound_2020-07-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApisForFulfillmentOutbound);
  }
}(this, function(expect, SellingPartnerApisForFulfillmentOutbound) {
  'use strict';

  var instance;

  describe('fulfillmentOutbound_2020-07-01', function() {
    describe('CurrentStatus', function() {
      beforeEach(function() {
        instance = SellingPartnerApisForFulfillmentOutbound.CurrentStatus;
      });

      it('should create an instance of CurrentStatus', function() {
        // TODO: update the code to test CurrentStatus
        expect(instance).to.be.a('object');
      });

      it('should have the property IN_TRANSIT', function() {
        expect(instance).to.have.property('IN_TRANSIT');
        expect(instance.IN_TRANSIT).to.be("IN_TRANSIT");
      });

      it('should have the property DELIVERED', function() {
        expect(instance).to.have.property('DELIVERED');
        expect(instance.DELIVERED).to.be("DELIVERED");
      });

      it('should have the property RETURNING', function() {
        expect(instance).to.have.property('RETURNING');
        expect(instance.RETURNING).to.be("RETURNING");
      });

      it('should have the property RETURNED', function() {
        expect(instance).to.have.property('RETURNED');
        expect(instance.RETURNED).to.be("RETURNED");
      });

      it('should have the property UNDELIVERABLE', function() {
        expect(instance).to.have.property('UNDELIVERABLE');
        expect(instance.UNDELIVERABLE).to.be("UNDELIVERABLE");
      });

      it('should have the property DELAYED', function() {
        expect(instance).to.have.property('DELAYED');
        expect(instance.DELAYED).to.be("DELAYED");
      });

      it('should have the property AVAILABLE_FOR_PICKUP', function() {
        expect(instance).to.have.property('AVAILABLE_FOR_PICKUP');
        expect(instance.AVAILABLE_FOR_PICKUP).to.be("AVAILABLE_FOR_PICKUP");
      });

      it('should have the property CUSTOMER_ACTION', function() {
        expect(instance).to.have.property('CUSTOMER_ACTION');
        expect(instance.CUSTOMER_ACTION).to.be("CUSTOMER_ACTION");
      });

      it('should have the property UNKNOWN', function() {
        expect(instance).to.have.property('UNKNOWN');
        expect(instance.UNKNOWN).to.be("UNKNOWN");
      });

      it('should have the property OUT_FOR_DELIVERY', function() {
        expect(instance).to.have.property('OUT_FOR_DELIVERY');
        expect(instance.OUT_FOR_DELIVERY).to.be("OUT_FOR_DELIVERY");
      });

      it('should have the property DELIVERY_ATTEMPTED', function() {
        expect(instance).to.have.property('DELIVERY_ATTEMPTED');
        expect(instance.DELIVERY_ATTEMPTED).to.be("DELIVERY_ATTEMPTED");
      });

      it('should have the property PICKUP_SUCCESSFUL', function() {
        expect(instance).to.have.property('PICKUP_SUCCESSFUL');
        expect(instance.PICKUP_SUCCESSFUL).to.be("PICKUP_SUCCESSFUL");
      });

      it('should have the property PICKUP_CANCELLED', function() {
        expect(instance).to.have.property('PICKUP_CANCELLED');
        expect(instance.PICKUP_CANCELLED).to.be("PICKUP_CANCELLED");
      });

      it('should have the property PICKUP_ATTEMPTED', function() {
        expect(instance).to.have.property('PICKUP_ATTEMPTED');
        expect(instance.PICKUP_ATTEMPTED).to.be("PICKUP_ATTEMPTED");
      });

      it('should have the property PICKUP_SCHEDULED', function() {
        expect(instance).to.have.property('PICKUP_SCHEDULED');
        expect(instance.PICKUP_SCHEDULED).to.be("PICKUP_SCHEDULED");
      });

      it('should have the property RETURN_REQUEST_ACCEPTED', function() {
        expect(instance).to.have.property('RETURN_REQUEST_ACCEPTED');
        expect(instance.RETURN_REQUEST_ACCEPTED).to.be("RETURN_REQUEST_ACCEPTED");
      });

      it('should have the property REFUND_ISSUED', function() {
        expect(instance).to.have.property('REFUND_ISSUED');
        expect(instance.REFUND_ISSUED).to.be("REFUND_ISSUED");
      });

      it('should have the property RETURN_RECEIVED_IN_FC', function() {
        expect(instance).to.have.property('RETURN_RECEIVED_IN_FC');
        expect(instance.RETURN_RECEIVED_IN_FC).to.be("RETURN_RECEIVED_IN_FC");
      });

    });
  });

}));
