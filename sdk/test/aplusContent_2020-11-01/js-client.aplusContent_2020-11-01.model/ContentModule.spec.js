/*
 * Selling Partner API for A+ Content Management
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/aplusContent_2020-11-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/aplusContent_2020-11-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForAContentManagement);
  }
}(this, function(expect, SellingPartnerApiForAContentManagement) {
  'use strict';

  var instance;

  describe('aplusContent_2020-11-01', function() {
    describe('ContentModule', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForAContentManagement.ContentModule();
      });

      it('should create an instance of ContentModule', function() {
        // TODO: update the code to test ContentModule
        expect(instance).to.be.a(SellingPartnerApiForAContentManagement.ContentModule);
      });

      it('should have the property contentModuleType (base name: "contentModuleType")', function() {
        // TODO: update the code to test the property contentModuleType
        expect(instance).to.have.property('contentModuleType');
        // expect(instance.contentModuleType).to.be(expectedValueLiteral);
      });

      it('should have the property standardCompanyLogo (base name: "standardCompanyLogo")', function() {
        // TODO: update the code to test the property standardCompanyLogo
        expect(instance).to.have.property('standardCompanyLogo');
        // expect(instance.standardCompanyLogo).to.be(expectedValueLiteral);
      });

      it('should have the property standardComparisonTable (base name: "standardComparisonTable")', function() {
        // TODO: update the code to test the property standardComparisonTable
        expect(instance).to.have.property('standardComparisonTable');
        // expect(instance.standardComparisonTable).to.be(expectedValueLiteral);
      });

      it('should have the property standardFourImageText (base name: "standardFourImageText")', function() {
        // TODO: update the code to test the property standardFourImageText
        expect(instance).to.have.property('standardFourImageText');
        // expect(instance.standardFourImageText).to.be(expectedValueLiteral);
      });

      it('should have the property standardFourImageTextQuadrant (base name: "standardFourImageTextQuadrant")', function() {
        // TODO: update the code to test the property standardFourImageTextQuadrant
        expect(instance).to.have.property('standardFourImageTextQuadrant');
        // expect(instance.standardFourImageTextQuadrant).to.be(expectedValueLiteral);
      });

      it('should have the property standardHeaderImageText (base name: "standardHeaderImageText")', function() {
        // TODO: update the code to test the property standardHeaderImageText
        expect(instance).to.have.property('standardHeaderImageText');
        // expect(instance.standardHeaderImageText).to.be(expectedValueLiteral);
      });

      it('should have the property standardImageSidebar (base name: "standardImageSidebar")', function() {
        // TODO: update the code to test the property standardImageSidebar
        expect(instance).to.have.property('standardImageSidebar');
        // expect(instance.standardImageSidebar).to.be(expectedValueLiteral);
      });

      it('should have the property standardImageTextOverlay (base name: "standardImageTextOverlay")', function() {
        // TODO: update the code to test the property standardImageTextOverlay
        expect(instance).to.have.property('standardImageTextOverlay');
        // expect(instance.standardImageTextOverlay).to.be(expectedValueLiteral);
      });

      it('should have the property standardMultipleImageText (base name: "standardMultipleImageText")', function() {
        // TODO: update the code to test the property standardMultipleImageText
        expect(instance).to.have.property('standardMultipleImageText');
        // expect(instance.standardMultipleImageText).to.be(expectedValueLiteral);
      });

      it('should have the property standardProductDescription (base name: "standardProductDescription")', function() {
        // TODO: update the code to test the property standardProductDescription
        expect(instance).to.have.property('standardProductDescription');
        // expect(instance.standardProductDescription).to.be(expectedValueLiteral);
      });

      it('should have the property standardSingleImageHighlights (base name: "standardSingleImageHighlights")', function() {
        // TODO: update the code to test the property standardSingleImageHighlights
        expect(instance).to.have.property('standardSingleImageHighlights');
        // expect(instance.standardSingleImageHighlights).to.be(expectedValueLiteral);
      });

      it('should have the property standardSingleImageSpecsDetail (base name: "standardSingleImageSpecsDetail")', function() {
        // TODO: update the code to test the property standardSingleImageSpecsDetail
        expect(instance).to.have.property('standardSingleImageSpecsDetail');
        // expect(instance.standardSingleImageSpecsDetail).to.be(expectedValueLiteral);
      });

      it('should have the property standardSingleSideImage (base name: "standardSingleSideImage")', function() {
        // TODO: update the code to test the property standardSingleSideImage
        expect(instance).to.have.property('standardSingleSideImage');
        // expect(instance.standardSingleSideImage).to.be(expectedValueLiteral);
      });

      it('should have the property standardTechSpecs (base name: "standardTechSpecs")', function() {
        // TODO: update the code to test the property standardTechSpecs
        expect(instance).to.have.property('standardTechSpecs');
        // expect(instance.standardTechSpecs).to.be(expectedValueLiteral);
      });

      it('should have the property standardText (base name: "standardText")', function() {
        // TODO: update the code to test the property standardText
        expect(instance).to.have.property('standardText');
        // expect(instance.standardText).to.be(expectedValueLiteral);
      });

      it('should have the property standardThreeImageText (base name: "standardThreeImageText")', function() {
        // TODO: update the code to test the property standardThreeImageText
        expect(instance).to.have.property('standardThreeImageText');
        // expect(instance.standardThreeImageText).to.be(expectedValueLiteral);
      });

    });
  });

}));
