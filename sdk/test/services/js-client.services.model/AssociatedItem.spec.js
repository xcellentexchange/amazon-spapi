/*
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/services/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/services/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForServices);
  }
}(this, function(expect, SellingPartnerApiForServices) {
  'use strict';

  var instance;

  describe('services', function() {
    describe('AssociatedItem', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForServices.AssociatedItem();
      });

      it('should create an instance of AssociatedItem', function() {
        // TODO: update the code to test AssociatedItem
        expect(instance).to.be.a(SellingPartnerApiForServices.AssociatedItem);
      });

      it('should have the property asin (base name: "asin")', function() {
        // TODO: update the code to test the property asin
        expect(instance).to.have.property('asin');
        // expect(instance.asin).to.be(expectedValueLiteral);
      });

      it('should have the property title (base name: "title")', function() {
        // TODO: update the code to test the property title
        expect(instance).to.have.property('title');
        // expect(instance.title).to.be(expectedValueLiteral);
      });

      it('should have the property quantity (base name: "quantity")', function() {
        // TODO: update the code to test the property quantity
        expect(instance).to.have.property('quantity');
        // expect(instance.quantity).to.be(expectedValueLiteral);
      });

      it('should have the property orderId (base name: "orderId")', function() {
        // TODO: update the code to test the property orderId
        expect(instance).to.have.property('orderId');
        // expect(instance.orderId).to.be(expectedValueLiteral);
      });

      it('should have the property itemStatus (base name: "itemStatus")', function() {
        // TODO: update the code to test the property itemStatus
        expect(instance).to.have.property('itemStatus');
        // expect(instance.itemStatus).to.be(expectedValueLiteral);
      });

      it('should have the property brandName (base name: "brandName")', function() {
        // TODO: update the code to test the property brandName
        expect(instance).to.have.property('brandName');
        // expect(instance.brandName).to.be(expectedValueLiteral);
      });

      it('should have the property itemDelivery (base name: "itemDelivery")', function() {
        // TODO: update the code to test the property itemDelivery
        expect(instance).to.have.property('itemDelivery');
        // expect(instance.itemDelivery).to.be(expectedValueLiteral);
      });

    });
  });

}));
