/*
 * Selling Partner API for Tokens 
 * The Selling Partner API for Tokens provides a secure way to access a customer's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes subsequent calls to restricted operations that correspond to the restricted resources that you specified.  For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide).
 *
 * OpenAPI spec version: 2021-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/tokens_2021-03-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/tokens_2021-03-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForTokens_);
  }
}(this, function(expect, SellingPartnerApiForTokens_) {
  'use strict';

  var instance;

  describe('tokens_2021-03-01', function() {
    describe('CreateRestrictedDataTokenResponse', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForTokens_.CreateRestrictedDataTokenResponse();
      });

      it('should create an instance of CreateRestrictedDataTokenResponse', function() {
        // TODO: update the code to test CreateRestrictedDataTokenResponse
        expect(instance).to.be.a(SellingPartnerApiForTokens_.CreateRestrictedDataTokenResponse);
      });

      it('should have the property restrictedDataToken (base name: "restrictedDataToken")', function() {
        // TODO: update the code to test the property restrictedDataToken
        expect(instance).to.have.property('restrictedDataToken');
        // expect(instance.restrictedDataToken).to.be(expectedValueLiteral);
      });

      it('should have the property expiresIn (base name: "expiresIn")', function() {
        // TODO: update the code to test the property expiresIn
        expect(instance).to.have.property('expiresIn');
        // expect(instance.expiresIn).to.be(expectedValueLiteral);
      });

    });
  });

}));
