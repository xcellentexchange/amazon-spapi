/*
 * Selling Partner API for Tokens 
 * The Selling Partner API for Tokens provides a secure way to access a customer's PII (Personally Identifiable Information). You can call the Tokens API to get a Restricted Data Token (RDT) for one or more restricted resources that you specify. The RDT authorizes subsequent calls to restricted operations that correspond to the restricted resources that you specified.  For more information, see the [Tokens API Use Case Guide](doc:tokens-api-use-case-guide).
 *
 * OpenAPI spec version: 2021-03-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/tokens_2021-03-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/tokens_2021-03-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForTokens_);
  }
}(this, function(expect, SellingPartnerApiForTokens_) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForTokens_.TokensApi();
  });

  describe('tokens_2021-03-01', function() {
    describe('TokensApi', function() {
      describe('createRestrictedDataToken', function() {
        it('should call createRestrictedDataToken successfully', function(done) {
          // TODO: uncomment, update parameter values for createRestrictedDataToken call and complete the assertions
          /*
          var body = new SellingPartnerApiForTokens_.CreateRestrictedDataTokenRequest();
          body.targetApplication = "";
          body.restrictedResources = [new SellingPartnerApiForTokens_.RestrictedResource()];
          body.restrictedResources[0].method = "GET";
          body.restrictedResources[0].path = "";
          body.restrictedResources[0].dataElements = [""];

          instance.createRestrictedDataToken(body).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForTokens_.CreateRestrictedDataTokenResponse);
            expect(data.restrictedDataToken).to.be.a('string');
            // expect(data.restrictedDataToken).to.be("");
            expect(data.expiresIn).to.be.a('number');
            // expect(data.expiresIn).to.be(0);

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
