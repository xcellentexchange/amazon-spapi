/*
 * Selling Partner API for Uploads
 * The Uploads API lets you upload files that you can programmatically access using other Selling Partner APIs, such as the A+ Content API and the Messaging API.
 *
 * OpenAPI spec version: 2020-11-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/uploads_2020-11-01/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/uploads_2020-11-01/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForUploads);
  }
}(this, function(expect, SellingPartnerApiForUploads) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForUploads.UploadsApi();
  });

  describe('uploads_2020-11-01', function() {
    describe('UploadsApi', function() {
      describe('createUploadDestinationForResource', function() {
        it('should call createUploadDestinationForResource successfully', function(done) {
          // TODO: uncomment, update parameter values for createUploadDestinationForResource call and complete the assertions
          /*
          var marketplaceIds = ["marketplaceIds_example"];
          var contentMD5 = "contentMD5_example";
          var resource = "resource_example";
          var opts = {};
          opts.contentType = "contentType_example";

          instance.createUploadDestinationForResource(marketplaceIds, contentMD5, resource, opts).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForUploads.CreateUploadDestinationResponse);
            expect(data.payload).to.be.a(SellingPartnerApiForUploads.UploadDestination);
                  expect(data.payload.uploadDestinationId).to.be.a('string');
              // expect(data.payload.uploadDestinationId).to.be("");
              expect(data.payload.url).to.be.a('string');
              // expect(data.payload.url).to.be("");
              expect(data.payload.headers).to.be.a(Object);
              // expect(data.payload.headers).to.be();
            expect(data.errors).to.be.a(SellingPartnerApiForUploads.ErrorList);
    
            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
