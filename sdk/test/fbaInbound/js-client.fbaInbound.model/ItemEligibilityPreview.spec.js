/*
 * Selling Partner API for FBA Inbound Eligibilty
 * With the FBA Inbound Eligibility API, you can build applications that let sellers get eligibility previews for items before shipping them to Amazon's fulfillment centers. With this API you can find out if an item is eligible for inbound shipment to Amazon's fulfillment centers in a specific marketplace. You can also find out if an item is eligible for using the manufacturer barcode for FBA inventory tracking. Sellers can use this information to inform their decisions about which items to ship Amazon's fulfillment centers.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fbaInbound/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fbaInbound/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFbaInboundEligibilty);
  }
}(this, function(expect, SellingPartnerApiForFbaInboundEligibilty) {
  'use strict';

  var instance;

  describe('fbaInbound', function() {
    describe('ItemEligibilityPreview', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForFbaInboundEligibilty.ItemEligibilityPreview();
      });

      it('should create an instance of ItemEligibilityPreview', function() {
        // TODO: update the code to test ItemEligibilityPreview
        expect(instance).to.be.a(SellingPartnerApiForFbaInboundEligibilty.ItemEligibilityPreview);
      });

      it('should have the property asin (base name: "asin")', function() {
        // TODO: update the code to test the property asin
        expect(instance).to.have.property('asin');
        // expect(instance.asin).to.be(expectedValueLiteral);
      });

      it('should have the property marketplaceId (base name: "marketplaceId")', function() {
        // TODO: update the code to test the property marketplaceId
        expect(instance).to.have.property('marketplaceId');
        // expect(instance.marketplaceId).to.be(expectedValueLiteral);
      });

      it('should have the property program (base name: "program")', function() {
        // TODO: update the code to test the property program
        expect(instance).to.have.property('program');
        // expect(instance.program).to.be(expectedValueLiteral);
      });

      it('should have the property isEligibleForProgram (base name: "isEligibleForProgram")', function() {
        // TODO: update the code to test the property isEligibleForProgram
        expect(instance).to.have.property('isEligibleForProgram');
        // expect(instance.isEligibleForProgram).to.be(expectedValueLiteral);
      });

      it('should have the property ineligibilityReasonList (base name: "ineligibilityReasonList")', function() {
        // TODO: update the code to test the property ineligibilityReasonList
        expect(instance).to.have.property('ineligibilityReasonList');
        // expect(instance.ineligibilityReasonList).to.be(expectedValueLiteral);
      });

    });
  });

}));
