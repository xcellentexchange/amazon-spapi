/*
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/shipmentInvoicingV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/shipmentInvoicingV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForShipmentInvoicing);
  }
}(this, function(expect, SellingPartnerApiForShipmentInvoicing) {
  'use strict';

  var instance;

  describe('shipmentInvoicingV0', function() {
    describe('ShipmentDetail', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForShipmentInvoicing.ShipmentDetail();
      });

      it('should create an instance of ShipmentDetail', function() {
        // TODO: update the code to test ShipmentDetail
        expect(instance).to.be.a(SellingPartnerApiForShipmentInvoicing.ShipmentDetail);
      });

      it('should have the property warehouseId (base name: "WarehouseId")', function() {
        // TODO: update the code to test the property warehouseId
        expect(instance).to.have.property('warehouseId');
        // expect(instance.warehouseId).to.be(expectedValueLiteral);
      });

      it('should have the property amazonOrderId (base name: "AmazonOrderId")', function() {
        // TODO: update the code to test the property amazonOrderId
        expect(instance).to.have.property('amazonOrderId');
        // expect(instance.amazonOrderId).to.be(expectedValueLiteral);
      });

      it('should have the property amazonShipmentId (base name: "AmazonShipmentId")', function() {
        // TODO: update the code to test the property amazonShipmentId
        expect(instance).to.have.property('amazonShipmentId');
        // expect(instance.amazonShipmentId).to.be(expectedValueLiteral);
      });

      it('should have the property purchaseDate (base name: "PurchaseDate")', function() {
        // TODO: update the code to test the property purchaseDate
        expect(instance).to.have.property('purchaseDate');
        // expect(instance.purchaseDate).to.be(expectedValueLiteral);
      });

      it('should have the property shippingAddress (base name: "ShippingAddress")', function() {
        // TODO: update the code to test the property shippingAddress
        expect(instance).to.have.property('shippingAddress');
        // expect(instance.shippingAddress).to.be(expectedValueLiteral);
      });

      it('should have the property paymentMethodDetails (base name: "PaymentMethodDetails")', function() {
        // TODO: update the code to test the property paymentMethodDetails
        expect(instance).to.have.property('paymentMethodDetails');
        // expect(instance.paymentMethodDetails).to.be(expectedValueLiteral);
      });

      it('should have the property marketplaceId (base name: "MarketplaceId")', function() {
        // TODO: update the code to test the property marketplaceId
        expect(instance).to.have.property('marketplaceId');
        // expect(instance.marketplaceId).to.be(expectedValueLiteral);
      });

      it('should have the property sellerId (base name: "SellerId")', function() {
        // TODO: update the code to test the property sellerId
        expect(instance).to.have.property('sellerId');
        // expect(instance.sellerId).to.be(expectedValueLiteral);
      });

      it('should have the property buyerName (base name: "BuyerName")', function() {
        // TODO: update the code to test the property buyerName
        expect(instance).to.have.property('buyerName');
        // expect(instance.buyerName).to.be(expectedValueLiteral);
      });

      it('should have the property buyerCounty (base name: "BuyerCounty")', function() {
        // TODO: update the code to test the property buyerCounty
        expect(instance).to.have.property('buyerCounty');
        // expect(instance.buyerCounty).to.be(expectedValueLiteral);
      });

      it('should have the property buyerTaxInfo (base name: "BuyerTaxInfo")', function() {
        // TODO: update the code to test the property buyerTaxInfo
        expect(instance).to.have.property('buyerTaxInfo');
        // expect(instance.buyerTaxInfo).to.be(expectedValueLiteral);
      });

      it('should have the property marketplaceTaxInfo (base name: "MarketplaceTaxInfo")', function() {
        // TODO: update the code to test the property marketplaceTaxInfo
        expect(instance).to.have.property('marketplaceTaxInfo');
        // expect(instance.marketplaceTaxInfo).to.be(expectedValueLiteral);
      });

      it('should have the property sellerDisplayName (base name: "SellerDisplayName")', function() {
        // TODO: update the code to test the property sellerDisplayName
        expect(instance).to.have.property('sellerDisplayName');
        // expect(instance.sellerDisplayName).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentItems (base name: "ShipmentItems")', function() {
        // TODO: update the code to test the property shipmentItems
        expect(instance).to.have.property('shipmentItems');
        // expect(instance.shipmentItems).to.be(expectedValueLiteral);
      });

    });
  });

}));
