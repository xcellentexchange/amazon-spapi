/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/productPricingV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/productPricingV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForPricing);
  }
}(this, function(expect, SellingPartnerApiForPricing) {
  'use strict';

  var instance;

  describe('productPricingV0', function() {
    describe('ConditionType', function() {
      beforeEach(function() {
        instance = SellingPartnerApiForPricing.ConditionType;
      });

      it('should create an instance of ConditionType', function() {
        // TODO: update the code to test ConditionType
        expect(instance).to.be.a('object');
      });

      it('should have the property _new', function() {
        expect(instance).to.have.property('_new');
        expect(instance._new).to.be("New");
      });

      it('should have the property used', function() {
        expect(instance).to.have.property('used');
        expect(instance.used).to.be("Used");
      });

      it('should have the property collectible', function() {
        expect(instance).to.have.property('collectible');
        expect(instance.collectible).to.be("Collectible");
      });

      it('should have the property refurbished', function() {
        expect(instance).to.have.property('refurbished');
        expect(instance.refurbished).to.be("Refurbished");
      });

      it('should have the property club', function() {
        expect(instance).to.have.property('club');
        expect(instance.club).to.be("Club");
      });

    });
  });

}));
