/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorShipments/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorShipments/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForRetailProcurementShipments);
  }
}(this, function(expect, SellingPartnerApiForRetailProcurementShipments) {
  'use strict';

  var instance;

  describe('vendorShipments', function() {
    describe('TransportationDetails', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForRetailProcurementShipments.TransportationDetails();
      });

      it('should create an instance of TransportationDetails', function() {
        // TODO: update the code to test TransportationDetails
        expect(instance).to.be.a(SellingPartnerApiForRetailProcurementShipments.TransportationDetails);
      });

      it('should have the property shipMode (base name: "shipMode")', function() {
        // TODO: update the code to test the property shipMode
        expect(instance).to.have.property('shipMode');
        // expect(instance.shipMode).to.be(expectedValueLiteral);
      });

      it('should have the property transportationMode (base name: "transportationMode")', function() {
        // TODO: update the code to test the property transportationMode
        expect(instance).to.have.property('transportationMode');
        // expect(instance.transportationMode).to.be(expectedValueLiteral);
      });

      it('should have the property shippedDate (base name: "shippedDate")', function() {
        // TODO: update the code to test the property shippedDate
        expect(instance).to.have.property('shippedDate');
        // expect(instance.shippedDate).to.be(expectedValueLiteral);
      });

      it('should have the property estimatedDeliveryDate (base name: "estimatedDeliveryDate")', function() {
        // TODO: update the code to test the property estimatedDeliveryDate
        expect(instance).to.have.property('estimatedDeliveryDate');
        // expect(instance.estimatedDeliveryDate).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentDeliveryDate (base name: "shipmentDeliveryDate")', function() {
        // TODO: update the code to test the property shipmentDeliveryDate
        expect(instance).to.have.property('shipmentDeliveryDate');
        // expect(instance.shipmentDeliveryDate).to.be(expectedValueLiteral);
      });

      it('should have the property carrierDetails (base name: "carrierDetails")', function() {
        // TODO: update the code to test the property carrierDetails
        expect(instance).to.have.property('carrierDetails');
        // expect(instance.carrierDetails).to.be(expectedValueLiteral);
      });

      it('should have the property billOfLadingNumber (base name: "billOfLadingNumber")', function() {
        // TODO: update the code to test the property billOfLadingNumber
        expect(instance).to.have.property('billOfLadingNumber');
        // expect(instance.billOfLadingNumber).to.be(expectedValueLiteral);
      });

    });
  });

}));
