/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorShipments/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorShipments/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForRetailProcurementShipments);
  }
}(this, function(expect, SellingPartnerApiForRetailProcurementShipments) {
  'use strict';

  var instance;

  describe('vendorShipments', function() {
    describe('ShipmentConfirmation', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForRetailProcurementShipments.ShipmentConfirmation();
      });

      it('should create an instance of ShipmentConfirmation', function() {
        // TODO: update the code to test ShipmentConfirmation
        expect(instance).to.be.a(SellingPartnerApiForRetailProcurementShipments.ShipmentConfirmation);
      });

      it('should have the property shipmentIdentifier (base name: "shipmentIdentifier")', function() {
        // TODO: update the code to test the property shipmentIdentifier
        expect(instance).to.have.property('shipmentIdentifier');
        // expect(instance.shipmentIdentifier).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentConfirmationType (base name: "shipmentConfirmationType")', function() {
        // TODO: update the code to test the property shipmentConfirmationType
        expect(instance).to.have.property('shipmentConfirmationType');
        // expect(instance.shipmentConfirmationType).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentType (base name: "shipmentType")', function() {
        // TODO: update the code to test the property shipmentType
        expect(instance).to.have.property('shipmentType');
        // expect(instance.shipmentType).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentStructure (base name: "shipmentStructure")', function() {
        // TODO: update the code to test the property shipmentStructure
        expect(instance).to.have.property('shipmentStructure');
        // expect(instance.shipmentStructure).to.be(expectedValueLiteral);
      });

      it('should have the property transportationDetails (base name: "transportationDetails")', function() {
        // TODO: update the code to test the property transportationDetails
        expect(instance).to.have.property('transportationDetails');
        // expect(instance.transportationDetails).to.be(expectedValueLiteral);
      });

      it('should have the property amazonReferenceNumber (base name: "amazonReferenceNumber")', function() {
        // TODO: update the code to test the property amazonReferenceNumber
        expect(instance).to.have.property('amazonReferenceNumber');
        // expect(instance.amazonReferenceNumber).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentConfirmationDate (base name: "shipmentConfirmationDate")', function() {
        // TODO: update the code to test the property shipmentConfirmationDate
        expect(instance).to.have.property('shipmentConfirmationDate');
        // expect(instance.shipmentConfirmationDate).to.be(expectedValueLiteral);
      });

      it('should have the property shippedDate (base name: "shippedDate")', function() {
        // TODO: update the code to test the property shippedDate
        expect(instance).to.have.property('shippedDate');
        // expect(instance.shippedDate).to.be(expectedValueLiteral);
      });

      it('should have the property estimatedDeliveryDate (base name: "estimatedDeliveryDate")', function() {
        // TODO: update the code to test the property estimatedDeliveryDate
        expect(instance).to.have.property('estimatedDeliveryDate');
        // expect(instance.estimatedDeliveryDate).to.be(expectedValueLiteral);
      });

      it('should have the property sellingParty (base name: "sellingParty")', function() {
        // TODO: update the code to test the property sellingParty
        expect(instance).to.have.property('sellingParty');
        // expect(instance.sellingParty).to.be(expectedValueLiteral);
      });

      it('should have the property shipFromParty (base name: "shipFromParty")', function() {
        // TODO: update the code to test the property shipFromParty
        expect(instance).to.have.property('shipFromParty');
        // expect(instance.shipFromParty).to.be(expectedValueLiteral);
      });

      it('should have the property shipToParty (base name: "shipToParty")', function() {
        // TODO: update the code to test the property shipToParty
        expect(instance).to.have.property('shipToParty');
        // expect(instance.shipToParty).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentMeasurements (base name: "shipmentMeasurements")', function() {
        // TODO: update the code to test the property shipmentMeasurements
        expect(instance).to.have.property('shipmentMeasurements');
        // expect(instance.shipmentMeasurements).to.be(expectedValueLiteral);
      });

      it('should have the property importDetails (base name: "importDetails")', function() {
        // TODO: update the code to test the property importDetails
        expect(instance).to.have.property('importDetails');
        // expect(instance.importDetails).to.be(expectedValueLiteral);
      });

      it('should have the property shippedItems (base name: "shippedItems")', function() {
        // TODO: update the code to test the property shippedItems
        expect(instance).to.have.property('shippedItems');
        // expect(instance.shippedItems).to.be(expectedValueLiteral);
      });

      it('should have the property cartons (base name: "cartons")', function() {
        // TODO: update the code to test the property cartons
        expect(instance).to.have.property('cartons');
        // expect(instance.cartons).to.be(expectedValueLiteral);
      });

      it('should have the property pallets (base name: "pallets")', function() {
        // TODO: update the code to test the property pallets
        expect(instance).to.have.property('pallets');
        // expect(instance.pallets).to.be(expectedValueLiteral);
      });

    });
  });

}));
