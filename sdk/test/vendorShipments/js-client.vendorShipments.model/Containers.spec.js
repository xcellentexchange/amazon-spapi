/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorShipments/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorShipments/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForRetailProcurementShipments);
  }
}(this, function(expect, SellingPartnerApiForRetailProcurementShipments) {
  'use strict';

  var instance;

  describe('vendorShipments', function() {
    describe('Containers', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForRetailProcurementShipments.Containers();
      });

      it('should create an instance of Containers', function() {
        // TODO: update the code to test Containers
        expect(instance).to.be.a(SellingPartnerApiForRetailProcurementShipments.Containers);
      });

      it('should have the property containerType (base name: "containerType")', function() {
        // TODO: update the code to test the property containerType
        expect(instance).to.have.property('containerType');
        // expect(instance.containerType).to.be(expectedValueLiteral);
      });

      it('should have the property containerSequenceNumber (base name: "containerSequenceNumber")', function() {
        // TODO: update the code to test the property containerSequenceNumber
        expect(instance).to.have.property('containerSequenceNumber');
        // expect(instance.containerSequenceNumber).to.be(expectedValueLiteral);
      });

      it('should have the property containerIdentifiers (base name: "containerIdentifiers")', function() {
        // TODO: update the code to test the property containerIdentifiers
        expect(instance).to.have.property('containerIdentifiers');
        // expect(instance.containerIdentifiers).to.be(expectedValueLiteral);
      });

      it('should have the property trackingNumber (base name: "trackingNumber")', function() {
        // TODO: update the code to test the property trackingNumber
        expect(instance).to.have.property('trackingNumber');
        // expect(instance.trackingNumber).to.be(expectedValueLiteral);
      });

      it('should have the property dimensions (base name: "dimensions")', function() {
        // TODO: update the code to test the property dimensions
        expect(instance).to.have.property('dimensions');
        // expect(instance.dimensions).to.be(expectedValueLiteral);
      });

      it('should have the property weight (base name: "weight")', function() {
        // TODO: update the code to test the property weight
        expect(instance).to.have.property('weight');
        // expect(instance.weight).to.be(expectedValueLiteral);
      });

      it('should have the property tier (base name: "tier")', function() {
        // TODO: update the code to test the property tier
        expect(instance).to.have.property('tier');
        // expect(instance.tier).to.be(expectedValueLiteral);
      });

      it('should have the property block (base name: "block")', function() {
        // TODO: update the code to test the property block
        expect(instance).to.have.property('block');
        // expect(instance.block).to.be(expectedValueLiteral);
      });

      it('should have the property innerContainersDetails (base name: "innerContainersDetails")', function() {
        // TODO: update the code to test the property innerContainersDetails
        expect(instance).to.have.property('innerContainersDetails');
        // expect(instance.innerContainersDetails).to.be(expectedValueLiteral);
      });

      it('should have the property packedItems (base name: "packedItems")', function() {
        // TODO: update the code to test the property packedItems
        expect(instance).to.have.property('packedItems');
        // expect(instance.packedItems).to.be(expectedValueLiteral);
      });

    });
  });

}));
