/*
 * Selling Partner API for Easy Ship
 * The Selling Partner API for Easy Ship helps you build applications that help sellers manage and ship Amazon Easy Ship orders.  Your Easy Ship applications can:  * Get available time slots for packages to be scheduled for delivery.  * Schedule, reschedule, and cancel Easy Ship orders.  * Print labels, invoices, and warranties.  See the [Marketplace Support Table](doc:easyship-api-v2022-03-23-use-case-guide#marketplace-support-table) for the differences in Easy Ship operations by marketplace.
 *
 * OpenAPI spec version: 2022-03-23
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/easyShip_2022-03-23/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/easyShip_2022-03-23/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForEasyShip);
  }
}(this, function(expect, SellingPartnerApiForEasyShip) {
  'use strict';

  var instance;

  describe('easyShip_2022-03-23', function() {
    describe('ModelPackage', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForEasyShip.ModelPackage();
      });

      it('should create an instance of ModelPackage', function() {
        // TODO: update the code to test ModelPackage
        expect(instance).to.be.a(SellingPartnerApiForEasyShip.ModelPackage);
      });

      it('should have the property scheduledPackageId (base name: "scheduledPackageId")', function() {
        // TODO: update the code to test the property scheduledPackageId
        expect(instance).to.have.property('scheduledPackageId');
        // expect(instance.scheduledPackageId).to.be(expectedValueLiteral);
      });

      it('should have the property packageDimensions (base name: "packageDimensions")', function() {
        // TODO: update the code to test the property packageDimensions
        expect(instance).to.have.property('packageDimensions');
        // expect(instance.packageDimensions).to.be(expectedValueLiteral);
      });

      it('should have the property packageWeight (base name: "packageWeight")', function() {
        // TODO: update the code to test the property packageWeight
        expect(instance).to.have.property('packageWeight');
        // expect(instance.packageWeight).to.be(expectedValueLiteral);
      });

      it('should have the property packageItems (base name: "packageItems")', function() {
        // TODO: update the code to test the property packageItems
        expect(instance).to.have.property('packageItems');
        // expect(instance.packageItems).to.be(expectedValueLiteral);
      });

      it('should have the property packageTimeSlot (base name: "packageTimeSlot")', function() {
        // TODO: update the code to test the property packageTimeSlot
        expect(instance).to.have.property('packageTimeSlot');
        // expect(instance.packageTimeSlot).to.be(expectedValueLiteral);
      });

      it('should have the property packageIdentifier (base name: "packageIdentifier")', function() {
        // TODO: update the code to test the property packageIdentifier
        expect(instance).to.have.property('packageIdentifier');
        // expect(instance.packageIdentifier).to.be(expectedValueLiteral);
      });

      it('should have the property invoice (base name: "invoice")', function() {
        // TODO: update the code to test the property invoice
        expect(instance).to.have.property('invoice');
        // expect(instance.invoice).to.be(expectedValueLiteral);
      });

      it('should have the property packageStatus (base name: "packageStatus")', function() {
        // TODO: update the code to test the property packageStatus
        expect(instance).to.have.property('packageStatus');
        // expect(instance.packageStatus).to.be(expectedValueLiteral);
      });

      it('should have the property trackingDetails (base name: "trackingDetails")', function() {
        // TODO: update the code to test the property trackingDetails
        expect(instance).to.have.property('trackingDetails');
        // expect(instance.trackingDetails).to.be(expectedValueLiteral);
      });

    });
  });

}));
