/*
 * Selling Partner API for Replenishment
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * OpenAPI spec version: 2022-11-07
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/replenishment-2022-11-07/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/replenishment-2022-11-07/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForReplenishment);
  }
}(this, function(expect, SellingPartnerApiForReplenishment) {
  'use strict';

  var instance;

  describe('replenishment-2022-11-07', function() {
    describe('ListOffersResponseOffer', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForReplenishment.ListOffersResponseOffer();
      });

      it('should create an instance of ListOffersResponseOffer', function() {
        // TODO: update the code to test ListOffersResponseOffer
        expect(instance).to.be.a(SellingPartnerApiForReplenishment.ListOffersResponseOffer);
      });

      it('should have the property sku (base name: "sku")', function() {
        // TODO: update the code to test the property sku
        expect(instance).to.have.property('sku');
        // expect(instance.sku).to.be(expectedValueLiteral);
      });

      it('should have the property asin (base name: "asin")', function() {
        // TODO: update the code to test the property asin
        expect(instance).to.have.property('asin');
        // expect(instance.asin).to.be(expectedValueLiteral);
      });

      it('should have the property marketplaceId (base name: "marketplaceId")', function() {
        // TODO: update the code to test the property marketplaceId
        expect(instance).to.have.property('marketplaceId');
        // expect(instance.marketplaceId).to.be(expectedValueLiteral);
      });

      it('should have the property eligibility (base name: "eligibility")', function() {
        // TODO: update the code to test the property eligibility
        expect(instance).to.have.property('eligibility');
        // expect(instance.eligibility).to.be(expectedValueLiteral);
      });

      it('should have the property offerProgramConfiguration (base name: "offerProgramConfiguration")', function() {
        // TODO: update the code to test the property offerProgramConfiguration
        expect(instance).to.have.property('offerProgramConfiguration');
        // expect(instance.offerProgramConfiguration).to.be(expectedValueLiteral);
      });

      it('should have the property programType (base name: "programType")', function() {
        // TODO: update the code to test the property programType
        expect(instance).to.have.property('programType');
        // expect(instance.programType).to.be(expectedValueLiteral);
      });

      it('should have the property vendorCodes (base name: "vendorCodes")', function() {
        // TODO: update the code to test the property vendorCodes
        expect(instance).to.have.property('vendorCodes');
        // expect(instance.vendorCodes).to.be(expectedValueLiteral);
      });

    });
  });

}));
