/*
 * Selling Partner API for Direct Fulfillment Orders
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorDirectFulfillmentOrders_2021-12-28/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorDirectFulfillmentOrders_2021-12-28/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForDirectFulfillmentOrders);
  }
}(this, function(expect, SellingPartnerApiForDirectFulfillmentOrders) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForDirectFulfillmentOrders.VendorOrdersApi();
  });

  describe('vendorDirectFulfillmentOrders_2021-12-28', function() {
    describe('VendorOrdersApi', function() {
      describe('getOrder', function() {
        it('should call getOrder successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrder call and complete the assertions
          /*
          var purchaseOrderNumber = "purchaseOrderNumber_example";

          instance.getOrder(purchaseOrderNumber).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Order);
            expect(data.purchaseOrderNumber).to.be.a('string');
            // expect(data.purchaseOrderNumber).to.be("");
            expect(data.orderDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.OrderDetails);
                  expect(data.orderDetails.customerOrderNumber).to.be.a('string');
              // expect(data.orderDetails.customerOrderNumber).to.be("");
              expect(data.orderDetails.orderDate).to.be.a(Date);
              // expect(data.orderDetails.orderDate).to.be(new Date());
              expect(data.orderDetails.orderStatus).to.be.a('string');
              // expect(data.orderDetails.orderStatus).to.be("NEW");
              expect(data.orderDetails.shipmentDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ShipmentDetails);
                    expect(data.orderDetails.shipmentDetails.isPriorityShipment).to.be.a('boolean');
                // expect(data.orderDetails.shipmentDetails.isPriorityShipment).to.be(false);
                expect(data.orderDetails.shipmentDetails.isScheduledDeliveryShipment).to.be.a('boolean');
                // expect(data.orderDetails.shipmentDetails.isScheduledDeliveryShipment).to.be(false);
                expect(data.orderDetails.shipmentDetails.isPslipRequired).to.be.a('boolean');
                // expect(data.orderDetails.shipmentDetails.isPslipRequired).to.be(false);
                expect(data.orderDetails.shipmentDetails.isGift).to.be.a('boolean');
                // expect(data.orderDetails.shipmentDetails.isGift).to.be(false);
                expect(data.orderDetails.shipmentDetails.shipMethod).to.be.a('string');
                // expect(data.orderDetails.shipmentDetails.shipMethod).to.be("");
                expect(data.orderDetails.shipmentDetails.shipmentDates).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ShipmentDates);
                      expect(data.orderDetails.shipmentDetails.shipmentDates.requiredShipDate).to.be.a(Date);
                  // expect(data.orderDetails.shipmentDetails.shipmentDates.requiredShipDate).to.be(new Date());
                  expect(data.orderDetails.shipmentDetails.shipmentDates.promisedDeliveryDate).to.be.a(Date);
                  // expect(data.orderDetails.shipmentDetails.shipmentDates.promisedDeliveryDate).to.be(new Date());
                expect(data.orderDetails.shipmentDetails.messageToCustomer).to.be.a('string');
                // expect(data.orderDetails.shipmentDetails.messageToCustomer).to.be("");
              expect(data.orderDetails.taxTotal).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxItemDetails);
                    expect(data.orderDetails.taxTotal.taxLineItem).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxLineItem);
        
              expect(data.orderDetails.sellingParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification);
                    expect(data.orderDetails.sellingParty.partyId).to.be.a('string');
                // expect(data.orderDetails.sellingParty.partyId).to.be("");
                expect(data.orderDetails.sellingParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                      expect(data.orderDetails.sellingParty.address.name).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.name).to.be("");
                  expect(data.orderDetails.sellingParty.address.attention).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.attention).to.be("");
                  expect(data.orderDetails.sellingParty.address.addressLine1).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.addressLine1).to.be("");
                  expect(data.orderDetails.sellingParty.address.addressLine2).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.addressLine2).to.be("");
                  expect(data.orderDetails.sellingParty.address.addressLine3).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.addressLine3).to.be("");
                  expect(data.orderDetails.sellingParty.address.city).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.city).to.be("");
                  expect(data.orderDetails.sellingParty.address.county).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.county).to.be("");
                  expect(data.orderDetails.sellingParty.address.district).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.district).to.be("");
                  expect(data.orderDetails.sellingParty.address.stateOrRegion).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.stateOrRegion).to.be("");
                  expect(data.orderDetails.sellingParty.address.postalCode).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.postalCode).to.be("");
                  expect(data.orderDetails.sellingParty.address.countryCode).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.countryCode).to.be("");
                  expect(data.orderDetails.sellingParty.address.phone).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.address.phone).to.be("");
                expect(data.orderDetails.sellingParty.taxInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails);
                      expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationType).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationType).to.be("VAT");
                  expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationNumber).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationNumber).to.be("");
                  expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.name).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.attention).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.attention).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.city).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.county).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.district).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.phone).to.be("");
                  expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationMessages).to.be.a('string');
                  // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationMessages).to.be("");
              expect(data.orderDetails.shipFromParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification);
                    expect(data.orderDetails.shipFromParty.partyId).to.be.a('string');
                // expect(data.orderDetails.shipFromParty.partyId).to.be("");
                expect(data.orderDetails.shipFromParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                      expect(data.orderDetails.shipFromParty.address.name).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.name).to.be("");
                  expect(data.orderDetails.shipFromParty.address.attention).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.attention).to.be("");
                  expect(data.orderDetails.shipFromParty.address.addressLine1).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.addressLine1).to.be("");
                  expect(data.orderDetails.shipFromParty.address.addressLine2).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.addressLine2).to.be("");
                  expect(data.orderDetails.shipFromParty.address.addressLine3).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.addressLine3).to.be("");
                  expect(data.orderDetails.shipFromParty.address.city).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.city).to.be("");
                  expect(data.orderDetails.shipFromParty.address.county).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.county).to.be("");
                  expect(data.orderDetails.shipFromParty.address.district).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.district).to.be("");
                  expect(data.orderDetails.shipFromParty.address.stateOrRegion).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.stateOrRegion).to.be("");
                  expect(data.orderDetails.shipFromParty.address.postalCode).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.postalCode).to.be("");
                  expect(data.orderDetails.shipFromParty.address.countryCode).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.countryCode).to.be("");
                  expect(data.orderDetails.shipFromParty.address.phone).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.address.phone).to.be("");
                expect(data.orderDetails.shipFromParty.taxInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails);
                      expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationType).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationType).to.be("VAT");
                  expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationNumber).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationNumber).to.be("");
                  expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.name).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.attention).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.attention).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.city).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.county).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.district).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.phone).to.be("");
                  expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationMessages).to.be.a('string');
                  // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationMessages).to.be("");
              expect(data.orderDetails.shipToParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                    expect(data.orderDetails.shipToParty.name).to.be.a('string');
                // expect(data.orderDetails.shipToParty.name).to.be("");
                expect(data.orderDetails.shipToParty.attention).to.be.a('string');
                // expect(data.orderDetails.shipToParty.attention).to.be("");
                expect(data.orderDetails.shipToParty.addressLine1).to.be.a('string');
                // expect(data.orderDetails.shipToParty.addressLine1).to.be("");
                expect(data.orderDetails.shipToParty.addressLine2).to.be.a('string');
                // expect(data.orderDetails.shipToParty.addressLine2).to.be("");
                expect(data.orderDetails.shipToParty.addressLine3).to.be.a('string');
                // expect(data.orderDetails.shipToParty.addressLine3).to.be("");
                expect(data.orderDetails.shipToParty.city).to.be.a('string');
                // expect(data.orderDetails.shipToParty.city).to.be("");
                expect(data.orderDetails.shipToParty.county).to.be.a('string');
                // expect(data.orderDetails.shipToParty.county).to.be("");
                expect(data.orderDetails.shipToParty.district).to.be.a('string');
                // expect(data.orderDetails.shipToParty.district).to.be("");
                expect(data.orderDetails.shipToParty.stateOrRegion).to.be.a('string');
                // expect(data.orderDetails.shipToParty.stateOrRegion).to.be("");
                expect(data.orderDetails.shipToParty.postalCode).to.be.a('string');
                // expect(data.orderDetails.shipToParty.postalCode).to.be("");
                expect(data.orderDetails.shipToParty.countryCode).to.be.a('string');
                // expect(data.orderDetails.shipToParty.countryCode).to.be("");
                expect(data.orderDetails.shipToParty.phone).to.be.a('string');
                // expect(data.orderDetails.shipToParty.phone).to.be("");
              expect(data.orderDetails.billToParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification);
                    expect(data.orderDetails.billToParty.partyId).to.be.a('string');
                // expect(data.orderDetails.billToParty.partyId).to.be("");
                expect(data.orderDetails.billToParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                      expect(data.orderDetails.billToParty.address.name).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.name).to.be("");
                  expect(data.orderDetails.billToParty.address.attention).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.attention).to.be("");
                  expect(data.orderDetails.billToParty.address.addressLine1).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.addressLine1).to.be("");
                  expect(data.orderDetails.billToParty.address.addressLine2).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.addressLine2).to.be("");
                  expect(data.orderDetails.billToParty.address.addressLine3).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.addressLine3).to.be("");
                  expect(data.orderDetails.billToParty.address.city).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.city).to.be("");
                  expect(data.orderDetails.billToParty.address.county).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.county).to.be("");
                  expect(data.orderDetails.billToParty.address.district).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.district).to.be("");
                  expect(data.orderDetails.billToParty.address.stateOrRegion).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.stateOrRegion).to.be("");
                  expect(data.orderDetails.billToParty.address.postalCode).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.postalCode).to.be("");
                  expect(data.orderDetails.billToParty.address.countryCode).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.countryCode).to.be("");
                  expect(data.orderDetails.billToParty.address.phone).to.be.a('string');
                  // expect(data.orderDetails.billToParty.address.phone).to.be("");
                expect(data.orderDetails.billToParty.taxInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails);
                      expect(data.orderDetails.billToParty.taxInfo.taxRegistrationType).to.be.a('string');
                  // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationType).to.be("VAT");
                  expect(data.orderDetails.billToParty.taxInfo.taxRegistrationNumber).to.be.a('string');
                  // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationNumber).to.be("");
                  expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.name).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.name).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.attention).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.attention).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine1).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine1).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine2).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine2).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine3).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine3).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.city).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.city).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.county).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.county).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.district).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.district).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.postalCode).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.postalCode).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.countryCode).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.countryCode).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.phone).to.be.a('string');
                    // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.phone).to.be("");
                  expect(data.orderDetails.billToParty.taxInfo.taxRegistrationMessages).to.be.a('string');
                  // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationMessages).to.be("");
              {
                let dataCtr = data.orderDetails.items;
                expect(dataCtr).to.be.an(Array);
                expect(dataCtr).to.not.be.empty();
                for (let p in dataCtr) {
                  let data = dataCtr[p];
                  expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.OrderItem);
                  expect(data.itemSequenceNumber).to.be.a('string');
                  // expect(data.itemSequenceNumber).to.be("");
                  expect(data.buyerProductIdentifier).to.be.a('string');
                  // expect(data.buyerProductIdentifier).to.be("");
                  expect(data.vendorProductIdentifier).to.be.a('string');
                  // expect(data.vendorProductIdentifier).to.be("");
                  expect(data.title).to.be.a('string');
                  // expect(data.title).to.be("");
                  expect(data.orderedQuantity).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ItemQuantity);
                        expect(data.orderedQuantity.amount).to.be.a('number');
                    // expect(data.orderedQuantity.amount).to.be(0);
                    expect(data.orderedQuantity.unitOfMeasure).to.be.a('string');
                    // expect(data.orderedQuantity.unitOfMeasure).to.be("Each");
                  expect(data.scheduledDeliveryShipment).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ScheduledDeliveryShipment);
                        expect(data.scheduledDeliveryShipment.scheduledDeliveryServiceType).to.be.a('string');
                    // expect(data.scheduledDeliveryShipment.scheduledDeliveryServiceType).to.be("");
                    expect(data.scheduledDeliveryShipment.earliestNominatedDeliveryDate).to.be.a(Date);
                    // expect(data.scheduledDeliveryShipment.earliestNominatedDeliveryDate).to.be(new Date());
                    expect(data.scheduledDeliveryShipment.latestNominatedDeliveryDate).to.be.a(Date);
                    // expect(data.scheduledDeliveryShipment.latestNominatedDeliveryDate).to.be(new Date());
                  expect(data.giftDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.GiftDetails);
                        expect(data.giftDetails.giftMessage).to.be.a('string');
                    // expect(data.giftDetails.giftMessage).to.be("");
                    expect(data.giftDetails.giftWrapId).to.be.a('string');
                    // expect(data.giftDetails.giftWrapId).to.be("");
                  expect(data.netPrice).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Money);
                        expect(data.netPrice.currencyCode).to.be.a('string');
                    // expect(data.netPrice.currencyCode).to.be("");
                    expect(data.netPrice.amount).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Decimal);
            
                  expect(data.taxDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxItemDetails);
                        expect(data.taxDetails.taxLineItem).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxLineItem);
            
                  expect(data.totalPrice).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Money);
                        expect(data.totalPrice.currencyCode).to.be.a('string');
                    // expect(data.totalPrice.currencyCode).to.be("");
                    expect(data.totalPrice.amount).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Decimal);
            
                  expect(data.buyerCustomizedInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.BuyerCustomizedInfoDetail);
                        expect(data.buyerCustomizedInfo.customizedUrl).to.be.a('string');
                    // expect(data.buyerCustomizedInfo.customizedUrl).to.be("");
                }
              }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getOrders', function() {
        it('should call getOrders successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrders call and complete the assertions
          /*
          var createdAfter = new Date("2013-10-20T19:20:30+01:00");
          var createdBefore = new Date("2013-10-20T19:20:30+01:00");
          var opts = {};
          opts.shipFromPartyId = "shipFromPartyId_example";
          opts.status = "status_example";
          opts.limit = 789;
          opts.sortOrder = "sortOrder_example";
          opts.nextToken = "nextToken_example";
          opts.includeDetails = "true";

          instance.getOrders(createdAfter, createdBefore, opts).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.OrderList);
            expect(data.pagination).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Pagination);
                  expect(data.pagination.nextToken).to.be.a('string');
              // expect(data.pagination.nextToken).to.be("");
            {
              let dataCtr = data.orders;
              expect(dataCtr).to.be.an(Array);
              expect(dataCtr).to.not.be.empty();
              for (let p in dataCtr) {
                let data = dataCtr[p];
                expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Order);
                expect(data.purchaseOrderNumber).to.be.a('string');
                // expect(data.purchaseOrderNumber).to.be("");
                expect(data.orderDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.OrderDetails);
                      expect(data.orderDetails.customerOrderNumber).to.be.a('string');
                  // expect(data.orderDetails.customerOrderNumber).to.be("");
                  expect(data.orderDetails.orderDate).to.be.a(Date);
                  // expect(data.orderDetails.orderDate).to.be(new Date());
                  expect(data.orderDetails.orderStatus).to.be.a('string');
                  // expect(data.orderDetails.orderStatus).to.be("NEW");
                  expect(data.orderDetails.shipmentDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ShipmentDetails);
                        expect(data.orderDetails.shipmentDetails.isPriorityShipment).to.be.a('boolean');
                    // expect(data.orderDetails.shipmentDetails.isPriorityShipment).to.be(false);
                    expect(data.orderDetails.shipmentDetails.isScheduledDeliveryShipment).to.be.a('boolean');
                    // expect(data.orderDetails.shipmentDetails.isScheduledDeliveryShipment).to.be(false);
                    expect(data.orderDetails.shipmentDetails.isPslipRequired).to.be.a('boolean');
                    // expect(data.orderDetails.shipmentDetails.isPslipRequired).to.be(false);
                    expect(data.orderDetails.shipmentDetails.isGift).to.be.a('boolean');
                    // expect(data.orderDetails.shipmentDetails.isGift).to.be(false);
                    expect(data.orderDetails.shipmentDetails.shipMethod).to.be.a('string');
                    // expect(data.orderDetails.shipmentDetails.shipMethod).to.be("");
                    expect(data.orderDetails.shipmentDetails.shipmentDates).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ShipmentDates);
                          expect(data.orderDetails.shipmentDetails.shipmentDates.requiredShipDate).to.be.a(Date);
                      // expect(data.orderDetails.shipmentDetails.shipmentDates.requiredShipDate).to.be(new Date());
                      expect(data.orderDetails.shipmentDetails.shipmentDates.promisedDeliveryDate).to.be.a(Date);
                      // expect(data.orderDetails.shipmentDetails.shipmentDates.promisedDeliveryDate).to.be(new Date());
                    expect(data.orderDetails.shipmentDetails.messageToCustomer).to.be.a('string');
                    // expect(data.orderDetails.shipmentDetails.messageToCustomer).to.be("");
                  expect(data.orderDetails.taxTotal).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxItemDetails);
                        expect(data.orderDetails.taxTotal.taxLineItem).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxLineItem);
            
                  expect(data.orderDetails.sellingParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification);
                        expect(data.orderDetails.sellingParty.partyId).to.be.a('string');
                    // expect(data.orderDetails.sellingParty.partyId).to.be("");
                    expect(data.orderDetails.sellingParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                          expect(data.orderDetails.sellingParty.address.name).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.name).to.be("");
                      expect(data.orderDetails.sellingParty.address.attention).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.attention).to.be("");
                      expect(data.orderDetails.sellingParty.address.addressLine1).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.addressLine1).to.be("");
                      expect(data.orderDetails.sellingParty.address.addressLine2).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.addressLine2).to.be("");
                      expect(data.orderDetails.sellingParty.address.addressLine3).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.addressLine3).to.be("");
                      expect(data.orderDetails.sellingParty.address.city).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.city).to.be("");
                      expect(data.orderDetails.sellingParty.address.county).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.county).to.be("");
                      expect(data.orderDetails.sellingParty.address.district).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.district).to.be("");
                      expect(data.orderDetails.sellingParty.address.stateOrRegion).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.stateOrRegion).to.be("");
                      expect(data.orderDetails.sellingParty.address.postalCode).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.postalCode).to.be("");
                      expect(data.orderDetails.sellingParty.address.countryCode).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.countryCode).to.be("");
                      expect(data.orderDetails.sellingParty.address.phone).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.address.phone).to.be("");
                    expect(data.orderDetails.sellingParty.taxInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails);
                          expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationType).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationType).to.be("VAT");
                      expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationNumber).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationNumber).to.be("");
                      expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                            expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.name).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.name).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.attention).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.attention).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine1).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine1).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine2).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine2).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine3).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.addressLine3).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.city).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.city).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.county).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.county).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.district).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.district).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.postalCode).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.postalCode).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.countryCode).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.countryCode).to.be("");
                        expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.phone).to.be.a('string');
                        // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationAddress.phone).to.be("");
                      expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationMessages).to.be.a('string');
                      // expect(data.orderDetails.sellingParty.taxInfo.taxRegistrationMessages).to.be("");
                  expect(data.orderDetails.shipFromParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification);
                        expect(data.orderDetails.shipFromParty.partyId).to.be.a('string');
                    // expect(data.orderDetails.shipFromParty.partyId).to.be("");
                    expect(data.orderDetails.shipFromParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                          expect(data.orderDetails.shipFromParty.address.name).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.name).to.be("");
                      expect(data.orderDetails.shipFromParty.address.attention).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.attention).to.be("");
                      expect(data.orderDetails.shipFromParty.address.addressLine1).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.addressLine1).to.be("");
                      expect(data.orderDetails.shipFromParty.address.addressLine2).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.addressLine2).to.be("");
                      expect(data.orderDetails.shipFromParty.address.addressLine3).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.addressLine3).to.be("");
                      expect(data.orderDetails.shipFromParty.address.city).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.city).to.be("");
                      expect(data.orderDetails.shipFromParty.address.county).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.county).to.be("");
                      expect(data.orderDetails.shipFromParty.address.district).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.district).to.be("");
                      expect(data.orderDetails.shipFromParty.address.stateOrRegion).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.stateOrRegion).to.be("");
                      expect(data.orderDetails.shipFromParty.address.postalCode).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.postalCode).to.be("");
                      expect(data.orderDetails.shipFromParty.address.countryCode).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.countryCode).to.be("");
                      expect(data.orderDetails.shipFromParty.address.phone).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.address.phone).to.be("");
                    expect(data.orderDetails.shipFromParty.taxInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails);
                          expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationType).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationType).to.be("VAT");
                      expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationNumber).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationNumber).to.be("");
                      expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                            expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.name).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.name).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.attention).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.attention).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine1).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine1).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine2).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine2).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine3).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.addressLine3).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.city).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.city).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.county).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.county).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.district).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.district).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.postalCode).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.postalCode).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.countryCode).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.countryCode).to.be("");
                        expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.phone).to.be.a('string');
                        // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationAddress.phone).to.be("");
                      expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationMessages).to.be.a('string');
                      // expect(data.orderDetails.shipFromParty.taxInfo.taxRegistrationMessages).to.be("");
                  expect(data.orderDetails.shipToParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                        expect(data.orderDetails.shipToParty.name).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.name).to.be("");
                    expect(data.orderDetails.shipToParty.attention).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.attention).to.be("");
                    expect(data.orderDetails.shipToParty.addressLine1).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.addressLine1).to.be("");
                    expect(data.orderDetails.shipToParty.addressLine2).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.addressLine2).to.be("");
                    expect(data.orderDetails.shipToParty.addressLine3).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.addressLine3).to.be("");
                    expect(data.orderDetails.shipToParty.city).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.city).to.be("");
                    expect(data.orderDetails.shipToParty.county).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.county).to.be("");
                    expect(data.orderDetails.shipToParty.district).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.district).to.be("");
                    expect(data.orderDetails.shipToParty.stateOrRegion).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.stateOrRegion).to.be("");
                    expect(data.orderDetails.shipToParty.postalCode).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.postalCode).to.be("");
                    expect(data.orderDetails.shipToParty.countryCode).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.countryCode).to.be("");
                    expect(data.orderDetails.shipToParty.phone).to.be.a('string');
                    // expect(data.orderDetails.shipToParty.phone).to.be("");
                  expect(data.orderDetails.billToParty).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification);
                        expect(data.orderDetails.billToParty.partyId).to.be.a('string');
                    // expect(data.orderDetails.billToParty.partyId).to.be("");
                    expect(data.orderDetails.billToParty.address).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                          expect(data.orderDetails.billToParty.address.name).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.name).to.be("");
                      expect(data.orderDetails.billToParty.address.attention).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.attention).to.be("");
                      expect(data.orderDetails.billToParty.address.addressLine1).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.addressLine1).to.be("");
                      expect(data.orderDetails.billToParty.address.addressLine2).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.addressLine2).to.be("");
                      expect(data.orderDetails.billToParty.address.addressLine3).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.addressLine3).to.be("");
                      expect(data.orderDetails.billToParty.address.city).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.city).to.be("");
                      expect(data.orderDetails.billToParty.address.county).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.county).to.be("");
                      expect(data.orderDetails.billToParty.address.district).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.district).to.be("");
                      expect(data.orderDetails.billToParty.address.stateOrRegion).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.stateOrRegion).to.be("");
                      expect(data.orderDetails.billToParty.address.postalCode).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.postalCode).to.be("");
                      expect(data.orderDetails.billToParty.address.countryCode).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.countryCode).to.be("");
                      expect(data.orderDetails.billToParty.address.phone).to.be.a('string');
                      // expect(data.orderDetails.billToParty.address.phone).to.be("");
                    expect(data.orderDetails.billToParty.taxInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails);
                          expect(data.orderDetails.billToParty.taxInfo.taxRegistrationType).to.be.a('string');
                      // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationType).to.be("VAT");
                      expect(data.orderDetails.billToParty.taxInfo.taxRegistrationNumber).to.be.a('string');
                      // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationNumber).to.be("");
                      expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Address);
                            expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.name).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.name).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.attention).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.attention).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine1).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine1).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine2).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine2).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine3).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.addressLine3).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.city).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.city).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.county).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.county).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.district).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.district).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.stateOrRegion).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.postalCode).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.postalCode).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.countryCode).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.countryCode).to.be("");
                        expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.phone).to.be.a('string');
                        // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationAddress.phone).to.be("");
                      expect(data.orderDetails.billToParty.taxInfo.taxRegistrationMessages).to.be.a('string');
                      // expect(data.orderDetails.billToParty.taxInfo.taxRegistrationMessages).to.be("");
                  {
                    let dataCtr = data.orderDetails.items;
                    expect(dataCtr).to.be.an(Array);
                    expect(dataCtr).to.not.be.empty();
                    for (let p in dataCtr) {
                      let data = dataCtr[p];
                      expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.OrderItem);
                      expect(data.itemSequenceNumber).to.be.a('string');
                      // expect(data.itemSequenceNumber).to.be("");
                      expect(data.buyerProductIdentifier).to.be.a('string');
                      // expect(data.buyerProductIdentifier).to.be("");
                      expect(data.vendorProductIdentifier).to.be.a('string');
                      // expect(data.vendorProductIdentifier).to.be("");
                      expect(data.title).to.be.a('string');
                      // expect(data.title).to.be("");
                      expect(data.orderedQuantity).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ItemQuantity);
                            expect(data.orderedQuantity.amount).to.be.a('number');
                        // expect(data.orderedQuantity.amount).to.be(0);
                        expect(data.orderedQuantity.unitOfMeasure).to.be.a('string');
                        // expect(data.orderedQuantity.unitOfMeasure).to.be("Each");
                      expect(data.scheduledDeliveryShipment).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.ScheduledDeliveryShipment);
                            expect(data.scheduledDeliveryShipment.scheduledDeliveryServiceType).to.be.a('string');
                        // expect(data.scheduledDeliveryShipment.scheduledDeliveryServiceType).to.be("");
                        expect(data.scheduledDeliveryShipment.earliestNominatedDeliveryDate).to.be.a(Date);
                        // expect(data.scheduledDeliveryShipment.earliestNominatedDeliveryDate).to.be(new Date());
                        expect(data.scheduledDeliveryShipment.latestNominatedDeliveryDate).to.be.a(Date);
                        // expect(data.scheduledDeliveryShipment.latestNominatedDeliveryDate).to.be(new Date());
                      expect(data.giftDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.GiftDetails);
                            expect(data.giftDetails.giftMessage).to.be.a('string');
                        // expect(data.giftDetails.giftMessage).to.be("");
                        expect(data.giftDetails.giftWrapId).to.be.a('string');
                        // expect(data.giftDetails.giftWrapId).to.be("");
                      expect(data.netPrice).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Money);
                            expect(data.netPrice.currencyCode).to.be.a('string');
                        // expect(data.netPrice.currencyCode).to.be("");
                        expect(data.netPrice.amount).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Decimal);
                
                      expect(data.taxDetails).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxItemDetails);
                            expect(data.taxDetails.taxLineItem).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TaxLineItem);
                
                      expect(data.totalPrice).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Money);
                            expect(data.totalPrice.currencyCode).to.be.a('string');
                        // expect(data.totalPrice.currencyCode).to.be("");
                        expect(data.totalPrice.amount).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.Decimal);
                
                      expect(data.buyerCustomizedInfo).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.BuyerCustomizedInfoDetail);
                            expect(data.buyerCustomizedInfo.customizedUrl).to.be.a('string');
                        // expect(data.buyerCustomizedInfo.customizedUrl).to.be("");
                    }
                  }
              }
            }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('submitAcknowledgement', function() {
        it('should call submitAcknowledgement successfully', function(done) {
          // TODO: uncomment, update parameter values for submitAcknowledgement call and complete the assertions
          /*
          var body = new SellingPartnerApiForDirectFulfillmentOrders.SubmitAcknowledgementRequest();
          body.orderAcknowledgements = [new SellingPartnerApiForDirectFulfillmentOrders.OrderAcknowledgementItem()];
          body.orderAcknowledgements[0].purchaseOrderNumber = "";
          body.orderAcknowledgements[0].vendorOrderNumber = "";
          body.orderAcknowledgements[0].acknowledgementDate = new Date();
          body.orderAcknowledgements[0].acknowledgementStatus = new SellingPartnerApiForDirectFulfillmentOrders.AcknowledgementStatus();
          body.orderAcknowledgements[0].acknowledgementStatus.code = "";
          body.orderAcknowledgements[0].acknowledgementStatus.description = "";
          body.orderAcknowledgements[0].sellingParty = new SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification();
          body.orderAcknowledgements[0].sellingParty.partyId = "";
          body.orderAcknowledgements[0].sellingParty.address = new SellingPartnerApiForDirectFulfillmentOrders.Address();
          body.orderAcknowledgements[0].sellingParty.address.name = "";
          body.orderAcknowledgements[0].sellingParty.address.attention = "";
          body.orderAcknowledgements[0].sellingParty.address.addressLine1 = "";
          body.orderAcknowledgements[0].sellingParty.address.addressLine2 = "";
          body.orderAcknowledgements[0].sellingParty.address.addressLine3 = "";
          body.orderAcknowledgements[0].sellingParty.address.city = "";
          body.orderAcknowledgements[0].sellingParty.address.county = "";
          body.orderAcknowledgements[0].sellingParty.address.district = "";
          body.orderAcknowledgements[0].sellingParty.address.stateOrRegion = "";
          body.orderAcknowledgements[0].sellingParty.address.postalCode = "";
          body.orderAcknowledgements[0].sellingParty.address.countryCode = "";
          body.orderAcknowledgements[0].sellingParty.address.phone = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo = new SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails();
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationType = "VAT";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationNumber = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress = new SellingPartnerApiForDirectFulfillmentOrders.Address();
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.name = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.attention = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.addressLine1 = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.addressLine2 = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.addressLine3 = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.city = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.county = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.district = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.stateOrRegion = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.postalCode = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.countryCode = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationAddress.phone = "";
          body.orderAcknowledgements[0].sellingParty.taxInfo.taxRegistrationMessages = "";
          body.orderAcknowledgements[0].shipFromParty = new SellingPartnerApiForDirectFulfillmentOrders.PartyIdentification();
          body.orderAcknowledgements[0].shipFromParty.partyId = "";
          body.orderAcknowledgements[0].shipFromParty.address = new SellingPartnerApiForDirectFulfillmentOrders.Address();
          body.orderAcknowledgements[0].shipFromParty.address.name = "";
          body.orderAcknowledgements[0].shipFromParty.address.attention = "";
          body.orderAcknowledgements[0].shipFromParty.address.addressLine1 = "";
          body.orderAcknowledgements[0].shipFromParty.address.addressLine2 = "";
          body.orderAcknowledgements[0].shipFromParty.address.addressLine3 = "";
          body.orderAcknowledgements[0].shipFromParty.address.city = "";
          body.orderAcknowledgements[0].shipFromParty.address.county = "";
          body.orderAcknowledgements[0].shipFromParty.address.district = "";
          body.orderAcknowledgements[0].shipFromParty.address.stateOrRegion = "";
          body.orderAcknowledgements[0].shipFromParty.address.postalCode = "";
          body.orderAcknowledgements[0].shipFromParty.address.countryCode = "";
          body.orderAcknowledgements[0].shipFromParty.address.phone = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo = new SellingPartnerApiForDirectFulfillmentOrders.TaxRegistrationDetails();
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationType = "VAT";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationNumber = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress = new SellingPartnerApiForDirectFulfillmentOrders.Address();
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.name = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.attention = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.addressLine1 = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.addressLine2 = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.addressLine3 = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.city = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.county = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.district = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.stateOrRegion = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.postalCode = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.countryCode = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationAddress.phone = "";
          body.orderAcknowledgements[0].shipFromParty.taxInfo.taxRegistrationMessages = "";
          body.orderAcknowledgements[0].itemAcknowledgements = [new SellingPartnerApiForDirectFulfillmentOrders.OrderItemAcknowledgement()];
          body.orderAcknowledgements[0].itemAcknowledgements[0].itemSequenceNumber = "";
          body.orderAcknowledgements[0].itemAcknowledgements[0].buyerProductIdentifier = "";
          body.orderAcknowledgements[0].itemAcknowledgements[0].vendorProductIdentifier = "";
          body.orderAcknowledgements[0].itemAcknowledgements[0].acknowledgedQuantity = new SellingPartnerApiForDirectFulfillmentOrders.ItemQuantity();
          body.orderAcknowledgements[0].itemAcknowledgements[0].acknowledgedQuantity.amount = 0;
          body.orderAcknowledgements[0].itemAcknowledgements[0].acknowledgedQuantity.unitOfMeasure = "Each";

          instance.submitAcknowledgement(body).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.TransactionId);
            expect(data.transactionId).to.be.a('string');
            // expect(data.transactionId).to.be("");

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
