/*
 * Selling Partner API for Direct Fulfillment Orders
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorDirectFulfillmentOrders_2021-12-28/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorDirectFulfillmentOrders_2021-12-28/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForDirectFulfillmentOrders);
  }
}(this, function(expect, SellingPartnerApiForDirectFulfillmentOrders) {
  'use strict';

  var instance;

  describe('vendorDirectFulfillmentOrders_2021-12-28', function() {
    describe('OrderDetails', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForDirectFulfillmentOrders.OrderDetails();
      });

      it('should create an instance of OrderDetails', function() {
        // TODO: update the code to test OrderDetails
        expect(instance).to.be.a(SellingPartnerApiForDirectFulfillmentOrders.OrderDetails);
      });

      it('should have the property customerOrderNumber (base name: "customerOrderNumber")', function() {
        // TODO: update the code to test the property customerOrderNumber
        expect(instance).to.have.property('customerOrderNumber');
        // expect(instance.customerOrderNumber).to.be(expectedValueLiteral);
      });

      it('should have the property orderDate (base name: "orderDate")', function() {
        // TODO: update the code to test the property orderDate
        expect(instance).to.have.property('orderDate');
        // expect(instance.orderDate).to.be(expectedValueLiteral);
      });

      it('should have the property orderStatus (base name: "orderStatus")', function() {
        // TODO: update the code to test the property orderStatus
        expect(instance).to.have.property('orderStatus');
        // expect(instance.orderStatus).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentDetails (base name: "shipmentDetails")', function() {
        // TODO: update the code to test the property shipmentDetails
        expect(instance).to.have.property('shipmentDetails');
        // expect(instance.shipmentDetails).to.be(expectedValueLiteral);
      });

      it('should have the property taxTotal (base name: "taxTotal")', function() {
        // TODO: update the code to test the property taxTotal
        expect(instance).to.have.property('taxTotal');
        // expect(instance.taxTotal).to.be(expectedValueLiteral);
      });

      it('should have the property sellingParty (base name: "sellingParty")', function() {
        // TODO: update the code to test the property sellingParty
        expect(instance).to.have.property('sellingParty');
        // expect(instance.sellingParty).to.be(expectedValueLiteral);
      });

      it('should have the property shipFromParty (base name: "shipFromParty")', function() {
        // TODO: update the code to test the property shipFromParty
        expect(instance).to.have.property('shipFromParty');
        // expect(instance.shipFromParty).to.be(expectedValueLiteral);
      });

      it('should have the property shipToParty (base name: "shipToParty")', function() {
        // TODO: update the code to test the property shipToParty
        expect(instance).to.have.property('shipToParty');
        // expect(instance.shipToParty).to.be(expectedValueLiteral);
      });

      it('should have the property billToParty (base name: "billToParty")', function() {
        // TODO: update the code to test the property billToParty
        expect(instance).to.have.property('billToParty');
        // expect(instance.billToParty).to.be(expectedValueLiteral);
      });

      it('should have the property items (base name: "items")', function() {
        // TODO: update the code to test the property items
        expect(instance).to.have.property('items');
        // expect(instance.items).to.be(expectedValueLiteral);
      });

    });
  });

}));
