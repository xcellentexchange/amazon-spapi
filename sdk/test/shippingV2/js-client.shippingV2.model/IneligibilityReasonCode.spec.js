/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/shippingV2/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/shippingV2/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonShippingApi);
  }
}(this, function(expect, AmazonShippingApi) {
  'use strict';

  var instance;

  describe('shippingV2', function() {
    describe('IneligibilityReasonCode', function() {
      beforeEach(function() {
        instance = AmazonShippingApi.IneligibilityReasonCode;
      });

      it('should create an instance of IneligibilityReasonCode', function() {
        // TODO: update the code to test IneligibilityReasonCode
        expect(instance).to.be.a('object');
      });

      it('should have the property NO_COVERAGE', function() {
        expect(instance).to.have.property('NO_COVERAGE');
        expect(instance.NO_COVERAGE).to.be("NO_COVERAGE");
      });

      it('should have the property PICKUP_SLOT_RESTRICTION', function() {
        expect(instance).to.have.property('PICKUP_SLOT_RESTRICTION');
        expect(instance.PICKUP_SLOT_RESTRICTION).to.be("PICKUP_SLOT_RESTRICTION");
      });

      it('should have the property UNSUPPORTED_VAS', function() {
        expect(instance).to.have.property('UNSUPPORTED_VAS');
        expect(instance.UNSUPPORTED_VAS).to.be("UNSUPPORTED_VAS");
      });

      it('should have the property VAS_COMBINATION_RESTRICTION', function() {
        expect(instance).to.have.property('VAS_COMBINATION_RESTRICTION');
        expect(instance.VAS_COMBINATION_RESTRICTION).to.be("VAS_COMBINATION_RESTRICTION");
      });

      it('should have the property SIZE_RESTRICTIONS', function() {
        expect(instance).to.have.property('SIZE_RESTRICTIONS');
        expect(instance.SIZE_RESTRICTIONS).to.be("SIZE_RESTRICTIONS");
      });

      it('should have the property WEIGHT_RESTRICTIONS', function() {
        expect(instance).to.have.property('WEIGHT_RESTRICTIONS');
        expect(instance.WEIGHT_RESTRICTIONS).to.be("WEIGHT_RESTRICTIONS");
      });

      it('should have the property LATE_DELIVERY', function() {
        expect(instance).to.have.property('LATE_DELIVERY');
        expect(instance.LATE_DELIVERY).to.be("LATE_DELIVERY");
      });

      it('should have the property PROGRAM_CONSTRAINTS', function() {
        expect(instance).to.have.property('PROGRAM_CONSTRAINTS');
        expect(instance.PROGRAM_CONSTRAINTS).to.be("PROGRAM_CONSTRAINTS");
      });

      it('should have the property TERMS_AND_CONDITIONS_NOT_ACCEPTED', function() {
        expect(instance).to.have.property('TERMS_AND_CONDITIONS_NOT_ACCEPTED');
        expect(instance.TERMS_AND_CONDITIONS_NOT_ACCEPTED).to.be("TERMS_AND_CONDITIONS_NOT_ACCEPTED");
      });

      it('should have the property UNKNOWN', function() {
        expect(instance).to.have.property('UNKNOWN');
        expect(instance.UNKNOWN).to.be("UNKNOWN");
      });

    });
  });

}));
