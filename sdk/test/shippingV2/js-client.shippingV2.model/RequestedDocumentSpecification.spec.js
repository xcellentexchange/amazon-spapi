/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/shippingV2/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/shippingV2/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonShippingApi);
  }
}(this, function(expect, AmazonShippingApi) {
  'use strict';

  var instance;

  describe('shippingV2', function() {
    describe('RequestedDocumentSpecification', function() {
      beforeEach(function() {
        instance = new AmazonShippingApi.RequestedDocumentSpecification();
      });

      it('should create an instance of RequestedDocumentSpecification', function() {
        // TODO: update the code to test RequestedDocumentSpecification
        expect(instance).to.be.a(AmazonShippingApi.RequestedDocumentSpecification);
      });

      it('should have the property format (base name: "format")', function() {
        // TODO: update the code to test the property format
        expect(instance).to.have.property('format');
        // expect(instance.format).to.be(expectedValueLiteral);
      });

      it('should have the property size (base name: "size")', function() {
        // TODO: update the code to test the property size
        expect(instance).to.have.property('size');
        // expect(instance.size).to.be(expectedValueLiteral);
      });

      it('should have the property dpi (base name: "dpi")', function() {
        // TODO: update the code to test the property dpi
        expect(instance).to.have.property('dpi');
        // expect(instance.dpi).to.be(expectedValueLiteral);
      });

      it('should have the property pageLayout (base name: "pageLayout")', function() {
        // TODO: update the code to test the property pageLayout
        expect(instance).to.have.property('pageLayout');
        // expect(instance.pageLayout).to.be(expectedValueLiteral);
      });

      it('should have the property needFileJoining (base name: "needFileJoining")', function() {
        // TODO: update the code to test the property needFileJoining
        expect(instance).to.have.property('needFileJoining');
        // expect(instance.needFileJoining).to.be(expectedValueLiteral);
      });

      it('should have the property requestedDocumentTypes (base name: "requestedDocumentTypes")', function() {
        // TODO: update the code to test the property requestedDocumentTypes
        expect(instance).to.have.property('requestedDocumentTypes');
        // expect(instance.requestedDocumentTypes).to.be(expectedValueLiteral);
      });

    });
  });

}));
