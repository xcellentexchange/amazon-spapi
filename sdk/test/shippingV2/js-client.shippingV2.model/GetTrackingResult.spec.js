/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/shippingV2/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/shippingV2/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AmazonShippingApi);
  }
}(this, function(expect, AmazonShippingApi) {
  'use strict';

  var instance;

  describe('shippingV2', function() {
    describe('GetTrackingResult', function() {
      beforeEach(function() {
        instance = new AmazonShippingApi.GetTrackingResult();
      });

      it('should create an instance of GetTrackingResult', function() {
        // TODO: update the code to test GetTrackingResult
        expect(instance).to.be.a(AmazonShippingApi.GetTrackingResult);
      });

      it('should have the property trackingId (base name: "trackingId")', function() {
        // TODO: update the code to test the property trackingId
        expect(instance).to.have.property('trackingId');
        // expect(instance.trackingId).to.be(expectedValueLiteral);
      });

      it('should have the property alternateLegTrackingId (base name: "alternateLegTrackingId")', function() {
        // TODO: update the code to test the property alternateLegTrackingId
        expect(instance).to.have.property('alternateLegTrackingId');
        // expect(instance.alternateLegTrackingId).to.be(expectedValueLiteral);
      });

      it('should have the property eventHistory (base name: "eventHistory")', function() {
        // TODO: update the code to test the property eventHistory
        expect(instance).to.have.property('eventHistory');
        // expect(instance.eventHistory).to.be(expectedValueLiteral);
      });

      it('should have the property promisedDeliveryDate (base name: "promisedDeliveryDate")', function() {
        // TODO: update the code to test the property promisedDeliveryDate
        expect(instance).to.have.property('promisedDeliveryDate');
        // expect(instance.promisedDeliveryDate).to.be(expectedValueLiteral);
      });

      it('should have the property summary (base name: "summary")', function() {
        // TODO: update the code to test the property summary
        expect(instance).to.have.property('summary');
        // expect(instance.summary).to.be(expectedValueLiteral);
      });

    });
  });

}));
