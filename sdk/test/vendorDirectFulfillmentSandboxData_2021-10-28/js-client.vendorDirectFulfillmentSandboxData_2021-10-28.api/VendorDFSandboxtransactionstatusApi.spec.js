/*
 * Selling Partner API for Vendor Direct Fulfillment Sandbox Test Data
 * The Selling Partner API for Vendor Direct Fulfillment Sandbox Test Data provides programmatic access to vendor direct fulfillment sandbox test data.
 *
 * OpenAPI spec version: 2021-10-28
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorDirectFulfillmentSandboxData_2021-10-28/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorDirectFulfillmentSandboxData_2021-10-28/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForVendorDirectFulfillmentSandboxTestData);
  }
}(this, function(expect, SellingPartnerApiForVendorDirectFulfillmentSandboxTestData) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SellingPartnerApiForVendorDirectFulfillmentSandboxTestData.VendorDFSandboxtransactionstatusApi();
  });

  describe('vendorDirectFulfillmentSandboxData_2021-10-28', function() {
    describe('VendorDFSandboxtransactionstatusApi', function() {
      describe('getOrderScenarios', function() {
        it('should call getOrderScenarios successfully', function(done) {
          // TODO: uncomment, update parameter values for getOrderScenarios call and complete the assertions
          /*
          var transactionId = "transactionId_example";

          instance.getOrderScenarios(transactionId).then(function(data) {
            // TODO: update response assertions
            expect(data).to.be.a(SellingPartnerApiForVendorDirectFulfillmentSandboxTestData.TransactionStatus);
            expect(data.transactionStatus).to.be.a(SellingPartnerApiForVendorDirectFulfillmentSandboxTestData.Transaction);
                  expect(data.transactionStatus.transactionId).to.be.a('string');
              // expect(data.transactionStatus.transactionId).to.be("");
              expect(data.transactionStatus.status).to.be.a('string');
              // expect(data.transactionStatus.status).to.be("FAILURE");
              expect(data.transactionStatus.testCaseData).to.be.a(SellingPartnerApiForVendorDirectFulfillmentSandboxTestData.TestCaseData);
                    {
                  let dataCtr = data.transactionStatus.testCaseData.scenarios;
                  expect(dataCtr).to.be.an(Array);
                  expect(dataCtr).to.not.be.empty();
                  for (let p in dataCtr) {
                    let data = dataCtr[p];
                    expect(data).to.be.a(SellingPartnerApiForVendorDirectFulfillmentSandboxTestData.Scenario);
                    expect(data.scenarioId).to.be.a('string');
                    // expect(data.scenarioId).to.be("");
                    {
                      let dataCtr = data.orders;
                      expect(dataCtr).to.be.an(Array);
                      expect(dataCtr).to.not.be.empty();
                      for (let p in dataCtr) {
                        let data = dataCtr[p];
                        expect(data).to.be.a(SellingPartnerApiForVendorDirectFulfillmentSandboxTestData.TestOrder);
                        expect(data.orderId).to.be.a('string');
                        // expect(data.orderId).to.be("");
                      }
                    }
                  }
                }

            done();
          }, function(error) {
            done(error);
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
