/*
 * Selling Partner API for Merchant Fulfillment
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/merchantFulfillmentV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/merchantFulfillmentV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForMerchantFulfillment);
  }
}(this, function(expect, SellingPartnerApiForMerchantFulfillment) {
  'use strict';

  var instance;

  describe('merchantFulfillmentV0', function() {
    describe('CreateShipmentRequest', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForMerchantFulfillment.CreateShipmentRequest();
      });

      it('should create an instance of CreateShipmentRequest', function() {
        // TODO: update the code to test CreateShipmentRequest
        expect(instance).to.be.a(SellingPartnerApiForMerchantFulfillment.CreateShipmentRequest);
      });

      it('should have the property shipmentRequestDetails (base name: "ShipmentRequestDetails")', function() {
        // TODO: update the code to test the property shipmentRequestDetails
        expect(instance).to.have.property('shipmentRequestDetails');
        // expect(instance.shipmentRequestDetails).to.be(expectedValueLiteral);
      });

      it('should have the property shippingServiceId (base name: "ShippingServiceId")', function() {
        // TODO: update the code to test the property shippingServiceId
        expect(instance).to.have.property('shippingServiceId');
        // expect(instance.shippingServiceId).to.be(expectedValueLiteral);
      });

      it('should have the property shippingServiceOfferId (base name: "ShippingServiceOfferId")', function() {
        // TODO: update the code to test the property shippingServiceOfferId
        expect(instance).to.have.property('shippingServiceOfferId');
        // expect(instance.shippingServiceOfferId).to.be(expectedValueLiteral);
      });

      it('should have the property hazmatType (base name: "HazmatType")', function() {
        // TODO: update the code to test the property hazmatType
        expect(instance).to.have.property('hazmatType');
        // expect(instance.hazmatType).to.be(expectedValueLiteral);
      });

      it('should have the property labelFormatOption (base name: "LabelFormatOption")', function() {
        // TODO: update the code to test the property labelFormatOption
        expect(instance).to.have.property('labelFormatOption');
        // expect(instance.labelFormatOption).to.be(expectedValueLiteral);
      });

      it('should have the property shipmentLevelSellerInputsList (base name: "ShipmentLevelSellerInputsList")', function() {
        // TODO: update the code to test the property shipmentLevelSellerInputsList
        expect(instance).to.have.property('shipmentLevelSellerInputsList');
        // expect(instance.shipmentLevelSellerInputsList).to.be(expectedValueLiteral);
      });

    });
  });

}));
