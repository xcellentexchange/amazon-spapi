/*
 * Selling Partner API for Merchant Fulfillment
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/merchantFulfillmentV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/merchantFulfillmentV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForMerchantFulfillment);
  }
}(this, function(expect, SellingPartnerApiForMerchantFulfillment) {
  'use strict';

  var instance;

  describe('merchantFulfillmentV0', function() {
    describe('ShippingServiceOptions', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForMerchantFulfillment.ShippingServiceOptions();
      });

      it('should create an instance of ShippingServiceOptions', function() {
        // TODO: update the code to test ShippingServiceOptions
        expect(instance).to.be.a(SellingPartnerApiForMerchantFulfillment.ShippingServiceOptions);
      });

      it('should have the property deliveryExperience (base name: "DeliveryExperience")', function() {
        // TODO: update the code to test the property deliveryExperience
        expect(instance).to.have.property('deliveryExperience');
        // expect(instance.deliveryExperience).to.be(expectedValueLiteral);
      });

      it('should have the property declaredValue (base name: "DeclaredValue")', function() {
        // TODO: update the code to test the property declaredValue
        expect(instance).to.have.property('declaredValue');
        // expect(instance.declaredValue).to.be(expectedValueLiteral);
      });

      it('should have the property carrierWillPickUp (base name: "CarrierWillPickUp")', function() {
        // TODO: update the code to test the property carrierWillPickUp
        expect(instance).to.have.property('carrierWillPickUp');
        // expect(instance.carrierWillPickUp).to.be(expectedValueLiteral);
      });

      it('should have the property carrierWillPickUpOption (base name: "CarrierWillPickUpOption")', function() {
        // TODO: update the code to test the property carrierWillPickUpOption
        expect(instance).to.have.property('carrierWillPickUpOption');
        // expect(instance.carrierWillPickUpOption).to.be(expectedValueLiteral);
      });

      it('should have the property labelFormat (base name: "LabelFormat")', function() {
        // TODO: update the code to test the property labelFormat
        expect(instance).to.have.property('labelFormat');
        // expect(instance.labelFormat).to.be(expectedValueLiteral);
      });

    });
  });

}));
