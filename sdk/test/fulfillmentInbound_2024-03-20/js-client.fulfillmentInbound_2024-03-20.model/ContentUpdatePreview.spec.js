/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInbound_2024-03-20/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInbound_2024-03-20/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForFbaInboundOperations);
  }
}(this, function(expect, TheSellingPartnerApiForFbaInboundOperations) {
  'use strict';

  var instance;

  describe('fulfillmentInbound_2024-03-20', function() {
    describe('ContentUpdatePreview', function() {
      beforeEach(function() {
        instance = new TheSellingPartnerApiForFbaInboundOperations.ContentUpdatePreview();
      });

      it('should create an instance of ContentUpdatePreview', function() {
        // TODO: update the code to test ContentUpdatePreview
        expect(instance).to.be.a(TheSellingPartnerApiForFbaInboundOperations.ContentUpdatePreview);
      });

      it('should have the property contentUpdatePreviewId (base name: "contentUpdatePreviewId")', function() {
        // TODO: update the code to test the property contentUpdatePreviewId
        expect(instance).to.have.property('contentUpdatePreviewId');
        // expect(instance.contentUpdatePreviewId).to.be(expectedValueLiteral);
      });

      it('should have the property expiration (base name: "expiration")', function() {
        // TODO: update the code to test the property expiration
        expect(instance).to.have.property('expiration');
        // expect(instance.expiration).to.be(expectedValueLiteral);
      });

      it('should have the property requestedUpdates (base name: "requestedUpdates")', function() {
        // TODO: update the code to test the property requestedUpdates
        expect(instance).to.have.property('requestedUpdates');
        // expect(instance.requestedUpdates).to.be(expectedValueLiteral);
      });

      it('should have the property transportationOption (base name: "transportationOption")', function() {
        // TODO: update the code to test the property transportationOption
        expect(instance).to.have.property('transportationOption');
        // expect(instance.transportationOption).to.be(expectedValueLiteral);
      });

    });
  });

}));
