/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInbound_2024-03-20/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInbound_2024-03-20/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForFbaInboundOperations);
  }
}(this, function(expect, TheSellingPartnerApiForFbaInboundOperations) {
  'use strict';

  var instance;

  describe('fulfillmentInbound_2024-03-20', function() {
    describe('TaxDetails', function() {
      beforeEach(function() {
        instance = new TheSellingPartnerApiForFbaInboundOperations.TaxDetails();
      });

      it('should create an instance of TaxDetails', function() {
        // TODO: update the code to test TaxDetails
        expect(instance).to.be.a(TheSellingPartnerApiForFbaInboundOperations.TaxDetails);
      });

      it('should have the property declaredValue (base name: "declaredValue")', function() {
        // TODO: update the code to test the property declaredValue
        expect(instance).to.have.property('declaredValue');
        // expect(instance.declaredValue).to.be(expectedValueLiteral);
      });

      it('should have the property hsnCode (base name: "hsnCode")', function() {
        // TODO: update the code to test the property hsnCode
        expect(instance).to.have.property('hsnCode');
        // expect(instance.hsnCode).to.be(expectedValueLiteral);
      });

      it('should have the property taxRates (base name: "taxRates")', function() {
        // TODO: update the code to test the property taxRates
        expect(instance).to.have.property('taxRates');
        // expect(instance.taxRates).to.be(expectedValueLiteral);
      });

    });
  });

}));
