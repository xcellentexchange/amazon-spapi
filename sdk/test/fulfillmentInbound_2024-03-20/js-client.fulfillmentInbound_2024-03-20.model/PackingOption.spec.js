/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInbound_2024-03-20/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInbound_2024-03-20/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForFbaInboundOperations);
  }
}(this, function(expect, TheSellingPartnerApiForFbaInboundOperations) {
  'use strict';

  var instance;

  describe('fulfillmentInbound_2024-03-20', function() {
    describe('PackingOption', function() {
      beforeEach(function() {
        instance = new TheSellingPartnerApiForFbaInboundOperations.PackingOption();
      });

      it('should create an instance of PackingOption', function() {
        // TODO: update the code to test PackingOption
        expect(instance).to.be.a(TheSellingPartnerApiForFbaInboundOperations.PackingOption);
      });

      it('should have the property discounts (base name: "discounts")', function() {
        // TODO: update the code to test the property discounts
        expect(instance).to.have.property('discounts');
        // expect(instance.discounts).to.be(expectedValueLiteral);
      });

      it('should have the property expiration (base name: "expiration")', function() {
        // TODO: update the code to test the property expiration
        expect(instance).to.have.property('expiration');
        // expect(instance.expiration).to.be(expectedValueLiteral);
      });

      it('should have the property fees (base name: "fees")', function() {
        // TODO: update the code to test the property fees
        expect(instance).to.have.property('fees');
        // expect(instance.fees).to.be(expectedValueLiteral);
      });

      it('should have the property packingGroups (base name: "packingGroups")', function() {
        // TODO: update the code to test the property packingGroups
        expect(instance).to.have.property('packingGroups');
        // expect(instance.packingGroups).to.be(expectedValueLiteral);
      });

      it('should have the property packingOptionId (base name: "packingOptionId")', function() {
        // TODO: update the code to test the property packingOptionId
        expect(instance).to.have.property('packingOptionId');
        // expect(instance.packingOptionId).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property supportedShippingConfigurations (base name: "supportedShippingConfigurations")', function() {
        // TODO: update the code to test the property supportedShippingConfigurations
        expect(instance).to.have.property('supportedShippingConfigurations');
        // expect(instance.supportedShippingConfigurations).to.be(expectedValueLiteral);
      });

    });
  });

}));
