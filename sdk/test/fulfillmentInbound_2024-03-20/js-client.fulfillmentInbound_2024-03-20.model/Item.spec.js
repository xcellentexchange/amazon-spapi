/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInbound_2024-03-20/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInbound_2024-03-20/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheSellingPartnerApiForFbaInboundOperations);
  }
}(this, function(expect, TheSellingPartnerApiForFbaInboundOperations) {
  'use strict';

  var instance;

  describe('fulfillmentInbound_2024-03-20', function() {
    describe('Item', function() {
      beforeEach(function() {
        instance = new TheSellingPartnerApiForFbaInboundOperations.Item();
      });

      it('should create an instance of Item', function() {
        // TODO: update the code to test Item
        expect(instance).to.be.a(TheSellingPartnerApiForFbaInboundOperations.Item);
      });

      it('should have the property asin (base name: "asin")', function() {
        // TODO: update the code to test the property asin
        expect(instance).to.have.property('asin');
        // expect(instance.asin).to.be(expectedValueLiteral);
      });

      it('should have the property expiration (base name: "expiration")', function() {
        // TODO: update the code to test the property expiration
        expect(instance).to.have.property('expiration');
        // expect(instance.expiration).to.be(expectedValueLiteral);
      });

      it('should have the property fnsku (base name: "fnsku")', function() {
        // TODO: update the code to test the property fnsku
        expect(instance).to.have.property('fnsku');
        // expect(instance.fnsku).to.be(expectedValueLiteral);
      });

      it('should have the property labelOwner (base name: "labelOwner")', function() {
        // TODO: update the code to test the property labelOwner
        expect(instance).to.have.property('labelOwner');
        // expect(instance.labelOwner).to.be(expectedValueLiteral);
      });

      it('should have the property manufacturingLotCode (base name: "manufacturingLotCode")', function() {
        // TODO: update the code to test the property manufacturingLotCode
        expect(instance).to.have.property('manufacturingLotCode');
        // expect(instance.manufacturingLotCode).to.be(expectedValueLiteral);
      });

      it('should have the property msku (base name: "msku")', function() {
        // TODO: update the code to test the property msku
        expect(instance).to.have.property('msku');
        // expect(instance.msku).to.be(expectedValueLiteral);
      });

      it('should have the property prepInstructions (base name: "prepInstructions")', function() {
        // TODO: update the code to test the property prepInstructions
        expect(instance).to.have.property('prepInstructions');
        // expect(instance.prepInstructions).to.be(expectedValueLiteral);
      });

      it('should have the property quantity (base name: "quantity")', function() {
        // TODO: update the code to test the property quantity
        expect(instance).to.have.property('quantity');
        // expect(instance.quantity).to.be(expectedValueLiteral);
      });

    });
  });

}));
