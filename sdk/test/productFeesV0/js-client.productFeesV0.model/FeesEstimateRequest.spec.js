/*
 * Selling Partner API for Product Fees
 * The Selling Partner API for Product Fees lets you programmatically retrieve estimated fees for a product. You can then account for those fees in your pricing.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/productFeesV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/productFeesV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForProductFees);
  }
}(this, function(expect, SellingPartnerApiForProductFees) {
  'use strict';

  var instance;

  describe('productFeesV0', function() {
    describe('FeesEstimateRequest', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForProductFees.FeesEstimateRequest();
      });

      it('should create an instance of FeesEstimateRequest', function() {
        // TODO: update the code to test FeesEstimateRequest
        expect(instance).to.be.a(SellingPartnerApiForProductFees.FeesEstimateRequest);
      });

      it('should have the property marketplaceId (base name: "MarketplaceId")', function() {
        // TODO: update the code to test the property marketplaceId
        expect(instance).to.have.property('marketplaceId');
        // expect(instance.marketplaceId).to.be(expectedValueLiteral);
      });

      it('should have the property isAmazonFulfilled (base name: "IsAmazonFulfilled")', function() {
        // TODO: update the code to test the property isAmazonFulfilled
        expect(instance).to.have.property('isAmazonFulfilled');
        // expect(instance.isAmazonFulfilled).to.be(expectedValueLiteral);
      });

      it('should have the property priceToEstimateFees (base name: "PriceToEstimateFees")', function() {
        // TODO: update the code to test the property priceToEstimateFees
        expect(instance).to.have.property('priceToEstimateFees');
        // expect(instance.priceToEstimateFees).to.be(expectedValueLiteral);
      });

      it('should have the property identifier (base name: "Identifier")', function() {
        // TODO: update the code to test the property identifier
        expect(instance).to.have.property('identifier');
        // expect(instance.identifier).to.be(expectedValueLiteral);
      });

      it('should have the property optionalFulfillmentProgram (base name: "OptionalFulfillmentProgram")', function() {
        // TODO: update the code to test the property optionalFulfillmentProgram
        expect(instance).to.have.property('optionalFulfillmentProgram');
        // expect(instance.optionalFulfillmentProgram).to.be(expectedValueLiteral);
      });

    });
  });

}));
