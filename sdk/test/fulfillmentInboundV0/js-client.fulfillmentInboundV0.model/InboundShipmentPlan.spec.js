/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInboundV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInboundV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFulfillmentInbound);
  }
}(this, function(expect, SellingPartnerApiForFulfillmentInbound) {
  'use strict';

  var instance;

  describe('fulfillmentInboundV0', function() {
    describe('InboundShipmentPlan', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForFulfillmentInbound.InboundShipmentPlan();
      });

      it('should create an instance of InboundShipmentPlan', function() {
        // TODO: update the code to test InboundShipmentPlan
        expect(instance).to.be.a(SellingPartnerApiForFulfillmentInbound.InboundShipmentPlan);
      });

      it('should have the property shipmentId (base name: "ShipmentId")', function() {
        // TODO: update the code to test the property shipmentId
        expect(instance).to.have.property('shipmentId');
        // expect(instance.shipmentId).to.be(expectedValueLiteral);
      });

      it('should have the property destinationFulfillmentCenterId (base name: "DestinationFulfillmentCenterId")', function() {
        // TODO: update the code to test the property destinationFulfillmentCenterId
        expect(instance).to.have.property('destinationFulfillmentCenterId');
        // expect(instance.destinationFulfillmentCenterId).to.be(expectedValueLiteral);
      });

      it('should have the property shipToAddress (base name: "ShipToAddress")', function() {
        // TODO: update the code to test the property shipToAddress
        expect(instance).to.have.property('shipToAddress');
        // expect(instance.shipToAddress).to.be(expectedValueLiteral);
      });

      it('should have the property labelPrepType (base name: "LabelPrepType")', function() {
        // TODO: update the code to test the property labelPrepType
        expect(instance).to.have.property('labelPrepType');
        // expect(instance.labelPrepType).to.be(expectedValueLiteral);
      });

      it('should have the property items (base name: "Items")', function() {
        // TODO: update the code to test the property items
        expect(instance).to.have.property('items');
        // expect(instance.items).to.be(expectedValueLiteral);
      });

      it('should have the property estimatedBoxContentsFee (base name: "EstimatedBoxContentsFee")', function() {
        // TODO: update the code to test the property estimatedBoxContentsFee
        expect(instance).to.have.property('estimatedBoxContentsFee');
        // expect(instance.estimatedBoxContentsFee).to.be(expectedValueLiteral);
      });

    });
  });

}));
