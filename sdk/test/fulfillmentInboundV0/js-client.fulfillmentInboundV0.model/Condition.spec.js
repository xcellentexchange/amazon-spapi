/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInboundV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInboundV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFulfillmentInbound);
  }
}(this, function(expect, SellingPartnerApiForFulfillmentInbound) {
  'use strict';

  var instance;

  describe('fulfillmentInboundV0', function() {
    describe('Condition', function() {
      beforeEach(function() {
        instance = SellingPartnerApiForFulfillmentInbound.Condition;
      });

      it('should create an instance of Condition', function() {
        // TODO: update the code to test Condition
        expect(instance).to.be.a('object');
      });

      it('should have the property newItem', function() {
        expect(instance).to.have.property('newItem');
        expect(instance.newItem).to.be("NewItem");
      });

      it('should have the property newWithWarranty', function() {
        expect(instance).to.have.property('newWithWarranty');
        expect(instance.newWithWarranty).to.be("NewWithWarranty");
      });

      it('should have the property newOEM', function() {
        expect(instance).to.have.property('newOEM');
        expect(instance.newOEM).to.be("NewOEM");
      });

      it('should have the property newOpenBox', function() {
        expect(instance).to.have.property('newOpenBox');
        expect(instance.newOpenBox).to.be("NewOpenBox");
      });

      it('should have the property usedLikeNew', function() {
        expect(instance).to.have.property('usedLikeNew');
        expect(instance.usedLikeNew).to.be("UsedLikeNew");
      });

      it('should have the property usedVeryGood', function() {
        expect(instance).to.have.property('usedVeryGood');
        expect(instance.usedVeryGood).to.be("UsedVeryGood");
      });

      it('should have the property usedGood', function() {
        expect(instance).to.have.property('usedGood');
        expect(instance.usedGood).to.be("UsedGood");
      });

      it('should have the property usedAcceptable', function() {
        expect(instance).to.have.property('usedAcceptable');
        expect(instance.usedAcceptable).to.be("UsedAcceptable");
      });

      it('should have the property usedPoor', function() {
        expect(instance).to.have.property('usedPoor');
        expect(instance.usedPoor).to.be("UsedPoor");
      });

      it('should have the property usedRefurbished', function() {
        expect(instance).to.have.property('usedRefurbished');
        expect(instance.usedRefurbished).to.be("UsedRefurbished");
      });

      it('should have the property collectibleLikeNew', function() {
        expect(instance).to.have.property('collectibleLikeNew');
        expect(instance.collectibleLikeNew).to.be("CollectibleLikeNew");
      });

      it('should have the property collectibleVeryGood', function() {
        expect(instance).to.have.property('collectibleVeryGood');
        expect(instance.collectibleVeryGood).to.be("CollectibleVeryGood");
      });

      it('should have the property collectibleGood', function() {
        expect(instance).to.have.property('collectibleGood');
        expect(instance.collectibleGood).to.be("CollectibleGood");
      });

      it('should have the property collectibleAcceptable', function() {
        expect(instance).to.have.property('collectibleAcceptable');
        expect(instance.collectibleAcceptable).to.be("CollectibleAcceptable");
      });

      it('should have the property collectiblePoor', function() {
        expect(instance).to.have.property('collectiblePoor');
        expect(instance.collectiblePoor).to.be("CollectiblePoor");
      });

      it('should have the property refurbishedWithWarranty', function() {
        expect(instance).to.have.property('refurbishedWithWarranty');
        expect(instance.refurbishedWithWarranty).to.be("RefurbishedWithWarranty");
      });

      it('should have the property refurbished', function() {
        expect(instance).to.have.property('refurbished');
        expect(instance.refurbished).to.be("Refurbished");
      });

      it('should have the property club', function() {
        expect(instance).to.have.property('club');
        expect(instance.club).to.be("Club");
      });

    });
  });

}));
