/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/fulfillmentInboundV0/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/fulfillmentInboundV0/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForFulfillmentInbound);
  }
}(this, function(expect, SellingPartnerApiForFulfillmentInbound) {
  'use strict';

  var instance;

  describe('fulfillmentInboundV0', function() {
    describe('TransportResult', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForFulfillmentInbound.TransportResult();
      });

      it('should create an instance of TransportResult', function() {
        // TODO: update the code to test TransportResult
        expect(instance).to.be.a(SellingPartnerApiForFulfillmentInbound.TransportResult);
      });

      it('should have the property transportStatus (base name: "TransportStatus")', function() {
        // TODO: update the code to test the property transportStatus
        expect(instance).to.have.property('transportStatus');
        // expect(instance.transportStatus).to.be(expectedValueLiteral);
      });

      it('should have the property errorCode (base name: "ErrorCode")', function() {
        // TODO: update the code to test the property errorCode
        expect(instance).to.have.property('errorCode');
        // expect(instance.errorCode).to.be(expectedValueLiteral);
      });

      it('should have the property errorDescription (base name: "ErrorDescription")', function() {
        // TODO: update the code to test the property errorDescription
        expect(instance).to.have.property('errorDescription');
        // expect(instance.errorDescription).to.be(expectedValueLiteral);
      });

    });
  });

}));
