/*
 * Selling Partner API for Direct Fulfillment Inventory Updates
 * The Selling Partner API for Direct Fulfillment Inventory Updates provides programmatic access to a direct fulfillment vendor's inventory updates.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../../src/vendorDirectFulfillmentInventoryV1/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../../src/vendorDirectFulfillmentInventoryV1/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SellingPartnerApiForDirectFulfillmentInventoryUpdates);
  }
}(this, function(expect, SellingPartnerApiForDirectFulfillmentInventoryUpdates) {
  'use strict';

  var instance;

  describe('vendorDirectFulfillmentInventoryV1', function() {
    describe('ItemDetails', function() {
      beforeEach(function() {
        instance = new SellingPartnerApiForDirectFulfillmentInventoryUpdates.ItemDetails();
      });

      it('should create an instance of ItemDetails', function() {
        // TODO: update the code to test ItemDetails
        expect(instance).to.be.a(SellingPartnerApiForDirectFulfillmentInventoryUpdates.ItemDetails);
      });

      it('should have the property buyerProductIdentifier (base name: "buyerProductIdentifier")', function() {
        // TODO: update the code to test the property buyerProductIdentifier
        expect(instance).to.have.property('buyerProductIdentifier');
        // expect(instance.buyerProductIdentifier).to.be(expectedValueLiteral);
      });

      it('should have the property vendorProductIdentifier (base name: "vendorProductIdentifier")', function() {
        // TODO: update the code to test the property vendorProductIdentifier
        expect(instance).to.have.property('vendorProductIdentifier');
        // expect(instance.vendorProductIdentifier).to.be(expectedValueLiteral);
      });

      it('should have the property availableQuantity (base name: "availableQuantity")', function() {
        // TODO: update the code to test the property availableQuantity
        expect(instance).to.have.property('availableQuantity');
        // expect(instance.availableQuantity).to.be(expectedValueLiteral);
      });

      it('should have the property isObsolete (base name: "isObsolete")', function() {
        // TODO: update the code to test the property isObsolete
        expect(instance).to.have.property('isObsolete');
        // expect(instance.isObsolete).to.be(expectedValueLiteral);
      });

    });
  });

}));
