/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {CancelInboundPlanResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/CancelInboundPlanResponse.js';
import {CancelSelfShipAppointmentRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/CancelSelfShipAppointmentRequest.js';
import {CancelSelfShipAppointmentResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/CancelSelfShipAppointmentResponse.js';
import {ConfirmDeliveryWindowOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ConfirmDeliveryWindowOptionsResponse.js';
import {ConfirmPackingOptionResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ConfirmPackingOptionResponse.js';
import {ConfirmPlacementOptionResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ConfirmPlacementOptionResponse.js';
import {ConfirmShipmentContentUpdatePreviewResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ConfirmShipmentContentUpdatePreviewResponse.js';
import {ConfirmTransportationOptionsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/ConfirmTransportationOptionsRequest.js';
import {ConfirmTransportationOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ConfirmTransportationOptionsResponse.js';
import {ContentUpdatePreview} from '../js-client.fulfillmentInbound_2024-03-20.model/ContentUpdatePreview.js';
import {CreateInboundPlanRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/CreateInboundPlanRequest.js';
import {CreateInboundPlanResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/CreateInboundPlanResponse.js';
import {CreateMarketplaceItemLabelsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/CreateMarketplaceItemLabelsRequest.js';
import {CreateMarketplaceItemLabelsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/CreateMarketplaceItemLabelsResponse.js';
import {ErrorList} from '../js-client.fulfillmentInbound_2024-03-20.model/ErrorList.js';
import {GenerateDeliveryWindowOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateDeliveryWindowOptionsResponse.js';
import {GeneratePackingOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GeneratePackingOptionsResponse.js';
import {GeneratePlacementOptionsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/GeneratePlacementOptionsRequest.js';
import {GeneratePlacementOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GeneratePlacementOptionsResponse.js';
import {GenerateSelfShipAppointmentSlotsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateSelfShipAppointmentSlotsRequest.js';
import {GenerateSelfShipAppointmentSlotsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateSelfShipAppointmentSlotsResponse.js';
import {GenerateShipmentContentUpdatePreviewsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateShipmentContentUpdatePreviewsRequest.js';
import {GenerateShipmentContentUpdatePreviewsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateShipmentContentUpdatePreviewsResponse.js';
import {GenerateTransportationOptionsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateTransportationOptionsRequest.js';
import {GenerateTransportationOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GenerateTransportationOptionsResponse.js';
import {GetDeliveryChallanDocumentResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GetDeliveryChallanDocumentResponse.js';
import {GetSelfShipAppointmentSlotsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/GetSelfShipAppointmentSlotsResponse.js';
import {InboundOperationStatus} from '../js-client.fulfillmentInbound_2024-03-20.model/InboundOperationStatus.js';
import {InboundPlan} from '../js-client.fulfillmentInbound_2024-03-20.model/InboundPlan.js';
import {ListDeliveryWindowOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListDeliveryWindowOptionsResponse.js';
import {ListInboundPlanBoxesResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanBoxesResponse.js';
import {ListInboundPlanItemsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanItemsResponse.js';
import {ListInboundPlanPalletsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanPalletsResponse.js';
import {ListInboundPlansResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlansResponse.js';
import {ListItemComplianceDetailsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListItemComplianceDetailsResponse.js';
import {ListPackingGroupBoxesResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListPackingGroupBoxesResponse.js';
import {ListPackingGroupItemsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListPackingGroupItemsResponse.js';
import {ListPackingOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListPackingOptionsResponse.js';
import {ListPlacementOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListPlacementOptionsResponse.js';
import {ListPrepDetailsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListPrepDetailsResponse.js';
import {ListShipmentBoxesResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListShipmentBoxesResponse.js';
import {ListShipmentContentUpdatePreviewsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListShipmentContentUpdatePreviewsResponse.js';
import {ListShipmentItemsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListShipmentItemsResponse.js';
import {ListShipmentPalletsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListShipmentPalletsResponse.js';
import {ListTransportationOptionsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ListTransportationOptionsResponse.js';
import {ScheduleSelfShipAppointmentRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/ScheduleSelfShipAppointmentRequest.js';
import {ScheduleSelfShipAppointmentResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/ScheduleSelfShipAppointmentResponse.js';
import {SetPackingInformationRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/SetPackingInformationRequest.js';
import {SetPackingInformationResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/SetPackingInformationResponse.js';
import {SetPrepDetailsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/SetPrepDetailsRequest.js';
import {SetPrepDetailsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/SetPrepDetailsResponse.js';
import {Shipment} from '../js-client.fulfillmentInbound_2024-03-20.model/Shipment.js';
import {UpdateInboundPlanNameRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateInboundPlanNameRequest.js';
import {UpdateItemComplianceDetailsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateItemComplianceDetailsRequest.js';
import {UpdateItemComplianceDetailsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateItemComplianceDetailsResponse.js';
import {UpdateShipmentNameRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentNameRequest.js';
import {UpdateShipmentSourceAddressRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentSourceAddressRequest.js';
import {UpdateShipmentSourceAddressResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentSourceAddressResponse.js';
import {UpdateShipmentTrackingDetailsRequest} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentTrackingDetailsRequest.js';
import {UpdateShipmentTrackingDetailsResponse} from '../js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentTrackingDetailsResponse.js';

/**
* FbaInbound service.
* @module fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.api/FbaInboundApi
* @version 2024-03-20
*/
export class FbaInboundApi {

    /**
    * Constructs a new FbaInboundApi. 
    * @alias module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.api/FbaInboundApi
    * @class
    * @param {module:fulfillmentInbound_2024-03-20/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:fulfillmentInbound_2024-03-20/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Cancels an Inbound Plan. Charges may apply if the cancellation is performed outside of a void window. The window for Amazon Partnered Carriers is 24 hours for Small Parcel Delivery (SPD) and one hour for Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CancelInboundPlanResponse} and HTTP response
     */
    cancelInboundPlanWithHttpInfo(inboundPlanId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling cancelInboundPlan");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CancelInboundPlanResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/cancellation', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Cancels an Inbound Plan. Charges may apply if the cancellation is performed outside of a void window. The window for Amazon Partnered Carriers is 24 hours for Small Parcel Delivery (SPD) and one hour for Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CancelInboundPlanResponse}
     */
    cancelInboundPlan(inboundPlanId) {
      return this.cancelInboundPlanWithHttpInfo(inboundPlanId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Cancels a self-ship appointment slot against a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CancelSelfShipAppointmentRequest} body The body of the request to `cancelSelfShipAppointment`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CancelSelfShipAppointmentResponse} and HTTP response
     */
    cancelSelfShipAppointmentWithHttpInfo(inboundPlanId, shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling cancelSelfShipAppointment");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling cancelSelfShipAppointment");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling cancelSelfShipAppointment");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CancelSelfShipAppointmentResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentCancellation', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Cancels a self-ship appointment slot against a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CancelSelfShipAppointmentRequest} body The body of the request to `cancelSelfShipAppointment`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CancelSelfShipAppointmentResponse}
     */
    cancelSelfShipAppointment(inboundPlanId, shipmentId, body) {
      return this.cancelSelfShipAppointmentWithHttpInfo(inboundPlanId, shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirms the delivery window option for chosen shipment within an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new delivery window options cannot be generated, but the chosen delivery window option can be updated before shipment closure. The window is used to provide the expected time when a shipment will arrive at the warehouse. All transportation options which have the program `CONFIRMED_DELIVERY_WINDOW` require a delivery window to be confirmed prior to transportation option confirmation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId The shipment to confirm the delivery window option for.
     * @param {String} deliveryWindowOptionId The id of the delivery window option to be confirmed.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmDeliveryWindowOptionsResponse} and HTTP response
     */
    confirmDeliveryWindowOptionsWithHttpInfo(inboundPlanId, shipmentId, deliveryWindowOptionId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling confirmDeliveryWindowOptions");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling confirmDeliveryWindowOptions");
      }

      // verify the required parameter 'deliveryWindowOptionId' is set
      if (deliveryWindowOptionId === undefined || deliveryWindowOptionId === null) {
        throw new Error("Missing the required parameter 'deliveryWindowOptionId' when calling confirmDeliveryWindowOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId,
        'deliveryWindowOptionId': deliveryWindowOptionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfirmDeliveryWindowOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions/{deliveryWindowOptionId}/confirmation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirms the delivery window option for chosen shipment within an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new delivery window options cannot be generated, but the chosen delivery window option can be updated before shipment closure. The window is used to provide the expected time when a shipment will arrive at the warehouse. All transportation options which have the program `CONFIRMED_DELIVERY_WINDOW` require a delivery window to be confirmed prior to transportation option confirmation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId The shipment to confirm the delivery window option for.
     * @param {String} deliveryWindowOptionId The id of the delivery window option to be confirmed.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmDeliveryWindowOptionsResponse}
     */
    confirmDeliveryWindowOptions(inboundPlanId, shipmentId, deliveryWindowOptionId) {
      return this.confirmDeliveryWindowOptionsWithHttpInfo(inboundPlanId, shipmentId, deliveryWindowOptionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirms the packing option for an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} packingOptionId Identifier of a packing option.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmPackingOptionResponse} and HTTP response
     */
    confirmPackingOptionWithHttpInfo(inboundPlanId, packingOptionId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling confirmPackingOption");
      }

      // verify the required parameter 'packingOptionId' is set
      if (packingOptionId === undefined || packingOptionId === null) {
        throw new Error("Missing the required parameter 'packingOptionId' when calling confirmPackingOption");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'packingOptionId': packingOptionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfirmPackingOptionResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions/{packingOptionId}/confirmation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirms the packing option for an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} packingOptionId Identifier of a packing option.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmPackingOptionResponse}
     */
    confirmPackingOption(inboundPlanId, packingOptionId) {
      return this.confirmPackingOptionWithHttpInfo(inboundPlanId, packingOptionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirms the placement option for an inbound plan. Once confirmed, it cannot be changed for the Inbound Plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} placementOptionId The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmPlacementOptionResponse} and HTTP response
     */
    confirmPlacementOptionWithHttpInfo(inboundPlanId, placementOptionId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling confirmPlacementOption");
      }

      // verify the required parameter 'placementOptionId' is set
      if (placementOptionId === undefined || placementOptionId === null) {
        throw new Error("Missing the required parameter 'placementOptionId' when calling confirmPlacementOption");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'placementOptionId': placementOptionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfirmPlacementOptionResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions/{placementOptionId}/confirmation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirms the placement option for an inbound plan. Once confirmed, it cannot be changed for the Inbound Plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} placementOptionId The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmPlacementOptionResponse}
     */
    confirmPlacementOption(inboundPlanId, placementOptionId) {
      return this.confirmPlacementOptionWithHttpInfo(inboundPlanId, placementOptionId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirm a shipment content update preview and accept the changes in transportation cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {String} contentUpdatePreviewId Identifier of a content update preview.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmShipmentContentUpdatePreviewResponse} and HTTP response
     */
    confirmShipmentContentUpdatePreviewWithHttpInfo(inboundPlanId, shipmentId, contentUpdatePreviewId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling confirmShipmentContentUpdatePreview");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling confirmShipmentContentUpdatePreview");
      }

      // verify the required parameter 'contentUpdatePreviewId' is set
      if (contentUpdatePreviewId === undefined || contentUpdatePreviewId === null) {
        throw new Error("Missing the required parameter 'contentUpdatePreviewId' when calling confirmShipmentContentUpdatePreview");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId,
        'contentUpdatePreviewId': contentUpdatePreviewId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfirmShipmentContentUpdatePreviewResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}/confirmation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirm a shipment content update preview and accept the changes in transportation cost.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {String} contentUpdatePreviewId Identifier of a content update preview.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmShipmentContentUpdatePreviewResponse}
     */
    confirmShipmentContentUpdatePreview(inboundPlanId, shipmentId, contentUpdatePreviewId) {
      return this.confirmShipmentContentUpdatePreviewWithHttpInfo(inboundPlanId, shipmentId, contentUpdatePreviewId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirms all the transportation options for an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new transportation options can not be generated or confirmed for the Inbound Plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmTransportationOptionsRequest} body The body of the request to `confirmTransportationOptions`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmTransportationOptionsResponse} and HTTP response
     */
    confirmTransportationOptionsWithHttpInfo(inboundPlanId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling confirmTransportationOptions");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling confirmTransportationOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ConfirmTransportationOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions/confirmation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirms all the transportation options for an inbound plan. A placement option must be confirmed prior to use of this API. Once confirmed, new transportation options can not be generated or confirmed for the Inbound Plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmTransportationOptionsRequest} body The body of the request to `confirmTransportationOptions`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ConfirmTransportationOptionsResponse}
     */
    confirmTransportationOptions(inboundPlanId, body) {
      return this.confirmTransportationOptionsWithHttpInfo(inboundPlanId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Creates an inbound plan. An inbound plan contains all the necessary information to send shipments into Amazon's fufillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateInboundPlanRequest} body The body of the request to `createInboundPlan`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateInboundPlanResponse} and HTTP response
     */
    createInboundPlanWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createInboundPlan");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateInboundPlanResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Creates an inbound plan. An inbound plan contains all the necessary information to send shipments into Amazon's fufillment network.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateInboundPlanRequest} body The body of the request to `createInboundPlan`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateInboundPlanResponse}
     */
    createInboundPlan(body) {
      return this.createInboundPlanWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * For a given marketplace - creates labels for a list of MSKUs.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateMarketplaceItemLabelsRequest} body The body of the request to `createMarketplaceItemLabels`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateMarketplaceItemLabelsResponse} and HTTP response
     */
    createMarketplaceItemLabelsWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createMarketplaceItemLabels");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateMarketplaceItemLabelsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/items/labels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * For a given marketplace - creates labels for a list of MSKUs.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateMarketplaceItemLabelsRequest} body The body of the request to `createMarketplaceItemLabels`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/CreateMarketplaceItemLabelsResponse}
     */
    createMarketplaceItemLabels(body) {
      return this.createMarketplaceItemLabelsWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Generates available delivery window options for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId The shipment to generate delivery window options for.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateDeliveryWindowOptionsResponse} and HTTP response
     */
    generateDeliveryWindowOptionsWithHttpInfo(inboundPlanId, shipmentId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling generateDeliveryWindowOptions");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling generateDeliveryWindowOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateDeliveryWindowOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Generates available delivery window options for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId The shipment to generate delivery window options for.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateDeliveryWindowOptionsResponse}
     */
    generateDeliveryWindowOptions(inboundPlanId, shipmentId) {
      return this.generateDeliveryWindowOptionsWithHttpInfo(inboundPlanId, shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Generates available packing options for the inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GeneratePackingOptionsResponse} and HTTP response
     */
    generatePackingOptionsWithHttpInfo(inboundPlanId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling generatePackingOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GeneratePackingOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Generates available packing options for the inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GeneratePackingOptionsResponse}
     */
    generatePackingOptions(inboundPlanId) {
      return this.generatePackingOptionsWithHttpInfo(inboundPlanId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Generates placement options for the inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GeneratePlacementOptionsRequest} body The body of the request to `generatePlacementOptions`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GeneratePlacementOptionsResponse} and HTTP response
     */
    generatePlacementOptionsWithHttpInfo(inboundPlanId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling generatePlacementOptions");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling generatePlacementOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GeneratePlacementOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Generates placement options for the inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GeneratePlacementOptionsRequest} body The body of the request to `generatePlacementOptions`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GeneratePlacementOptionsResponse}
     */
    generatePlacementOptions(inboundPlanId, body) {
      return this.generatePlacementOptionsWithHttpInfo(inboundPlanId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Initiates the process of generating the appointment slots list.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateSelfShipAppointmentSlotsRequest} body The body of the request to `generateSelfShipAppointmentSlots`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateSelfShipAppointmentSlotsResponse} and HTTP response
     */
    generateSelfShipAppointmentSlotsWithHttpInfo(inboundPlanId, shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling generateSelfShipAppointmentSlots");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling generateSelfShipAppointmentSlots");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling generateSelfShipAppointmentSlots");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateSelfShipAppointmentSlotsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Initiates the process of generating the appointment slots list.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateSelfShipAppointmentSlotsRequest} body The body of the request to `generateSelfShipAppointmentSlots`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateSelfShipAppointmentSlotsResponse}
     */
    generateSelfShipAppointmentSlots(inboundPlanId, shipmentId, body) {
      return this.generateSelfShipAppointmentSlotsWithHttpInfo(inboundPlanId, shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Generate a shipment content update preview given a set of intended boxes and/or items for a shipment with a confirmed carrier. The shipment content update preview will be viewable with the updated costs and contents prior to confirmation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateShipmentContentUpdatePreviewsRequest} body The body of the request to `generateShipmentContentUpdatePreviews`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateShipmentContentUpdatePreviewsResponse} and HTTP response
     */
    generateShipmentContentUpdatePreviewsWithHttpInfo(inboundPlanId, shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling generateShipmentContentUpdatePreviews");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling generateShipmentContentUpdatePreviews");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling generateShipmentContentUpdatePreviews");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateShipmentContentUpdatePreviewsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Generate a shipment content update preview given a set of intended boxes and/or items for a shipment with a confirmed carrier. The shipment content update preview will be viewable with the updated costs and contents prior to confirmation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateShipmentContentUpdatePreviewsRequest} body The body of the request to `generateShipmentContentUpdatePreviews`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateShipmentContentUpdatePreviewsResponse}
     */
    generateShipmentContentUpdatePreviews(inboundPlanId, shipmentId, body) {
      return this.generateShipmentContentUpdatePreviewsWithHttpInfo(inboundPlanId, shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Generates available transportation options for a given placement option.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateTransportationOptionsRequest} body The body of the request to `generateTransportationOptions`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateTransportationOptionsResponse} and HTTP response
     */
    generateTransportationOptionsWithHttpInfo(inboundPlanId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling generateTransportationOptions");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling generateTransportationOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GenerateTransportationOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Generates available transportation options for a given placement option.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateTransportationOptionsRequest} body The body of the request to `generateTransportationOptions`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GenerateTransportationOptionsResponse}
     */
    generateTransportationOptions(inboundPlanId, body) {
      return this.generateTransportationOptionsWithHttpInfo(inboundPlanId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provide delivery challan document for PCP transportation in IN marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GetDeliveryChallanDocumentResponse} and HTTP response
     */
    getDeliveryChallanDocumentWithHttpInfo(inboundPlanId, shipmentId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling getDeliveryChallanDocument");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getDeliveryChallanDocument");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetDeliveryChallanDocumentResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryChallanDocument', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provide delivery challan document for PCP transportation in IN marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GetDeliveryChallanDocumentResponse}
     */
    getDeliveryChallanDocument(inboundPlanId, shipmentId) {
      return this.getDeliveryChallanDocumentWithHttpInfo(inboundPlanId, shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Gets the status of the processing of an asynchronous API call.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} operationId Identifier of an asynchronous operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/InboundOperationStatus} and HTTP response
     */
    getInboundOperationStatusWithHttpInfo(operationId) {
      let postBody = null;

      // verify the required parameter 'operationId' is set
      if (operationId === undefined || operationId === null) {
        throw new Error("Missing the required parameter 'operationId' when calling getInboundOperationStatus");
      }


      let pathParams = {
        'operationId': operationId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundOperationStatus;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/operations/{operationId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Gets the status of the processing of an asynchronous API call.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} operationId Identifier of an asynchronous operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/InboundOperationStatus}
     */
    getInboundOperationStatus(operationId) {
      return this.getInboundOperationStatusWithHttpInfo(operationId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Fetches the top level information about an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/InboundPlan} and HTTP response
     */
    getInboundPlanWithHttpInfo(inboundPlanId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling getInboundPlan");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundPlan;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Fetches the top level information about an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/InboundPlan}
     */
    getInboundPlan(inboundPlanId) {
      return this.getInboundPlanWithHttpInfo(inboundPlanId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves a list of available self-ship appointment slots used to drop off a shipment at a warehouse.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of self ship appointment slots to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GetSelfShipAppointmentSlotsResponse} and HTTP response
     */
    getSelfShipAppointmentSlotsWithHttpInfo(inboundPlanId, shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling getSelfShipAppointmentSlots");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getSelfShipAppointmentSlots");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSelfShipAppointmentSlotsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves a list of available self-ship appointment slots used to drop off a shipment at a warehouse.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of self ship appointment slots to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/GetSelfShipAppointmentSlotsResponse}
     */
    getSelfShipAppointmentSlots(inboundPlanId, shipmentId, opts) {
      return this.getSelfShipAppointmentSlotsWithHttpInfo(inboundPlanId, shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides the full details for a specific shipment within an inbound plan. The `transportationOptionId` inside `acceptedTransportationSelection` can be used to retrieve the transportation details for the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Shipment} and HTTP response
     */
    getShipmentWithHttpInfo(inboundPlanId, shipmentId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling getShipment");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getShipment");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Shipment;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides the full details for a specific shipment within an inbound plan. The `transportationOptionId` inside `acceptedTransportationSelection` can be used to retrieve the transportation details for the shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Shipment}
     */
    getShipment(inboundPlanId, shipmentId) {
      return this.getShipmentWithHttpInfo(inboundPlanId, shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve a shipment content update preview which provides a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {String} contentUpdatePreviewId Identifier of a content update preview.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ContentUpdatePreview} and HTTP response
     */
    getShipmentContentUpdatePreviewWithHttpInfo(inboundPlanId, shipmentId, contentUpdatePreviewId) {
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling getShipmentContentUpdatePreview");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getShipmentContentUpdatePreview");
      }

      // verify the required parameter 'contentUpdatePreviewId' is set
      if (contentUpdatePreviewId === undefined || contentUpdatePreviewId === null) {
        throw new Error("Missing the required parameter 'contentUpdatePreviewId' when calling getShipmentContentUpdatePreview");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId,
        'contentUpdatePreviewId': contentUpdatePreviewId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ContentUpdatePreview;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews/{contentUpdatePreviewId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve a shipment content update preview which provides a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {String} contentUpdatePreviewId Identifier of a content update preview.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ContentUpdatePreview}
     */
    getShipmentContentUpdatePreview(inboundPlanId, shipmentId, contentUpdatePreviewId) {
      return this.getShipmentContentUpdatePreviewWithHttpInfo(inboundPlanId, shipmentId, contentUpdatePreviewId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves all delivery window options for a shipment. Delivery window options must first be generated by the `generateDeliveryWindowOptions` operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId The shipment to get delivery window options for.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of delivery window options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListDeliveryWindowOptionsResponse} and HTTP response
     */
    listDeliveryWindowOptionsWithHttpInfo(inboundPlanId, shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listDeliveryWindowOptions");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling listDeliveryWindowOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListDeliveryWindowOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/deliveryWindowOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves all delivery window options for a shipment. Delivery window options must first be generated by the `generateDeliveryWindowOptions` operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId The shipment to get delivery window options for.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of delivery window options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListDeliveryWindowOptionsResponse}
     */
    listDeliveryWindowOptions(inboundPlanId, shipmentId, opts) {
      return this.listDeliveryWindowOptionsWithHttpInfo(inboundPlanId, shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a paginated list of box packages in an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of boxes to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanBoxesResponse} and HTTP response
     */
    listInboundPlanBoxesWithHttpInfo(inboundPlanId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listInboundPlanBoxes");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListInboundPlanBoxesResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/boxes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a paginated list of box packages in an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of boxes to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanBoxesResponse}
     */
    listInboundPlanBoxes(inboundPlanId, opts) {
      return this.listInboundPlanBoxesWithHttpInfo(inboundPlanId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a paginated list of item packages in an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of items to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanItemsResponse} and HTTP response
     */
    listInboundPlanItemsWithHttpInfo(inboundPlanId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listInboundPlanItems");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListInboundPlanItemsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a paginated list of item packages in an inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of items to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanItemsResponse}
     */
    listInboundPlanItems(inboundPlanId, opts) {
      return this.listInboundPlanItemsWithHttpInfo(inboundPlanId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a paginated list of pallet packages in an inbound plan. An inbound plan will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of pallets to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanPalletsResponse} and HTTP response
     */
    listInboundPlanPalletsWithHttpInfo(inboundPlanId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listInboundPlanPallets");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListInboundPlanPalletsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/pallets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a paginated list of pallet packages in an inbound plan. An inbound plan will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of pallets to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlanPalletsResponse}
     */
    listInboundPlanPallets(inboundPlanId, opts) {
      return this.listInboundPlanPalletsWithHttpInfo(inboundPlanId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a list of inbound plans with minimal information.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of inbound plans to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/String} opts.status The status of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/String} opts.sortBy Sort by field.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/String} opts.sortOrder The sort order.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlansResponse} and HTTP response
     */
    listInboundPlansWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken'],
        'status': opts['status'],
        'sortBy': opts['sortBy'],
        'sortOrder': opts['sortOrder']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListInboundPlansResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a list of inbound plans with minimal information.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of inbound plans to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/String} opts.status The status of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/String} opts.sortBy Sort by field.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/String} opts.sortOrder The sort order.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListInboundPlansResponse}
     */
    listInboundPlans(opts) {
      return this.listInboundPlansWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * List the inbound compliance details for MSKUs in a given marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array.<String>} mskus A list of merchant SKUs, a merchant-supplied identifier of a specific SKU.
     * @param {String} marketplaceId The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListItemComplianceDetailsResponse} and HTTP response
     */
    listItemComplianceDetailsWithHttpInfo(mskus, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'mskus' is set
      if (mskus === undefined || mskus === null) {
        throw new Error("Missing the required parameter 'mskus' when calling listItemComplianceDetails");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listItemComplianceDetails");
      }


      let pathParams = {
      };
      let queryParams = {
        'mskus': this.apiClient.buildCollectionParam(mskus, 'multi'),
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListItemComplianceDetailsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/items/compliance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * List the inbound compliance details for MSKUs in a given marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Array.<String>} mskus A list of merchant SKUs, a merchant-supplied identifier of a specific SKU.
     * @param {String} marketplaceId The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListItemComplianceDetailsResponse}
     */
    listItemComplianceDetails(mskus, marketplaceId) {
      return this.listItemComplianceDetailsWithHttpInfo(mskus, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves a page of boxes from a given packing group. These boxes were previously provided through the `setPackingInformation` operation. This API is used for workflows where boxes are packed before Amazon determines shipment splits.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} packingGroupId Identifier of a packing group.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of packing group boxes to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPackingGroupBoxesResponse} and HTTP response
     */
    listPackingGroupBoxesWithHttpInfo(inboundPlanId, packingGroupId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listPackingGroupBoxes");
      }

      // verify the required parameter 'packingGroupId' is set
      if (packingGroupId === undefined || packingGroupId === null) {
        throw new Error("Missing the required parameter 'packingGroupId' when calling listPackingGroupBoxes");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'packingGroupId': packingGroupId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPackingGroupBoxesResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/boxes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves a page of boxes from a given packing group. These boxes were previously provided through the `setPackingInformation` operation. This API is used for workflows where boxes are packed before Amazon determines shipment splits.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} packingGroupId Identifier of a packing group.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of packing group boxes to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPackingGroupBoxesResponse}
     */
    listPackingGroupBoxes(inboundPlanId, packingGroupId, opts) {
      return this.listPackingGroupBoxesWithHttpInfo(inboundPlanId, packingGroupId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves a page of items in a given packing group. Packing options must first be generated by the corresponding operation before packing group items can be listed.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} packingGroupId Identifier of a packing group.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of packing group items to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPackingGroupItemsResponse} and HTTP response
     */
    listPackingGroupItemsWithHttpInfo(inboundPlanId, packingGroupId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listPackingGroupItems");
      }

      // verify the required parameter 'packingGroupId' is set
      if (packingGroupId === undefined || packingGroupId === null) {
        throw new Error("Missing the required parameter 'packingGroupId' when calling listPackingGroupItems");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'packingGroupId': packingGroupId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPackingGroupItemsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingGroups/{packingGroupId}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves a page of items in a given packing group. Packing options must first be generated by the corresponding operation before packing group items can be listed.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} packingGroupId Identifier of a packing group.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of packing group items to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPackingGroupItemsResponse}
     */
    listPackingGroupItems(inboundPlanId, packingGroupId, opts) {
      return this.listPackingGroupItemsWithHttpInfo(inboundPlanId, packingGroupId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves a list of all packing options for an inbound plan. Packing options must first be generated by the corresponding operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of packing options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPackingOptionsResponse} and HTTP response
     */
    listPackingOptionsWithHttpInfo(inboundPlanId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listPackingOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPackingOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves a list of all packing options for an inbound plan. Packing options must first be generated by the corresponding operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of packing options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPackingOptionsResponse}
     */
    listPackingOptions(inboundPlanId, opts) {
      return this.listPackingOptionsWithHttpInfo(inboundPlanId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a list of all placement options for an inbound plan. Placement options must first be generated by the corresponding operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of placement options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPlacementOptionsResponse} and HTTP response
     */
    listPlacementOptionsWithHttpInfo(inboundPlanId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listPlacementOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPlacementOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/placementOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a list of all placement options for an inbound plan. Placement options must first be generated by the corresponding operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of placement options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPlacementOptionsResponse}
     */
    listPlacementOptions(inboundPlanId, opts) {
      return this.listPlacementOptionsWithHttpInfo(inboundPlanId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get preparation details for a list of MSKUs in a specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} marketplaceId The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Array.<String>} mskus A list of merchant SKUs, a merchant-supplied identifier of a specific SKU.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPrepDetailsResponse} and HTTP response
     */
    listPrepDetailsWithHttpInfo(marketplaceId, mskus) {
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listPrepDetails");
      }

      // verify the required parameter 'mskus' is set
      if (mskus === undefined || mskus === null) {
        throw new Error("Missing the required parameter 'mskus' when calling listPrepDetails");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'mskus': this.apiClient.buildCollectionParam(mskus, 'multi')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListPrepDetailsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/items/prepDetails', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Get preparation details for a list of MSKUs in a specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} marketplaceId The marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {Array.<String>} mskus A list of merchant SKUs, a merchant-supplied identifier of a specific SKU.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListPrepDetailsResponse}
     */
    listPrepDetails(marketplaceId, mskus) {
      return this.listPrepDetailsWithHttpInfo(marketplaceId, mskus)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a paginated list of box packages in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of boxes to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentBoxesResponse} and HTTP response
     */
    listShipmentBoxesWithHttpInfo(inboundPlanId, shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listShipmentBoxes");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling listShipmentBoxes");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListShipmentBoxesResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/boxes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a paginated list of box packages in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of boxes to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentBoxesResponse}
     */
    listShipmentBoxes(inboundPlanId, shipmentId, opts) {
      return this.listShipmentBoxesWithHttpInfo(inboundPlanId, shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieve a paginated list of shipment content update previews for a given shipment. The shipment content update preview is a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of content update previews to return. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentContentUpdatePreviewsResponse} and HTTP response
     */
    listShipmentContentUpdatePreviewsWithHttpInfo(inboundPlanId, shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listShipmentContentUpdatePreviews");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling listShipmentContentUpdatePreviews");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListShipmentContentUpdatePreviewsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/contentUpdatePreviews', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieve a paginated list of shipment content update previews for a given shipment. The shipment content update preview is a summary of the requested shipment content changes along with the transportation cost implications of the change that can only be confirmed prior to the expiry date specified.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of content update previews to return. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentContentUpdatePreviewsResponse}
     */
    listShipmentContentUpdatePreviews(inboundPlanId, shipmentId, opts) {
      return this.listShipmentContentUpdatePreviewsWithHttpInfo(inboundPlanId, shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a paginated list of item packages in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of items to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentItemsResponse} and HTTP response
     */
    listShipmentItemsWithHttpInfo(inboundPlanId, shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listShipmentItems");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling listShipmentItems");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListShipmentItemsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a paginated list of item packages in a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of items to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentItemsResponse}
     */
    listShipmentItems(inboundPlanId, shipmentId, opts) {
      return this.listShipmentItemsWithHttpInfo(inboundPlanId, shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Provides a paginated list of pallet packages in a shipment. A palletized shipment will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of pallets to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentPalletsResponse} and HTTP response
     */
    listShipmentPalletsWithHttpInfo(inboundPlanId, shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listShipmentPallets");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling listShipmentPallets");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListShipmentPalletsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/pallets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Provides a paginated list of pallet packages in a shipment. A palletized shipment will have pallets when the related details are provided after generating Less-Than-Truckload (LTL) carrier shipments.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of pallets to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListShipmentPalletsResponse}
     */
    listShipmentPallets(inboundPlanId, shipmentId, opts) {
      return this.listShipmentPalletsWithHttpInfo(inboundPlanId, shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves all transportation options for a shipment. Transportation options must first be generated by the `generateTransportationOptions` operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of transportation options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @param {String} opts.placementOptionId The placement option to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.
     * @param {String} opts.shipmentId The shipment to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListTransportationOptionsResponse} and HTTP response
     */
    listTransportationOptionsWithHttpInfo(inboundPlanId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling listTransportationOptions");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
        'pageSize': opts['pageSize'],
        'paginationToken': opts['paginationToken'],
        'placementOptionId': opts['placementOptionId'],
        'shipmentId': opts['shipmentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListTransportationOptionsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/transportationOptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves all transportation options for a shipment. Transportation options must first be generated by the `generateTransportationOptions` operation before becoming available.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.pageSize The number of transportation options to return in the response matching the given query. (default to 10)
     * @param {String} opts.paginationToken A token to fetch a certain page when there are multiple pages worth of results. The value of this token is fetched from the `pagination` returned in the API response. In the absence of the token value from the query parameter the API returns the first page of the result.
     * @param {String} opts.placementOptionId The placement option to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.
     * @param {String} opts.shipmentId The shipment to get transportation options for. Either `placementOptionId` or `shipmentId` must be specified.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ListTransportationOptionsResponse}
     */
    listTransportationOptions(inboundPlanId, opts) {
      return this.listTransportationOptionsWithHttpInfo(inboundPlanId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Confirms or reschedules a self-ship appointment slot against a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {String} slotId An identifier to a self-ship appointment slot.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ScheduleSelfShipAppointmentRequest} body The body of the request to `scheduleSelfShipAppointment`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ScheduleSelfShipAppointmentResponse} and HTTP response
     */
    scheduleSelfShipAppointmentWithHttpInfo(inboundPlanId, shipmentId, slotId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling scheduleSelfShipAppointment");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling scheduleSelfShipAppointment");
      }

      // verify the required parameter 'slotId' is set
      if (slotId === undefined || slotId === null) {
        throw new Error("Missing the required parameter 'slotId' when calling scheduleSelfShipAppointment");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling scheduleSelfShipAppointment");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId,
        'slotId': slotId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ScheduleSelfShipAppointmentResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/selfShipAppointmentSlots/{slotId}/schedule', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Confirms or reschedules a self-ship appointment slot against a shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {String} slotId An identifier to a self-ship appointment slot.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ScheduleSelfShipAppointmentRequest} body The body of the request to `scheduleSelfShipAppointment`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ScheduleSelfShipAppointmentResponse}
     */
    scheduleSelfShipAppointment(inboundPlanId, shipmentId, slotId, body) {
      return this.scheduleSelfShipAppointmentWithHttpInfo(inboundPlanId, shipmentId, slotId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Sets packing information for an inbound plan. This should be called after an inbound plan is created to populate the box level information required for planning and transportation estimates.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPackingInformationRequest} body The body of the request to `setPackingInformation`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPackingInformationResponse} and HTTP response
     */
    setPackingInformationWithHttpInfo(inboundPlanId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling setPackingInformation");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling setPackingInformation");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SetPackingInformationResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/packingInformation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Sets packing information for an inbound plan. This should be called after an inbound plan is created to populate the box level information required for planning and transportation estimates.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPackingInformationRequest} body The body of the request to `setPackingInformation`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPackingInformationResponse}
     */
    setPackingInformation(inboundPlanId, body) {
      return this.setPackingInformationWithHttpInfo(inboundPlanId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Set the preparation details for a list of MSKUs in a specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPrepDetailsRequest} body The body of the request to `setPrepDetails`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPrepDetailsResponse} and HTTP response
     */
    setPrepDetailsWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling setPrepDetails");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SetPrepDetailsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/items/prepDetails', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Set the preparation details for a list of MSKUs in a specified marketplace.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPrepDetailsRequest} body The body of the request to `setPrepDetails`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SetPrepDetailsResponse}
     */
    setPrepDetails(body) {
      return this.setPrepDetailsWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates the name of an existing inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateInboundPlanNameRequest} body The body of the request to `updateInboundPlanName`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateInboundPlanNameWithHttpInfo(inboundPlanId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling updateInboundPlanName");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateInboundPlanName");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/name', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates the name of an existing inbound plan.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateInboundPlanNameRequest} body The body of the request to `updateInboundPlanName`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateInboundPlanName(inboundPlanId, body) {
      return this.updateInboundPlanNameWithHttpInfo(inboundPlanId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Update compliance details for a list of MSKUs. The details provided here are only used for the India (IN - A21TJRUUN4KGV) marketplace compliance validation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} marketplaceId The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateItemComplianceDetailsRequest} body The body of the request to `updateItemComplianceDetails`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateItemComplianceDetailsResponse} and HTTP response
     */
    updateItemComplianceDetailsWithHttpInfo(marketplaceId, body) {
      let postBody = body;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling updateItemComplianceDetails");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateItemComplianceDetails");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateItemComplianceDetailsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/items/compliance', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Update compliance details for a list of MSKUs. The details provided here are only used for the India (IN - A21TJRUUN4KGV) marketplace compliance validation.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 6 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} marketplaceId The Marketplace ID. For a list of possible values, refer to [Marketplace IDs](https://developer-docs.amazon.com/sp-api/docs/marketplace-ids).
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateItemComplianceDetailsRequest} body The body of the request to `updateItemComplianceDetails`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateItemComplianceDetailsResponse}
     */
    updateItemComplianceDetails(marketplaceId, body) {
      return this.updateItemComplianceDetailsWithHttpInfo(marketplaceId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates the name of an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentNameRequest} body The body of the request to `updateShipmentName`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateShipmentNameWithHttpInfo(inboundPlanId, shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling updateShipmentName");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling updateShipmentName");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateShipmentName");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/name', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates the name of an existing shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentNameRequest} body The body of the request to `updateShipmentName`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateShipmentName(inboundPlanId, shipmentId, body) {
      return this.updateShipmentNameWithHttpInfo(inboundPlanId, shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates the source address of an existing shipment. The shipment source address can only be updated prior to the confirmation of the shipment carriers. As a result of the updated source address, existing transportation options will be invalidated and will need to be regenerated to capture the potential difference in transportation options and quotes due to the new source address.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentSourceAddressRequest} body The body of the request to `updateShipmentSourceAddress`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentSourceAddressResponse} and HTTP response
     */
    updateShipmentSourceAddressWithHttpInfo(inboundPlanId, shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling updateShipmentSourceAddress");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling updateShipmentSourceAddress");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateShipmentSourceAddress");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateShipmentSourceAddressResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/sourceAddress', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates the source address of an existing shipment. The shipment source address can only be updated prior to the confirmation of the shipment carriers. As a result of the updated source address, existing transportation options will be invalidated and will need to be regenerated to capture the potential difference in transportation options and quotes due to the new source address.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 30 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentSourceAddressRequest} body The body of the request to `updateShipmentSourceAddress`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentSourceAddressResponse}
     */
    updateShipmentSourceAddress(inboundPlanId, shipmentId, body) {
      return this.updateShipmentSourceAddressWithHttpInfo(inboundPlanId, shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates a shipment's tracking details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentTrackingDetailsRequest} body The body of the request to `updateShipmentTrackingDetails`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentTrackingDetailsResponse} and HTTP response
     */
    updateShipmentTrackingDetailsWithHttpInfo(inboundPlanId, shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'inboundPlanId' is set
      if (inboundPlanId === undefined || inboundPlanId === null) {
        throw new Error("Missing the required parameter 'inboundPlanId' when calling updateShipmentTrackingDetails");
      }

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling updateShipmentTrackingDetails");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateShipmentTrackingDetails");
      }


      let pathParams = {
        'inboundPlanId': inboundPlanId,
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UpdateShipmentTrackingDetailsResponse;

      return this.apiClient.callApi(
        '/inbound/fba/2024-03-20/inboundPlans/{inboundPlanId}/shipments/{shipmentId}/trackingDetails', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates a shipment's tracking details.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may have higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} inboundPlanId Identifier of an inbound plan.
     * @param {String} shipmentId Identifier of a shipment. A shipment contains the boxes and units being inbounded.
     * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentTrackingDetailsRequest} body The body of the request to `updateShipmentTrackingDetails`.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/UpdateShipmentTrackingDetailsResponse}
     */
    updateShipmentTrackingDetails(inboundPlanId, shipmentId, body) {
      return this.updateShipmentTrackingDetailsWithHttpInfo(inboundPlanId, shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
