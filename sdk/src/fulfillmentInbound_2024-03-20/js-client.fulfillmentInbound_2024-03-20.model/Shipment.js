/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ContactInformation} from './ContactInformation.js';
import {Dates} from './Dates.js';
import {FreightInformation} from './FreightInformation.js';
import {SelectedDeliveryWindow} from './SelectedDeliveryWindow.js';
import {SelfShipAppointmentDetails} from './SelfShipAppointmentDetails.js';
import {ShipmentDestination} from './ShipmentDestination.js';
import {ShipmentSource} from './ShipmentSource.js';
import {TrackingDetails} from './TrackingDetails.js';

/**
 * The Shipment model module.
 * @module fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Shipment
 * @version 2024-03-20
 */
export class Shipment {
  /**
   * Constructs a new <code>Shipment</code>.
   * Contains information pertaining to a shipment in an inbound plan.
   * @alias module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Shipment
   * @class
   * @param destination {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ShipmentDestination} 
   * @param placementOptionId {String} The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.
   * @param shipmentId {String} Identifier of a shipment. A shipment contains the boxes and units being inbounded.
   * @param source {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ShipmentSource} 
   */
  constructor(destination, placementOptionId, shipmentId, source) {
    this.destination = destination;
    this.placementOptionId = placementOptionId;
    this.shipmentId = shipmentId;
    this.source = source;
  }

  /**
   * Constructs a <code>Shipment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Shipment} obj Optional instance to populate.
   * @return {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Shipment} The populated <code>Shipment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Shipment();
      if (data.hasOwnProperty('amazonReferenceId'))
        obj.amazonReferenceId = ApiClient.convertToType(data['amazonReferenceId'], 'String');
      if (data.hasOwnProperty('contactInformation'))
        obj.contactInformation = ContactInformation.constructFromObject(data['contactInformation']);
      if (data.hasOwnProperty('dates'))
        obj.dates = Dates.constructFromObject(data['dates']);
      if (data.hasOwnProperty('destination'))
        obj.destination = ShipmentDestination.constructFromObject(data['destination']);
      if (data.hasOwnProperty('freightInformation'))
        obj.freightInformation = FreightInformation.constructFromObject(data['freightInformation']);
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('placementOptionId'))
        obj.placementOptionId = ApiClient.convertToType(data['placementOptionId'], 'String');
      if (data.hasOwnProperty('selectedDeliveryWindow'))
        obj.selectedDeliveryWindow = SelectedDeliveryWindow.constructFromObject(data['selectedDeliveryWindow']);
      if (data.hasOwnProperty('selectedTransportationOptionId'))
        obj.selectedTransportationOptionId = ApiClient.convertToType(data['selectedTransportationOptionId'], 'String');
      if (data.hasOwnProperty('selfShipAppointmentDetails'))
        obj.selfShipAppointmentDetails = ApiClient.convertToType(data['selfShipAppointmentDetails'], [SelfShipAppointmentDetails]);
      if (data.hasOwnProperty('shipmentConfirmationId'))
        obj.shipmentConfirmationId = ApiClient.convertToType(data['shipmentConfirmationId'], 'String');
      if (data.hasOwnProperty('shipmentId'))
        obj.shipmentId = ApiClient.convertToType(data['shipmentId'], 'String');
      if (data.hasOwnProperty('source'))
        obj.source = ShipmentSource.constructFromObject(data['source']);
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('trackingDetails'))
        obj.trackingDetails = TrackingDetails.constructFromObject(data['trackingDetails']);
    }
    return obj;
  }
}

/**
 * A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment.
 * @member {String} amazonReferenceId
 */
Shipment.prototype.amazonReferenceId = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ContactInformation} contactInformation
 */
Shipment.prototype.contactInformation = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Dates} dates
 */
Shipment.prototype.dates = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ShipmentDestination} destination
 */
Shipment.prototype.destination = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/FreightInformation} freightInformation
 */
Shipment.prototype.freightInformation = undefined;

/**
 * The name of the shipment.
 * @member {String} name
 */
Shipment.prototype.name = undefined;

/**
 * The identifier of a placement option. A placement option represents the shipment splits and destinations of SKUs.
 * @member {String} placementOptionId
 */
Shipment.prototype.placementOptionId = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SelectedDeliveryWindow} selectedDeliveryWindow
 */
Shipment.prototype.selectedDeliveryWindow = undefined;

/**
 * Identifier of a transportation option. A transportation option represent one option for how to send a shipment.
 * @member {String} selectedTransportationOptionId
 */
Shipment.prototype.selectedTransportationOptionId = undefined;

/**
 * List of self ship appointment details.
 * @member {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/SelfShipAppointmentDetails>} selfShipAppointmentDetails
 */
Shipment.prototype.selfShipAppointmentDetails = undefined;

/**
 * The confirmed shipment ID which shows up on labels (for example, `FBA1234ABCD`).
 * @member {String} shipmentConfirmationId
 */
Shipment.prototype.shipmentConfirmationId = undefined;

/**
 * Identifier of a shipment. A shipment contains the boxes and units being inbounded.
 * @member {String} shipmentId
 */
Shipment.prototype.shipmentId = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ShipmentSource} source
 */
Shipment.prototype.source = undefined;

/**
 * The status of a shipment. The state of the shipment will typically start as `UNCONFIRMED`, then transition to `WORKING` after a placement option has been confirmed, and then to `READY_TO_SHIP` once labels are generated.  Possible values: `ABANDONED`, `CANCELLED`, `CHECKED_IN`, `CLOSED`, `DELETED`, `DELIVERED`, `IN_TRANSIT`, `MIXED`, `READY_TO_SHIP`, `RECEIVING`, `SHIPPED`, `UNCONFIRMED`, `WORKING`
 * @member {String} status
 */
Shipment.prototype.status = undefined;

/**
 * @member {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/TrackingDetails} trackingDetails
 */
Shipment.prototype.trackingDetails = undefined;


