/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The AddressInput model module.
 * @module fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/AddressInput
 * @version 2024-03-20
 */
export class AddressInput {
  /**
   * Constructs a new <code>AddressInput</code>.
   * Specific details to identify a place.
   * @alias module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/AddressInput
   * @class
   * @param addressLine1 {String} Street address information.
   * @param city {String} The city.
   * @param countryCode {String} The country code in two-character ISO 3166-1 alpha-2 format.
   * @param name {String} The name of the individual who is the primary contact.
   * @param phoneNumber {String} The phone number.
   * @param postalCode {String} The postal code.
   */
  constructor(addressLine1, city, countryCode, name, phoneNumber, postalCode) {
    this.addressLine1 = addressLine1;
    this.city = city;
    this.countryCode = countryCode;
    this.name = name;
    this.phoneNumber = phoneNumber;
    this.postalCode = postalCode;
  }

  /**
   * Constructs a <code>AddressInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/AddressInput} obj Optional instance to populate.
   * @return {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/AddressInput} The populated <code>AddressInput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new AddressInput();
      if (data.hasOwnProperty('addressLine1'))
        obj.addressLine1 = ApiClient.convertToType(data['addressLine1'], 'String');
      if (data.hasOwnProperty('addressLine2'))
        obj.addressLine2 = ApiClient.convertToType(data['addressLine2'], 'String');
      if (data.hasOwnProperty('city'))
        obj.city = ApiClient.convertToType(data['city'], 'String');
      if (data.hasOwnProperty('companyName'))
        obj.companyName = ApiClient.convertToType(data['companyName'], 'String');
      if (data.hasOwnProperty('countryCode'))
        obj.countryCode = ApiClient.convertToType(data['countryCode'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('phoneNumber'))
        obj.phoneNumber = ApiClient.convertToType(data['phoneNumber'], 'String');
      if (data.hasOwnProperty('postalCode'))
        obj.postalCode = ApiClient.convertToType(data['postalCode'], 'String');
      if (data.hasOwnProperty('stateOrProvinceCode'))
        obj.stateOrProvinceCode = ApiClient.convertToType(data['stateOrProvinceCode'], 'String');
    }
    return obj;
  }
}

/**
 * Street address information.
 * @member {String} addressLine1
 */
AddressInput.prototype.addressLine1 = undefined;

/**
 * Additional street address information.
 * @member {String} addressLine2
 */
AddressInput.prototype.addressLine2 = undefined;

/**
 * The city.
 * @member {String} city
 */
AddressInput.prototype.city = undefined;

/**
 * The name of the business.
 * @member {String} companyName
 */
AddressInput.prototype.companyName = undefined;

/**
 * The country code in two-character ISO 3166-1 alpha-2 format.
 * @member {String} countryCode
 */
AddressInput.prototype.countryCode = undefined;

/**
 * The email address.
 * @member {String} email
 */
AddressInput.prototype.email = undefined;

/**
 * The name of the individual who is the primary contact.
 * @member {String} name
 */
AddressInput.prototype.name = undefined;

/**
 * The phone number.
 * @member {String} phoneNumber
 */
AddressInput.prototype.phoneNumber = undefined;

/**
 * The postal code.
 * @member {String} postalCode
 */
AddressInput.prototype.postalCode = undefined;

/**
 * The state or province code.
 * @member {String} stateOrProvinceCode
 */
AddressInput.prototype.stateOrProvinceCode = undefined;


