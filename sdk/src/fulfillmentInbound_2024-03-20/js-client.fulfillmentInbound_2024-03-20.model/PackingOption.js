/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Incentive} from './Incentive.js';
import {ShippingConfiguration} from './ShippingConfiguration.js';

/**
 * The PackingOption model module.
 * @module fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackingOption
 * @version 2024-03-20
 */
export class PackingOption {
  /**
   * Constructs a new <code>PackingOption</code>.
   * A packing option contains a set of pack groups plus additional information about the packing option, such as any discounts or fees if it's selected.
   * @alias module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackingOption
   * @class
   * @param discounts {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Incentive>} Discount for the offered option.
   * @param fees {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Incentive>} Fee for the offered option.
   * @param packingGroups {Array.<String>} Packing group IDs.
   * @param packingOptionId {String} Identifier of a packing option.
   * @param status {String} The status of the packing option. Possible values: `OFFERED`, `ACCEPTED`, `EXPIRED`.
   * @param supportedShippingConfigurations {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ShippingConfiguration>} List of supported shipping modes.
   */
  constructor(discounts, fees, packingGroups, packingOptionId, status, supportedShippingConfigurations) {
    this.discounts = discounts;
    this.fees = fees;
    this.packingGroups = packingGroups;
    this.packingOptionId = packingOptionId;
    this.status = status;
    this.supportedShippingConfigurations = supportedShippingConfigurations;
  }

  /**
   * Constructs a <code>PackingOption</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackingOption} obj Optional instance to populate.
   * @return {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackingOption} The populated <code>PackingOption</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PackingOption();
      if (data.hasOwnProperty('discounts'))
        obj.discounts = ApiClient.convertToType(data['discounts'], [Incentive]);
      if (data.hasOwnProperty('expiration'))
        obj.expiration = ApiClient.convertToType(data['expiration'], 'Date');
      if (data.hasOwnProperty('fees'))
        obj.fees = ApiClient.convertToType(data['fees'], [Incentive]);
      if (data.hasOwnProperty('packingGroups'))
        obj.packingGroups = ApiClient.convertToType(data['packingGroups'], ['String']);
      if (data.hasOwnProperty('packingOptionId'))
        obj.packingOptionId = ApiClient.convertToType(data['packingOptionId'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('supportedShippingConfigurations'))
        obj.supportedShippingConfigurations = ApiClient.convertToType(data['supportedShippingConfigurations'], [ShippingConfiguration]);
    }
    return obj;
  }
}

/**
 * Discount for the offered option.
 * @member {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Incentive>} discounts
 */
PackingOption.prototype.discounts = undefined;

/**
 * The time at which this packing option is no longer valid. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern `yyyy-MM-ddTHH:mm:ss.sssZ`.
 * @member {Date} expiration
 */
PackingOption.prototype.expiration = undefined;

/**
 * Fee for the offered option.
 * @member {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Incentive>} fees
 */
PackingOption.prototype.fees = undefined;

/**
 * Packing group IDs.
 * @member {Array.<String>} packingGroups
 */
PackingOption.prototype.packingGroups = undefined;

/**
 * Identifier of a packing option.
 * @member {String} packingOptionId
 */
PackingOption.prototype.packingOptionId = undefined;

/**
 * The status of the packing option. Possible values: `OFFERED`, `ACCEPTED`, `EXPIRED`.
 * @member {String} status
 */
PackingOption.prototype.status = undefined;

/**
 * List of supported shipping modes.
 * @member {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/ShippingConfiguration>} supportedShippingConfigurations
 */
PackingOption.prototype.supportedShippingConfigurations = undefined;


