/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {BoxInput} from './BoxInput.js';

/**
 * The PackageGroupingInput model module.
 * @module fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackageGroupingInput
 * @version 2024-03-20
 */
export class PackageGroupingInput {
  /**
   * Constructs a new <code>PackageGroupingInput</code>.
   * Packing information for the inbound plan.
   * @alias module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackageGroupingInput
   * @class
   * @param boxes {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/BoxInput>} Box level information being provided.
   */
  constructor(boxes) {
    this.boxes = boxes;
  }

  /**
   * Constructs a <code>PackageGroupingInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackageGroupingInput} obj Optional instance to populate.
   * @return {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PackageGroupingInput} The populated <code>PackageGroupingInput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PackageGroupingInput();
      if (data.hasOwnProperty('boxes'))
        obj.boxes = ApiClient.convertToType(data['boxes'], [BoxInput]);
      if (data.hasOwnProperty('packingGroupId'))
        obj.packingGroupId = ApiClient.convertToType(data['packingGroupId'], 'String');
      if (data.hasOwnProperty('shipmentId'))
        obj.shipmentId = ApiClient.convertToType(data['shipmentId'], 'String');
    }
    return obj;
  }
}

/**
 * Box level information being provided.
 * @member {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/BoxInput>} boxes
 */
PackageGroupingInput.prototype.boxes = undefined;

/**
 * The ID of the `packingGroup` that packages are grouped according to. The `PackingGroupId` can only be provided before placement confirmation, and it must belong to the confirmed `PackingOption`. One of `ShipmentId` or `PackingGroupId` must be provided with every request.
 * @member {String} packingGroupId
 */
PackageGroupingInput.prototype.packingGroupId = undefined;

/**
 * The ID of the shipment that packages are grouped according to. The `ShipmentId` can only be provided after placement confirmation, and the shipment must belong to the confirmed placement option. One of `ShipmentId` or `PackingGroupId` must be provided with every request.
 * @member {String} shipmentId
 */
PackageGroupingInput.prototype.shipmentId = undefined;


