/*
 * The Selling Partner API for FBA inbound operations.
 * The Selling Partner API for Fulfillment By Amazon (FBA) Inbound. The FBA Inbound API enables building inbound workflows to create, manage, and send shipments into Amazon's fulfillment network. The API has interoperability with the Send-to-Amazon user interface.
 *
 * OpenAPI spec version: 2024-03-20
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {PrepInstruction} from './PrepInstruction.js';

/**
 * The Item model module.
 * @module fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Item
 * @version 2024-03-20
 */
export class Item {
  /**
   * Constructs a new <code>Item</code>.
   * Information associated with a single SKU in the seller's catalog.
   * @alias module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Item
   * @class
   * @param asin {String} The Amazon Standard Identification Number (ASIN) of the item.
   * @param fnsku {String} A unique identifier assigned by Amazon to products stored in and fulfilled from an Amazon fulfillment center.
   * @param labelOwner {String} Specifies who will label the items. Options include `AMAZON`, `SELLER`, and `NONE`.
   * @param msku {String} The merchant SKU, a merchant-supplied identifier of a specific SKU.
   * @param prepInstructions {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PrepInstruction>} Special preparations that are required for an item.
   * @param quantity {Number} The number of the specified MSKU.
   */
  constructor(asin, fnsku, labelOwner, msku, prepInstructions, quantity) {
    this.asin = asin;
    this.fnsku = fnsku;
    this.labelOwner = labelOwner;
    this.msku = msku;
    this.prepInstructions = prepInstructions;
    this.quantity = quantity;
  }

  /**
   * Constructs a <code>Item</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Item} obj Optional instance to populate.
   * @return {module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/Item} The populated <code>Item</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Item();
      if (data.hasOwnProperty('asin'))
        obj.asin = ApiClient.convertToType(data['asin'], 'String');
      if (data.hasOwnProperty('expiration'))
        obj.expiration = ApiClient.convertToType(data['expiration'], 'String');
      if (data.hasOwnProperty('fnsku'))
        obj.fnsku = ApiClient.convertToType(data['fnsku'], 'String');
      if (data.hasOwnProperty('labelOwner'))
        obj.labelOwner = ApiClient.convertToType(data['labelOwner'], 'String');
      if (data.hasOwnProperty('manufacturingLotCode'))
        obj.manufacturingLotCode = ApiClient.convertToType(data['manufacturingLotCode'], 'String');
      if (data.hasOwnProperty('msku'))
        obj.msku = ApiClient.convertToType(data['msku'], 'String');
      if (data.hasOwnProperty('prepInstructions'))
        obj.prepInstructions = ApiClient.convertToType(data['prepInstructions'], [PrepInstruction]);
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
    }
    return obj;
  }
}

/**
 * The Amazon Standard Identification Number (ASIN) of the item.
 * @member {String} asin
 */
Item.prototype.asin = undefined;

/**
 * The expiration date of the MSKU. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) datetime format with pattern`YYYY-MM-DD`. The same MSKU with different expiration dates cannot go into the same box.
 * @member {String} expiration
 */
Item.prototype.expiration = undefined;

/**
 * A unique identifier assigned by Amazon to products stored in and fulfilled from an Amazon fulfillment center.
 * @member {String} fnsku
 */
Item.prototype.fnsku = undefined;

/**
 * Specifies who will label the items. Options include `AMAZON`, `SELLER`, and `NONE`.
 * @member {String} labelOwner
 */
Item.prototype.labelOwner = undefined;

/**
 * The manufacturing lot code.
 * @member {String} manufacturingLotCode
 */
Item.prototype.manufacturingLotCode = undefined;

/**
 * The merchant SKU, a merchant-supplied identifier of a specific SKU.
 * @member {String} msku
 */
Item.prototype.msku = undefined;

/**
 * Special preparations that are required for an item.
 * @member {Array.<module:fulfillmentInbound_2024-03-20/js-client.fulfillmentInbound_2024-03-20.model/PrepInstruction>} prepInstructions
 */
Item.prototype.prepInstructions = undefined;

/**
 * The number of the specified MSKU.
 * @member {Number} quantity
 */
Item.prototype.quantity = undefined;


