/*
 * Selling Partner API for Retail Procurement Transaction Status
 * The Selling Partner API for Retail Procurement Transaction Status provides programmatic access to status information on specific asynchronous POST transactions for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ErrorList} from './ErrorList.js';

/**
 * The Transaction model module.
 * @module vendorTransactionStatus/js-client.vendorTransactionStatus.model/Transaction
 * @version v1
 */
export class Transaction {
  /**
   * Constructs a new <code>Transaction</code>.
   * The transaction status.
   * @alias module:vendorTransactionStatus/js-client.vendorTransactionStatus.model/Transaction
   * @class
   * @param transactionId {String} The unique identifier returned in the 'transactionId' field in response to the post request of a specific transaction.
   * @param status {module:vendorTransactionStatus/js-client.vendorTransactionStatus.model/Transaction.StatusEnum} Current processing status of the transaction.
   */
  constructor(transactionId, status) {
    this.transactionId = transactionId;
    this.status = status;
  }

  /**
   * Constructs a <code>Transaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorTransactionStatus/js-client.vendorTransactionStatus.model/Transaction} obj Optional instance to populate.
   * @return {module:vendorTransactionStatus/js-client.vendorTransactionStatus.model/Transaction} The populated <code>Transaction</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Transaction();
      if (data.hasOwnProperty('transactionId'))
        obj.transactionId = ApiClient.convertToType(data['transactionId'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('errors'))
        obj.errors = ErrorList.constructFromObject(data['errors']);
    }
    return obj;
  }
}

/**
 * The unique identifier returned in the 'transactionId' field in response to the post request of a specific transaction.
 * @member {String} transactionId
 */
Transaction.prototype.transactionId = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Transaction.StatusEnum = {
  /**
   * value: "Failure"
   * @const
   */
  failure: "Failure",

  /**
   * value: "Processing"
   * @const
   */
  processing: "Processing",

  /**
   * value: "Success"
   * @const
   */
  success: "Success"
};

/**
 * Current processing status of the transaction.
 * @member {module:vendorTransactionStatus/js-client.vendorTransactionStatus.model/Transaction.StatusEnum} status
 */
Transaction.prototype.status = undefined;

/**
 * @member {module:vendorTransactionStatus/js-client.vendorTransactionStatus.model/ErrorList} errors
 */
Transaction.prototype.errors = undefined;


