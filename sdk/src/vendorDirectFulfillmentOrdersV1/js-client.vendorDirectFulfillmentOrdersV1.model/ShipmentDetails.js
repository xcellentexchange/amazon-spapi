/*
 * Selling Partner API for Direct Fulfillment Orders
 * The Selling Partner API for Direct Fulfillment Orders provides programmatic access to a direct fulfillment vendor's order data.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ShipmentDates} from './ShipmentDates.js';

/**
 * The ShipmentDetails model module.
 * @module vendorDirectFulfillmentOrdersV1/js-client.vendorDirectFulfillmentOrdersV1.model/ShipmentDetails
 * @version v1
 */
export class ShipmentDetails {
  /**
   * Constructs a new <code>ShipmentDetails</code>.
   * Shipment details required for the shipment.
   * @alias module:vendorDirectFulfillmentOrdersV1/js-client.vendorDirectFulfillmentOrdersV1.model/ShipmentDetails
   * @class
   * @param isPriorityShipment {Boolean} When true, this is a priority shipment.
   * @param isPslipRequired {Boolean} When true, a packing slip is required to be sent to the customer.
   * @param shipMethod {String} Ship method to be used for shipping the order. Amazon defines ship method codes indicating the shipping carrier and shipment service level. To see the full list of ship methods in use, including both the code and the friendly name, search the 'Help' section on Vendor Central for 'ship methods'.
   * @param shipmentDates {module:vendorDirectFulfillmentOrdersV1/js-client.vendorDirectFulfillmentOrdersV1.model/ShipmentDates} 
   * @param messageToCustomer {String} Message to customer for order status.
   */
  constructor(isPriorityShipment, isPslipRequired, shipMethod, shipmentDates, messageToCustomer) {
    this.isPriorityShipment = isPriorityShipment;
    this.isPslipRequired = isPslipRequired;
    this.shipMethod = shipMethod;
    this.shipmentDates = shipmentDates;
    this.messageToCustomer = messageToCustomer;
  }

  /**
   * Constructs a <code>ShipmentDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorDirectFulfillmentOrdersV1/js-client.vendorDirectFulfillmentOrdersV1.model/ShipmentDetails} obj Optional instance to populate.
   * @return {module:vendorDirectFulfillmentOrdersV1/js-client.vendorDirectFulfillmentOrdersV1.model/ShipmentDetails} The populated <code>ShipmentDetails</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ShipmentDetails();
      if (data.hasOwnProperty('isPriorityShipment'))
        obj.isPriorityShipment = ApiClient.convertToType(data['isPriorityShipment'], 'Boolean');
      if (data.hasOwnProperty('isScheduledDeliveryShipment'))
        obj.isScheduledDeliveryShipment = ApiClient.convertToType(data['isScheduledDeliveryShipment'], 'Boolean');
      if (data.hasOwnProperty('isPslipRequired'))
        obj.isPslipRequired = ApiClient.convertToType(data['isPslipRequired'], 'Boolean');
      if (data.hasOwnProperty('isGift'))
        obj.isGift = ApiClient.convertToType(data['isGift'], 'Boolean');
      if (data.hasOwnProperty('shipMethod'))
        obj.shipMethod = ApiClient.convertToType(data['shipMethod'], 'String');
      if (data.hasOwnProperty('shipmentDates'))
        obj.shipmentDates = ShipmentDates.constructFromObject(data['shipmentDates']);
      if (data.hasOwnProperty('messageToCustomer'))
        obj.messageToCustomer = ApiClient.convertToType(data['messageToCustomer'], 'String');
    }
    return obj;
  }
}

/**
 * When true, this is a priority shipment.
 * @member {Boolean} isPriorityShipment
 */
ShipmentDetails.prototype.isPriorityShipment = undefined;

/**
 * When true, this order is part of a scheduled delivery program.
 * @member {Boolean} isScheduledDeliveryShipment
 */
ShipmentDetails.prototype.isScheduledDeliveryShipment = undefined;

/**
 * When true, a packing slip is required to be sent to the customer.
 * @member {Boolean} isPslipRequired
 */
ShipmentDetails.prototype.isPslipRequired = undefined;

/**
 * When true, the order contain a gift. Include the gift message and gift wrap information.
 * @member {Boolean} isGift
 */
ShipmentDetails.prototype.isGift = undefined;

/**
 * Ship method to be used for shipping the order. Amazon defines ship method codes indicating the shipping carrier and shipment service level. To see the full list of ship methods in use, including both the code and the friendly name, search the 'Help' section on Vendor Central for 'ship methods'.
 * @member {String} shipMethod
 */
ShipmentDetails.prototype.shipMethod = undefined;

/**
 * @member {module:vendorDirectFulfillmentOrdersV1/js-client.vendorDirectFulfillmentOrdersV1.model/ShipmentDates} shipmentDates
 */
ShipmentDetails.prototype.shipmentDates = undefined;

/**
 * Message to customer for order status.
 * @member {String} messageToCustomer
 */
ShipmentDetails.prototype.messageToCustomer = undefined;


