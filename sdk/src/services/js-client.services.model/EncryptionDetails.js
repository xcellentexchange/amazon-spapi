/*
 * Selling Partner API for Services
 * With the Services API, you can build applications that help service providers get and modify their service orders and manage their resources.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The EncryptionDetails model module.
 * @module services/js-client.services.model/EncryptionDetails
 * @version v1
 */
export class EncryptionDetails {
  /**
   * Constructs a new <code>EncryptionDetails</code>.
   * Encryption details for required client-side encryption and decryption of document contents.
   * @alias module:services/js-client.services.model/EncryptionDetails
   * @class
   * @param standard {module:services/js-client.services.model/EncryptionDetails.StandardEnum} The encryption standard required to encrypt or decrypt the document contents.
   * @param initializationVector {String} The vector to encrypt or decrypt the document contents using Cipher Block Chaining (CBC).
   * @param key {String} The encryption key used to encrypt or decrypt the document contents.
   */
  constructor(standard, initializationVector, key) {
    this.standard = standard;
    this.initializationVector = initializationVector;
    this.key = key;
  }

  /**
   * Constructs a <code>EncryptionDetails</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:services/js-client.services.model/EncryptionDetails} obj Optional instance to populate.
   * @return {module:services/js-client.services.model/EncryptionDetails} The populated <code>EncryptionDetails</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new EncryptionDetails();
      if (data.hasOwnProperty('standard'))
        obj.standard = ApiClient.convertToType(data['standard'], 'String');
      if (data.hasOwnProperty('initializationVector'))
        obj.initializationVector = ApiClient.convertToType(data['initializationVector'], 'String');
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>standard</code> property.
 * @enum {String}
 * @readonly
 */
EncryptionDetails.StandardEnum = {
  /**
   * value: "AES"
   * @const
   */
  AES: "AES"
};

/**
 * The encryption standard required to encrypt or decrypt the document contents.
 * @member {module:services/js-client.services.model/EncryptionDetails.StandardEnum} standard
 */
EncryptionDetails.prototype.standard = undefined;

/**
 * The vector to encrypt or decrypt the document contents using Cipher Block Chaining (CBC).
 * @member {String} initializationVector
 */
EncryptionDetails.prototype.initializationVector = undefined;

/**
 * The encryption key used to encrypt or decrypt the document contents.
 * @member {String} key
 */
EncryptionDetails.prototype.key = undefined;


