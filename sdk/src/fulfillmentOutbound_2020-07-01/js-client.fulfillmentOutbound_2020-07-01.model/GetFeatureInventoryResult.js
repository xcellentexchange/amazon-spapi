/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FeatureSku} from './FeatureSku.js';

/**
 * The GetFeatureInventoryResult model module.
 * @module fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/GetFeatureInventoryResult
 * @version 2020-07-01
 */
export class GetFeatureInventoryResult {
  /**
   * Constructs a new <code>GetFeatureInventoryResult</code>.
   * The payload for the `getEligibileInventory` operation.
   * @alias module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/GetFeatureInventoryResult
   * @class
   * @param marketplaceId {String} The requested marketplace.
   * @param featureName {String} The name of the feature.
   */
  constructor(marketplaceId, featureName) {
    this.marketplaceId = marketplaceId;
    this.featureName = featureName;
  }

  /**
   * Constructs a <code>GetFeatureInventoryResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/GetFeatureInventoryResult} obj Optional instance to populate.
   * @return {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/GetFeatureInventoryResult} The populated <code>GetFeatureInventoryResult</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new GetFeatureInventoryResult();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('featureName'))
        obj.featureName = ApiClient.convertToType(data['featureName'], 'String');
      if (data.hasOwnProperty('nextToken'))
        obj.nextToken = ApiClient.convertToType(data['nextToken'], 'String');
      if (data.hasOwnProperty('featureSkus'))
        obj.featureSkus = ApiClient.convertToType(data['featureSkus'], [FeatureSku]);
    }
    return obj;
  }
}

/**
 * The requested marketplace.
 * @member {String} marketplaceId
 */
GetFeatureInventoryResult.prototype.marketplaceId = undefined;

/**
 * The name of the feature.
 * @member {String} featureName
 */
GetFeatureInventoryResult.prototype.featureName = undefined;

/**
 * When present and not empty, pass this string token in the next request to return the next response page.
 * @member {String} nextToken
 */
GetFeatureInventoryResult.prototype.nextToken = undefined;

/**
 * An array of SKUs eligible for this feature and the quantity available.
 * @member {Array.<module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FeatureSku>} featureSkus
 */
GetFeatureInventoryResult.prototype.featureSkus = undefined;


