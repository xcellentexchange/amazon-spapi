/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {CODSettings} from './CODSettings.js';
import {CreateFulfillmentOrderItemList} from './CreateFulfillmentOrderItemList.js';
import {DeliveryPreferences} from './DeliveryPreferences.js';
import {DeliveryWindow} from './DeliveryWindow.js';
import {FeatureSettings} from './FeatureSettings.js';
import {FulfillmentAction} from './FulfillmentAction.js';
import {FulfillmentPolicy} from './FulfillmentPolicy.js';
import {NotificationEmailList} from './NotificationEmailList.js';
import {PaymentInformationList} from './PaymentInformationList.js';
import {ShippingSpeedCategory} from './ShippingSpeedCategory.js';
import {Timestamp} from './Timestamp.js';

/**
 * The CreateFulfillmentOrderRequest model module.
 * @module fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CreateFulfillmentOrderRequest
 * @version 2020-07-01
 */
export class CreateFulfillmentOrderRequest {
  /**
   * Constructs a new <code>CreateFulfillmentOrderRequest</code>.
   * The request body schema for the `createFulfillmentOrder` operation.
   * @alias module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CreateFulfillmentOrderRequest
   * @class
   * @param sellerFulfillmentOrderId {String} A fulfillment order identifier that the seller creates to track their fulfillment order. The `SellerFulfillmentOrderId` must be unique for each fulfillment order that a seller creates. If the seller's system already creates unique order identifiers, then these might be good values for them to use.
   * @param displayableOrderId {String} A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `DisplayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the `SellerFulfillmentOrderId` for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.  The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed.
   * @param displayableOrderDate {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Timestamp} The date and time of the fulfillment order. Displays as the order date in recipient-facing materials such as the outbound shipment packing slip.
   * @param displayableOrderComment {String} Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
   * @param shippingSpeedCategory {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ShippingSpeedCategory} The shipping method for the fulfillment order. When this value is ScheduledDelivery, choose Ship for the `fulfillmentAction`. Hold is not a valid `fulfillmentAction` value when the `shippingSpeedCategory` value is `ScheduledDelivery`.
   * @param destinationAddress {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Address} The destination address for the fulfillment order.
   * @param items {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CreateFulfillmentOrderItemList} A list of items to include in the fulfillment order preview, including quantity.
   */
  constructor(sellerFulfillmentOrderId, displayableOrderId, displayableOrderDate, displayableOrderComment, shippingSpeedCategory, destinationAddress, items) {
    this.sellerFulfillmentOrderId = sellerFulfillmentOrderId;
    this.displayableOrderId = displayableOrderId;
    this.displayableOrderDate = displayableOrderDate;
    this.displayableOrderComment = displayableOrderComment;
    this.shippingSpeedCategory = shippingSpeedCategory;
    this.destinationAddress = destinationAddress;
    this.items = items;
  }

  /**
   * Constructs a <code>CreateFulfillmentOrderRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CreateFulfillmentOrderRequest} obj Optional instance to populate.
   * @return {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CreateFulfillmentOrderRequest} The populated <code>CreateFulfillmentOrderRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CreateFulfillmentOrderRequest();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('sellerFulfillmentOrderId'))
        obj.sellerFulfillmentOrderId = ApiClient.convertToType(data['sellerFulfillmentOrderId'], 'String');
      if (data.hasOwnProperty('displayableOrderId'))
        obj.displayableOrderId = ApiClient.convertToType(data['displayableOrderId'], 'String');
      if (data.hasOwnProperty('displayableOrderDate'))
        obj.displayableOrderDate = Timestamp.constructFromObject(data['displayableOrderDate']);
      if (data.hasOwnProperty('displayableOrderComment'))
        obj.displayableOrderComment = ApiClient.convertToType(data['displayableOrderComment'], 'String');
      if (data.hasOwnProperty('shippingSpeedCategory'))
        obj.shippingSpeedCategory = ShippingSpeedCategory.constructFromObject(data['shippingSpeedCategory']);
      if (data.hasOwnProperty('deliveryWindow'))
        obj.deliveryWindow = DeliveryWindow.constructFromObject(data['deliveryWindow']);
      if (data.hasOwnProperty('destinationAddress'))
        obj.destinationAddress = Address.constructFromObject(data['destinationAddress']);
      if (data.hasOwnProperty('deliveryPreferences'))
        obj.deliveryPreferences = DeliveryPreferences.constructFromObject(data['deliveryPreferences']);
      if (data.hasOwnProperty('fulfillmentAction'))
        obj.fulfillmentAction = FulfillmentAction.constructFromObject(data['fulfillmentAction']);
      if (data.hasOwnProperty('fulfillmentPolicy'))
        obj.fulfillmentPolicy = FulfillmentPolicy.constructFromObject(data['fulfillmentPolicy']);
      if (data.hasOwnProperty('codSettings'))
        obj.codSettings = CODSettings.constructFromObject(data['codSettings']);
      if (data.hasOwnProperty('shipFromCountryCode'))
        obj.shipFromCountryCode = ApiClient.convertToType(data['shipFromCountryCode'], 'String');
      if (data.hasOwnProperty('notificationEmails'))
        obj.notificationEmails = NotificationEmailList.constructFromObject(data['notificationEmails']);
      if (data.hasOwnProperty('featureConstraints'))
        obj.featureConstraints = ApiClient.convertToType(data['featureConstraints'], [FeatureSettings]);
      if (data.hasOwnProperty('items'))
        obj.items = CreateFulfillmentOrderItemList.constructFromObject(data['items']);
      if (data.hasOwnProperty('paymentInformation'))
        obj.paymentInformation = PaymentInformationList.constructFromObject(data['paymentInformation']);
    }
    return obj;
  }
}

/**
 * The marketplace the fulfillment order is placed against.
 * @member {String} marketplaceId
 */
CreateFulfillmentOrderRequest.prototype.marketplaceId = undefined;

/**
 * A fulfillment order identifier that the seller creates to track their fulfillment order. The `SellerFulfillmentOrderId` must be unique for each fulfillment order that a seller creates. If the seller's system already creates unique order identifiers, then these might be good values for them to use.
 * @member {String} sellerFulfillmentOrderId
 */
CreateFulfillmentOrderRequest.prototype.sellerFulfillmentOrderId = undefined;

/**
 * A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `DisplayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the `SellerFulfillmentOrderId` for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.  The value must be an alpha-numeric or ISO 8859-1 compliant string from one to 40 characters in length. Cannot contain two spaces in a row. Leading and trailing white space is removed.
 * @member {String} displayableOrderId
 */
CreateFulfillmentOrderRequest.prototype.displayableOrderId = undefined;

/**
 * The date and time of the fulfillment order. Displays as the order date in recipient-facing materials such as the outbound shipment packing slip.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Timestamp} displayableOrderDate
 */
CreateFulfillmentOrderRequest.prototype.displayableOrderDate = undefined;

/**
 * Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
 * @member {String} displayableOrderComment
 */
CreateFulfillmentOrderRequest.prototype.displayableOrderComment = undefined;

/**
 * The shipping method for the fulfillment order. When this value is ScheduledDelivery, choose Ship for the `fulfillmentAction`. Hold is not a valid `fulfillmentAction` value when the `shippingSpeedCategory` value is `ScheduledDelivery`.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ShippingSpeedCategory} shippingSpeedCategory
 */
CreateFulfillmentOrderRequest.prototype.shippingSpeedCategory = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/DeliveryWindow} deliveryWindow
 */
CreateFulfillmentOrderRequest.prototype.deliveryWindow = undefined;

/**
 * The destination address for the fulfillment order.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Address} destinationAddress
 */
CreateFulfillmentOrderRequest.prototype.destinationAddress = undefined;

/**
 * The delivery preferences applied to the destination address. These preferences will be applied when possible and are best effort. This feature is currently supported only in the JP marketplace and not applicable for other marketplaces.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/DeliveryPreferences} deliveryPreferences
 */
CreateFulfillmentOrderRequest.prototype.deliveryPreferences = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FulfillmentAction} fulfillmentAction
 */
CreateFulfillmentOrderRequest.prototype.fulfillmentAction = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FulfillmentPolicy} fulfillmentPolicy
 */
CreateFulfillmentOrderRequest.prototype.fulfillmentPolicy = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CODSettings} codSettings
 */
CreateFulfillmentOrderRequest.prototype.codSettings = undefined;

/**
 * The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format.
 * @member {String} shipFromCountryCode
 */
CreateFulfillmentOrderRequest.prototype.shipFromCountryCode = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/NotificationEmailList} notificationEmails
 */
CreateFulfillmentOrderRequest.prototype.notificationEmails = undefined;

/**
 * A list of features and their fulfillment policies to apply to the order.
 * @member {Array.<module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FeatureSettings>} featureConstraints
 */
CreateFulfillmentOrderRequest.prototype.featureConstraints = undefined;

/**
 * A list of items to include in the fulfillment order preview, including quantity.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/CreateFulfillmentOrderItemList} items
 */
CreateFulfillmentOrderRequest.prototype.items = undefined;

/**
 * An array of various payment attributes related to this fulfillment order. This property is required if the order is placed against the India marketplace.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/PaymentInformationList} paymentInformation
 */
CreateFulfillmentOrderRequest.prototype.paymentInformation = undefined;


