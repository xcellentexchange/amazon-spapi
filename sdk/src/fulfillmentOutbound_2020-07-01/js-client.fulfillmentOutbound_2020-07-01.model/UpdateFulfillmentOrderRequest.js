/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {FeatureSettings} from './FeatureSettings.js';
import {FulfillmentAction} from './FulfillmentAction.js';
import {FulfillmentPolicy} from './FulfillmentPolicy.js';
import {NotificationEmailList} from './NotificationEmailList.js';
import {ShippingSpeedCategory} from './ShippingSpeedCategory.js';
import {Timestamp} from './Timestamp.js';
import {UpdateFulfillmentOrderItemList} from './UpdateFulfillmentOrderItemList.js';

/**
 * The UpdateFulfillmentOrderRequest model module.
 * @module fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/UpdateFulfillmentOrderRequest
 * @version 2020-07-01
 */
export class UpdateFulfillmentOrderRequest {
  /**
   * Constructs a new <code>UpdateFulfillmentOrderRequest</code>.
   * The request body schema for the `updateFulfillmentOrder` operation.
   * @alias module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/UpdateFulfillmentOrderRequest
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>UpdateFulfillmentOrderRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/UpdateFulfillmentOrderRequest} obj Optional instance to populate.
   * @return {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/UpdateFulfillmentOrderRequest} The populated <code>UpdateFulfillmentOrderRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new UpdateFulfillmentOrderRequest();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('displayableOrderId'))
        obj.displayableOrderId = ApiClient.convertToType(data['displayableOrderId'], 'String');
      if (data.hasOwnProperty('displayableOrderDate'))
        obj.displayableOrderDate = Timestamp.constructFromObject(data['displayableOrderDate']);
      if (data.hasOwnProperty('displayableOrderComment'))
        obj.displayableOrderComment = ApiClient.convertToType(data['displayableOrderComment'], 'String');
      if (data.hasOwnProperty('shippingSpeedCategory'))
        obj.shippingSpeedCategory = ShippingSpeedCategory.constructFromObject(data['shippingSpeedCategory']);
      if (data.hasOwnProperty('destinationAddress'))
        obj.destinationAddress = Address.constructFromObject(data['destinationAddress']);
      if (data.hasOwnProperty('fulfillmentAction'))
        obj.fulfillmentAction = FulfillmentAction.constructFromObject(data['fulfillmentAction']);
      if (data.hasOwnProperty('fulfillmentPolicy'))
        obj.fulfillmentPolicy = FulfillmentPolicy.constructFromObject(data['fulfillmentPolicy']);
      if (data.hasOwnProperty('shipFromCountryCode'))
        obj.shipFromCountryCode = ApiClient.convertToType(data['shipFromCountryCode'], 'String');
      if (data.hasOwnProperty('notificationEmails'))
        obj.notificationEmails = NotificationEmailList.constructFromObject(data['notificationEmails']);
      if (data.hasOwnProperty('featureConstraints'))
        obj.featureConstraints = ApiClient.convertToType(data['featureConstraints'], [FeatureSettings]);
      if (data.hasOwnProperty('items'))
        obj.items = UpdateFulfillmentOrderItemList.constructFromObject(data['items']);
    }
    return obj;
  }
}

/**
 * The marketplace the fulfillment order is placed against.
 * @member {String} marketplaceId
 */
UpdateFulfillmentOrderRequest.prototype.marketplaceId = undefined;

/**
 * A fulfillment order identifier that the seller creates. This value displays as the order identifier in recipient-facing materials such as the outbound shipment packing slip. The value of `DisplayableOrderId` should match the order identifier that the seller provides to the recipient. The seller can use the `SellerFulfillmentOrderId` for this value or they can specify an alternate value if they want the recipient to reference an alternate order identifier.
 * @member {String} displayableOrderId
 */
UpdateFulfillmentOrderRequest.prototype.displayableOrderId = undefined;

/**
 * The date and time of the fulfillment order. Displays as the order date in recipient-facing materials such as the outbound shipment packing slip.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Timestamp} displayableOrderDate
 */
UpdateFulfillmentOrderRequest.prototype.displayableOrderDate = undefined;

/**
 * Order-specific text that appears in recipient-facing materials such as the outbound shipment packing slip.
 * @member {String} displayableOrderComment
 */
UpdateFulfillmentOrderRequest.prototype.displayableOrderComment = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ShippingSpeedCategory} shippingSpeedCategory
 */
UpdateFulfillmentOrderRequest.prototype.shippingSpeedCategory = undefined;

/**
 * The destination address for the fulfillment order.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Address} destinationAddress
 */
UpdateFulfillmentOrderRequest.prototype.destinationAddress = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FulfillmentAction} fulfillmentAction
 */
UpdateFulfillmentOrderRequest.prototype.fulfillmentAction = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FulfillmentPolicy} fulfillmentPolicy
 */
UpdateFulfillmentOrderRequest.prototype.fulfillmentPolicy = undefined;

/**
 * The two-character country code for the country from which the fulfillment order ships. Must be in ISO 3166-1 alpha-2 format.
 * @member {String} shipFromCountryCode
 */
UpdateFulfillmentOrderRequest.prototype.shipFromCountryCode = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/NotificationEmailList} notificationEmails
 */
UpdateFulfillmentOrderRequest.prototype.notificationEmails = undefined;

/**
 * A list of features and their fulfillment policies to apply to the order.
 * @member {Array.<module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FeatureSettings>} featureConstraints
 */
UpdateFulfillmentOrderRequest.prototype.featureConstraints = undefined;

/**
 * A list of items to include in the fulfillment order preview, including quantity.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/UpdateFulfillmentOrderItemList} items
 */
UpdateFulfillmentOrderRequest.prototype.items = undefined;


