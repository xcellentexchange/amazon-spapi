/*
 * Selling Partner APIs for Fulfillment Outbound
 * The Selling Partner API for Fulfillment Outbound lets you create applications that help a seller fulfill Multi-Channel Fulfillment orders using their inventory in Amazon's fulfillment network. You can get information on both potential and existing fulfillment orders.
 *
 * OpenAPI spec version: 2020-07-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FulfillmentReturnItemStatus} from './FulfillmentReturnItemStatus.js';
import {ReturnItemDisposition} from './ReturnItemDisposition.js';
import {Timestamp} from './Timestamp.js';

/**
 * The ReturnItem model module.
 * @module fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ReturnItem
 * @version 2020-07-01
 */
export class ReturnItem {
  /**
   * Constructs a new <code>ReturnItem</code>.
   * An item that Amazon accepted for return.
   * @alias module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ReturnItem
   * @class
   * @param sellerReturnItemId {String} An identifier assigned by the seller to the return item.
   * @param sellerFulfillmentOrderItemId {String} The identifier assigned to the item by the seller when the fulfillment order was created.
   * @param amazonShipmentId {String} The identifier for the shipment that is associated with the return item.
   * @param sellerReturnReasonCode {String} The return reason code assigned to the return item by the seller.
   * @param status {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FulfillmentReturnItemStatus} Indicates if the return item has been processed by an Amazon fulfillment center.
   * @param statusChangedDate {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Timestamp} Indicates when the status last changed.
   */
  constructor(sellerReturnItemId, sellerFulfillmentOrderItemId, amazonShipmentId, sellerReturnReasonCode, status, statusChangedDate) {
    this.sellerReturnItemId = sellerReturnItemId;
    this.sellerFulfillmentOrderItemId = sellerFulfillmentOrderItemId;
    this.amazonShipmentId = amazonShipmentId;
    this.sellerReturnReasonCode = sellerReturnReasonCode;
    this.status = status;
    this.statusChangedDate = statusChangedDate;
  }

  /**
   * Constructs a <code>ReturnItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ReturnItem} obj Optional instance to populate.
   * @return {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ReturnItem} The populated <code>ReturnItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ReturnItem();
      if (data.hasOwnProperty('sellerReturnItemId'))
        obj.sellerReturnItemId = ApiClient.convertToType(data['sellerReturnItemId'], 'String');
      if (data.hasOwnProperty('sellerFulfillmentOrderItemId'))
        obj.sellerFulfillmentOrderItemId = ApiClient.convertToType(data['sellerFulfillmentOrderItemId'], 'String');
      if (data.hasOwnProperty('amazonShipmentId'))
        obj.amazonShipmentId = ApiClient.convertToType(data['amazonShipmentId'], 'String');
      if (data.hasOwnProperty('sellerReturnReasonCode'))
        obj.sellerReturnReasonCode = ApiClient.convertToType(data['sellerReturnReasonCode'], 'String');
      if (data.hasOwnProperty('returnComment'))
        obj.returnComment = ApiClient.convertToType(data['returnComment'], 'String');
      if (data.hasOwnProperty('amazonReturnReasonCode'))
        obj.amazonReturnReasonCode = ApiClient.convertToType(data['amazonReturnReasonCode'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = FulfillmentReturnItemStatus.constructFromObject(data['status']);
      if (data.hasOwnProperty('statusChangedDate'))
        obj.statusChangedDate = Timestamp.constructFromObject(data['statusChangedDate']);
      if (data.hasOwnProperty('returnAuthorizationId'))
        obj.returnAuthorizationId = ApiClient.convertToType(data['returnAuthorizationId'], 'String');
      if (data.hasOwnProperty('returnReceivedCondition'))
        obj.returnReceivedCondition = ReturnItemDisposition.constructFromObject(data['returnReceivedCondition']);
      if (data.hasOwnProperty('fulfillmentCenterId'))
        obj.fulfillmentCenterId = ApiClient.convertToType(data['fulfillmentCenterId'], 'String');
    }
    return obj;
  }
}

/**
 * An identifier assigned by the seller to the return item.
 * @member {String} sellerReturnItemId
 */
ReturnItem.prototype.sellerReturnItemId = undefined;

/**
 * The identifier assigned to the item by the seller when the fulfillment order was created.
 * @member {String} sellerFulfillmentOrderItemId
 */
ReturnItem.prototype.sellerFulfillmentOrderItemId = undefined;

/**
 * The identifier for the shipment that is associated with the return item.
 * @member {String} amazonShipmentId
 */
ReturnItem.prototype.amazonShipmentId = undefined;

/**
 * The return reason code assigned to the return item by the seller.
 * @member {String} sellerReturnReasonCode
 */
ReturnItem.prototype.sellerReturnReasonCode = undefined;

/**
 * An optional comment about the return item.
 * @member {String} returnComment
 */
ReturnItem.prototype.returnComment = undefined;

/**
 * The return reason code that the Amazon fulfillment center assigned to the return item.
 * @member {String} amazonReturnReasonCode
 */
ReturnItem.prototype.amazonReturnReasonCode = undefined;

/**
 * Indicates if the return item has been processed by an Amazon fulfillment center.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/FulfillmentReturnItemStatus} status
 */
ReturnItem.prototype.status = undefined;

/**
 * Indicates when the status last changed.
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/Timestamp} statusChangedDate
 */
ReturnItem.prototype.statusChangedDate = undefined;

/**
 * Identifies the return authorization used to return this item. Refer to `ReturnAuthorization`.
 * @member {String} returnAuthorizationId
 */
ReturnItem.prototype.returnAuthorizationId = undefined;

/**
 * @member {module:fulfillmentOutbound_2020-07-01/js-client.fulfillmentOutbound_2020-07-01.model/ReturnItemDisposition} returnReceivedCondition
 */
ReturnItem.prototype.returnReceivedCondition = undefined;

/**
 * The identifier for the Amazon fulfillment center that processed the return item.
 * @member {String} fulfillmentCenterId
 */
ReturnItem.prototype.fulfillmentCenterId = undefined;


