/*
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {GetCatalogItemResponse} from '../js-client.catalogItemsV0.model/GetCatalogItemResponse.js';
import {ListCatalogCategoriesResponse} from '../js-client.catalogItemsV0.model/ListCatalogCategoriesResponse.js';
import {ListCatalogItemsResponse} from '../js-client.catalogItemsV0.model/ListCatalogItemsResponse.js';

/**
* Catalog service.
* @module catalogItemsV0/js-client.catalogItemsV0.api/CatalogApi
* @version v0
*/
export class CatalogApi {

    /**
    * Constructs a new CatalogApi. 
    * @alias module:catalogItemsV0/js-client.catalogItemsV0.api/CatalogApi
    * @class
    * @param {module:catalogItemsV0/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:catalogItemsV0/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Effective September 30, 2022, the `getCatalogItem` operation will no longer be available in the Selling Partner API for Catalog Items v0. This operation is available in the latest version of the [Selling Partner API for Catalog Items v2022-04-01](doc:catalog-items-api-v2022-04-01-reference). Integrations that rely on this operation should migrate to the latest version to avoid service disruption.  _Note:_ The [`listCatalogCategories`](#get-catalogv0categories) operation is not being deprecated and you can continue to make calls to it.
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for the item.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) of the item.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:catalogItemsV0/js-client.catalogItemsV0.model/GetCatalogItemResponse} and HTTP response
     */
    getCatalogItemWithHttpInfo(marketplaceId, asin) {
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getCatalogItem");
      }

      // verify the required parameter 'asin' is set
      if (asin === undefined || asin === null) {
        throw new Error("Missing the required parameter 'asin' when calling getCatalogItem");
      }


      let pathParams = {
        'asin': asin
      };
      let queryParams = {
        'MarketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetCatalogItemResponse;

      return this.apiClient.callApi(
        '/catalog/v0/items/{asin}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective September 30, 2022, the `getCatalogItem` operation will no longer be available in the Selling Partner API for Catalog Items v0. This operation is available in the latest version of the [Selling Partner API for Catalog Items v2022-04-01](doc:catalog-items-api-v2022-04-01-reference). Integrations that rely on this operation should migrate to the latest version to avoid service disruption.  _Note:_ The [`listCatalogCategories`](#get-catalogv0categories) operation is not being deprecated and you can continue to make calls to it.
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for the item.
     * @param {String} asin The Amazon Standard Identification Number (ASIN) of the item.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:catalogItemsV0/js-client.catalogItemsV0.model/GetCatalogItemResponse}
     */
    getCatalogItem(marketplaceId, asin) {
      return this.getCatalogItemWithHttpInfo(marketplaceId, asin)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns the parent categories to which an item belongs, based on the specified ASIN or SellerSKU.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for the item.
     * @param {Object} opts Optional parameters
     * @param {String} opts.ASIN The Amazon Standard Identification Number (ASIN) of the item.
     * @param {String} opts.sellerSKU Used to identify items in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:catalogItemsV0/js-client.catalogItemsV0.model/ListCatalogCategoriesResponse} and HTTP response
     */
    listCatalogCategoriesWithHttpInfo(marketplaceId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listCatalogCategories");
      }


      let pathParams = {
      };
      let queryParams = {
        'MarketplaceId': marketplaceId,
        'ASIN': opts['ASIN'],
        'SellerSKU': opts['sellerSKU']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListCatalogCategoriesResponse;

      return this.apiClient.callApi(
        '/catalog/v0/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns the parent categories to which an item belongs, based on the specified ASIN or SellerSKU.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for the item.
     * @param {Object} opts Optional parameters
     * @param {String} opts.ASIN The Amazon Standard Identification Number (ASIN) of the item.
     * @param {String} opts.sellerSKU Used to identify items in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:catalogItemsV0/js-client.catalogItemsV0.model/ListCatalogCategoriesResponse}
     */
    listCatalogCategories(marketplaceId, opts) {
      return this.listCatalogCategoriesWithHttpInfo(marketplaceId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective September 30, 2022, the `listCatalogItems` operation will no longer be available in the Selling Partner API for Catalog Items v0. As an alternative, `searchCatalogItems` is available in the latest version of the [Selling Partner API for Catalog Items v2022-04-01](doc:catalog-items-api-v2022-04-01-reference). Integrations that rely on the `listCatalogItems` operation should migrate to the `searchCatalogItems`operation to avoid service disruption.  _Note:_ The [`listCatalogCategories`](#get-catalogv0categories) operation is not being deprecated and you can continue to make calls to it.
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for which items are returned.
     * @param {Object} opts Optional parameters
     * @param {String} opts.query Keyword(s) to use to search for items in the catalog. Example: 'harry potter books'.
     * @param {String} opts.queryContextId An identifier for the context within which the given search will be performed. A marketplace might provide mechanisms for constraining a search to a subset of potential items. For example, the retail marketplace allows queries to be constrained to a specific category. The QueryContextId parameter specifies such a subset. If it is omitted, the search will be performed using the default context for the marketplace, which will typically contain the largest set of items.
     * @param {String} opts.sellerSKU Used to identify an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.
     * @param {String} opts.UPC A 12-digit bar code used for retail packaging.
     * @param {String} opts.EAN A European article number that uniquely identifies the catalog item, manufacturer, and its attributes.
     * @param {String} opts.ISBN The unique commercial book identifier used to identify books internationally.
     * @param {String} opts.JAN A Japanese article number that uniquely identifies the product, manufacturer, and its attributes.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:catalogItemsV0/js-client.catalogItemsV0.model/ListCatalogItemsResponse} and HTTP response
     */
    listCatalogItemsWithHttpInfo(marketplaceId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listCatalogItems");
      }


      let pathParams = {
      };
      let queryParams = {
        'MarketplaceId': marketplaceId,
        'Query': opts['query'],
        'QueryContextId': opts['queryContextId'],
        'SellerSKU': opts['sellerSKU'],
        'UPC': opts['UPC'],
        'EAN': opts['EAN'],
        'ISBN': opts['ISBN'],
        'JAN': opts['JAN']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListCatalogItemsResponse;

      return this.apiClient.callApi(
        '/catalog/v0/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective September 30, 2022, the `listCatalogItems` operation will no longer be available in the Selling Partner API for Catalog Items v0. As an alternative, `searchCatalogItems` is available in the latest version of the [Selling Partner API for Catalog Items v2022-04-01](doc:catalog-items-api-v2022-04-01-reference). Integrations that rely on the `listCatalogItems` operation should migrate to the `searchCatalogItems`operation to avoid service disruption.  _Note:_ The [`listCatalogCategories`](#get-catalogv0categories) operation is not being deprecated and you can continue to make calls to it.
     * @param {String} marketplaceId A marketplace identifier. Specifies the marketplace for which items are returned.
     * @param {Object} opts Optional parameters
     * @param {String} opts.query Keyword(s) to use to search for items in the catalog. Example: 'harry potter books'.
     * @param {String} opts.queryContextId An identifier for the context within which the given search will be performed. A marketplace might provide mechanisms for constraining a search to a subset of potential items. For example, the retail marketplace allows queries to be constrained to a specific category. The QueryContextId parameter specifies such a subset. If it is omitted, the search will be performed using the default context for the marketplace, which will typically contain the largest set of items.
     * @param {String} opts.sellerSKU Used to identify an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.
     * @param {String} opts.UPC A 12-digit bar code used for retail packaging.
     * @param {String} opts.EAN A European article number that uniquely identifies the catalog item, manufacturer, and its attributes.
     * @param {String} opts.ISBN The unique commercial book identifier used to identify books internationally.
     * @param {String} opts.JAN A Japanese article number that uniquely identifies the product, manufacturer, and its attributes.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:catalogItemsV0/js-client.catalogItemsV0.model/ListCatalogItemsResponse}
     */
    listCatalogItems(marketplaceId, opts) {
      return this.listCatalogItemsWithHttpInfo(marketplaceId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
