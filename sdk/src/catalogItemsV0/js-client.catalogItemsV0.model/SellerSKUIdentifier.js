/*
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items helps you programmatically retrieve item details for items in the catalog.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The SellerSKUIdentifier model module.
 * @module catalogItemsV0/js-client.catalogItemsV0.model/SellerSKUIdentifier
 * @version v0
 */
export class SellerSKUIdentifier {
  /**
   * Constructs a new <code>SellerSKUIdentifier</code>.
   * @alias module:catalogItemsV0/js-client.catalogItemsV0.model/SellerSKUIdentifier
   * @class
   * @param marketplaceId {String} A marketplace identifier.
   * @param sellerId {String} The seller identifier submitted for the operation.
   * @param sellerSKU {String} The seller stock keeping unit (SKU) of the item.
   */
  constructor(marketplaceId, sellerId, sellerSKU) {
    this.marketplaceId = marketplaceId;
    this.sellerId = sellerId;
    this.sellerSKU = sellerSKU;
  }

  /**
   * Constructs a <code>SellerSKUIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogItemsV0/js-client.catalogItemsV0.model/SellerSKUIdentifier} obj Optional instance to populate.
   * @return {module:catalogItemsV0/js-client.catalogItemsV0.model/SellerSKUIdentifier} The populated <code>SellerSKUIdentifier</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new SellerSKUIdentifier();
      if (data.hasOwnProperty('MarketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['MarketplaceId'], 'String');
      if (data.hasOwnProperty('SellerId'))
        obj.sellerId = ApiClient.convertToType(data['SellerId'], 'String');
      if (data.hasOwnProperty('SellerSKU'))
        obj.sellerSKU = ApiClient.convertToType(data['SellerSKU'], 'String');
    }
    return obj;
  }
}

/**
 * A marketplace identifier.
 * @member {String} marketplaceId
 */
SellerSKUIdentifier.prototype.marketplaceId = undefined;

/**
 * The seller identifier submitted for the operation.
 * @member {String} sellerId
 */
SellerSKUIdentifier.prototype.sellerId = undefined;

/**
 * The seller stock keeping unit (SKU) of the item.
 * @member {String} sellerSKU
 */
SellerSKUIdentifier.prototype.sellerSKU = undefined;


