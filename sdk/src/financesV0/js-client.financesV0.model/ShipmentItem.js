/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information that is relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range. 
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ChargeComponentList} from './ChargeComponentList.js';
import {Currency} from './Currency.js';
import {FeeComponentList} from './FeeComponentList.js';
import {PromotionList} from './PromotionList.js';
import {TaxWithheldComponentList} from './TaxWithheldComponentList.js';

/**
 * The ShipmentItem model module.
 * @module financesV0/js-client.financesV0.model/ShipmentItem
 * @version v0
 */
export class ShipmentItem {
  /**
   * Constructs a new <code>ShipmentItem</code>.
   * An item of a shipment, refund, guarantee claim, or chargeback.
   * @alias module:financesV0/js-client.financesV0.model/ShipmentItem
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ShipmentItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:financesV0/js-client.financesV0.model/ShipmentItem} obj Optional instance to populate.
   * @return {module:financesV0/js-client.financesV0.model/ShipmentItem} The populated <code>ShipmentItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ShipmentItem();
      if (data.hasOwnProperty('SellerSKU'))
        obj.sellerSKU = ApiClient.convertToType(data['SellerSKU'], 'String');
      if (data.hasOwnProperty('OrderItemId'))
        obj.orderItemId = ApiClient.convertToType(data['OrderItemId'], 'String');
      if (data.hasOwnProperty('OrderAdjustmentItemId'))
        obj.orderAdjustmentItemId = ApiClient.convertToType(data['OrderAdjustmentItemId'], 'String');
      if (data.hasOwnProperty('QuantityShipped'))
        obj.quantityShipped = ApiClient.convertToType(data['QuantityShipped'], 'Number');
      if (data.hasOwnProperty('ItemChargeList'))
        obj.itemChargeList = ChargeComponentList.constructFromObject(data['ItemChargeList']);
      if (data.hasOwnProperty('ItemChargeAdjustmentList'))
        obj.itemChargeAdjustmentList = ChargeComponentList.constructFromObject(data['ItemChargeAdjustmentList']);
      if (data.hasOwnProperty('ItemFeeList'))
        obj.itemFeeList = FeeComponentList.constructFromObject(data['ItemFeeList']);
      if (data.hasOwnProperty('ItemFeeAdjustmentList'))
        obj.itemFeeAdjustmentList = FeeComponentList.constructFromObject(data['ItemFeeAdjustmentList']);
      if (data.hasOwnProperty('ItemTaxWithheldList'))
        obj.itemTaxWithheldList = TaxWithheldComponentList.constructFromObject(data['ItemTaxWithheldList']);
      if (data.hasOwnProperty('PromotionList'))
        obj.promotionList = PromotionList.constructFromObject(data['PromotionList']);
      if (data.hasOwnProperty('PromotionAdjustmentList'))
        obj.promotionAdjustmentList = PromotionList.constructFromObject(data['PromotionAdjustmentList']);
      if (data.hasOwnProperty('CostOfPointsGranted'))
        obj.costOfPointsGranted = Currency.constructFromObject(data['CostOfPointsGranted']);
      if (data.hasOwnProperty('CostOfPointsReturned'))
        obj.costOfPointsReturned = Currency.constructFromObject(data['CostOfPointsReturned']);
    }
    return obj;
  }
}

/**
 * The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API.
 * @member {String} sellerSKU
 */
ShipmentItem.prototype.sellerSKU = undefined;

/**
 * An Amazon-defined order item identifier.
 * @member {String} orderItemId
 */
ShipmentItem.prototype.orderItemId = undefined;

/**
 * An Amazon-defined order adjustment identifier defined for refunds, guarantee claims, and chargeback events.
 * @member {String} orderAdjustmentItemId
 */
ShipmentItem.prototype.orderAdjustmentItemId = undefined;

/**
 * The number of items shipped.
 * @member {Number} quantityShipped
 */
ShipmentItem.prototype.quantityShipped = undefined;

/**
 * A list of charges associated with the shipment item.
 * @member {module:financesV0/js-client.financesV0.model/ChargeComponentList} itemChargeList
 */
ShipmentItem.prototype.itemChargeList = undefined;

/**
 * A list of charge adjustments associated with the shipment item. This value is only returned for refunds, guarantee claims, and chargeback events.
 * @member {module:financesV0/js-client.financesV0.model/ChargeComponentList} itemChargeAdjustmentList
 */
ShipmentItem.prototype.itemChargeAdjustmentList = undefined;

/**
 * A list of fees associated with the shipment item.
 * @member {module:financesV0/js-client.financesV0.model/FeeComponentList} itemFeeList
 */
ShipmentItem.prototype.itemFeeList = undefined;

/**
 * A list of fee adjustments associated with the shipment item. This value is only returned for refunds, guarantee claims, and chargeback events.
 * @member {module:financesV0/js-client.financesV0.model/FeeComponentList} itemFeeAdjustmentList
 */
ShipmentItem.prototype.itemFeeAdjustmentList = undefined;

/**
 * A list of taxes withheld information for a shipment item.
 * @member {module:financesV0/js-client.financesV0.model/TaxWithheldComponentList} itemTaxWithheldList
 */
ShipmentItem.prototype.itemTaxWithheldList = undefined;

/**
 * @member {module:financesV0/js-client.financesV0.model/PromotionList} promotionList
 */
ShipmentItem.prototype.promotionList = undefined;

/**
 * A list of promotion adjustments associated with the shipment item. This value is only returned for refunds, guarantee claims, and chargeback events.
 * @member {module:financesV0/js-client.financesV0.model/PromotionList} promotionAdjustmentList
 */
ShipmentItem.prototype.promotionAdjustmentList = undefined;

/**
 * The cost of Amazon Points granted for a shipment item.
 * @member {module:financesV0/js-client.financesV0.model/Currency} costOfPointsGranted
 */
ShipmentItem.prototype.costOfPointsGranted = undefined;

/**
 * The cost of Amazon Points returned for a shipment item. This value is only returned for refunds, guarantee claims, and chargeback events.
 * @member {module:financesV0/js-client.financesV0.model/Currency} costOfPointsReturned
 */
ShipmentItem.prototype.costOfPointsReturned = undefined;


