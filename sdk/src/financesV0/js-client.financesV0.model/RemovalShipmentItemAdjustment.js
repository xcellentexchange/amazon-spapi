/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information that is relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range. 
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Currency} from './Currency.js';

/**
 * The RemovalShipmentItemAdjustment model module.
 * @module financesV0/js-client.financesV0.model/RemovalShipmentItemAdjustment
 * @version v0
 */
export class RemovalShipmentItemAdjustment {
  /**
   * Constructs a new <code>RemovalShipmentItemAdjustment</code>.
   * Item-level information for a removal shipment item adjustment.
   * @alias module:financesV0/js-client.financesV0.model/RemovalShipmentItemAdjustment
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>RemovalShipmentItemAdjustment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:financesV0/js-client.financesV0.model/RemovalShipmentItemAdjustment} obj Optional instance to populate.
   * @return {module:financesV0/js-client.financesV0.model/RemovalShipmentItemAdjustment} The populated <code>RemovalShipmentItemAdjustment</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new RemovalShipmentItemAdjustment();
      if (data.hasOwnProperty('RemovalShipmentItemId'))
        obj.removalShipmentItemId = ApiClient.convertToType(data['RemovalShipmentItemId'], 'String');
      if (data.hasOwnProperty('TaxCollectionModel'))
        obj.taxCollectionModel = ApiClient.convertToType(data['TaxCollectionModel'], 'String');
      if (data.hasOwnProperty('FulfillmentNetworkSKU'))
        obj.fulfillmentNetworkSKU = ApiClient.convertToType(data['FulfillmentNetworkSKU'], 'String');
      if (data.hasOwnProperty('AdjustedQuantity'))
        obj.adjustedQuantity = ApiClient.convertToType(data['AdjustedQuantity'], 'Number');
      if (data.hasOwnProperty('RevenueAdjustment'))
        obj.revenueAdjustment = Currency.constructFromObject(data['RevenueAdjustment']);
      if (data.hasOwnProperty('TaxAmountAdjustment'))
        obj.taxAmountAdjustment = Currency.constructFromObject(data['TaxAmountAdjustment']);
      if (data.hasOwnProperty('TaxWithheldAdjustment'))
        obj.taxWithheldAdjustment = Currency.constructFromObject(data['TaxWithheldAdjustment']);
    }
    return obj;
  }
}

/**
 * An identifier for an item in a removal shipment.
 * @member {String} removalShipmentItemId
 */
RemovalShipmentItemAdjustment.prototype.removalShipmentItemId = undefined;

/**
 * The tax collection model that is applied to the item.  Possible values:  * `MarketplaceFacilitator`: Tax is withheld and remitted to the taxing authority by Amazon on behalf of the seller. * `Standard`: Tax is paid to the seller and not remitted to the taxing authority by Amazon.
 * @member {String} taxCollectionModel
 */
RemovalShipmentItemAdjustment.prototype.taxCollectionModel = undefined;

/**
 * The Amazon fulfillment network SKU for the item.
 * @member {String} fulfillmentNetworkSKU
 */
RemovalShipmentItemAdjustment.prototype.fulfillmentNetworkSKU = undefined;

/**
 * Adjusted quantity of `RemovalShipmentItemAdjustment` items.
 * @member {Number} adjustedQuantity
 */
RemovalShipmentItemAdjustment.prototype.adjustedQuantity = undefined;

/**
 * The total amount adjusted for disputed items.
 * @member {module:financesV0/js-client.financesV0.model/Currency} revenueAdjustment
 */
RemovalShipmentItemAdjustment.prototype.revenueAdjustment = undefined;

/**
 * Adjustment on the tax collected amount on the adjusted revenue.
 * @member {module:financesV0/js-client.financesV0.model/Currency} taxAmountAdjustment
 */
RemovalShipmentItemAdjustment.prototype.taxAmountAdjustment = undefined;

/**
 * Adjustment of the tax that is withheld and remitted to the taxing authority by Amazon on behalf of the seller. If `TaxCollectionModel` = `MarketplaceFacilitator`, then `TaxWithheld` = `TaxAmount` (except when the `TaxWithheld` amount is a negative number). Otherwise, `TaxWithheld` = `0`.
 * @member {module:financesV0/js-client.financesV0.model/Currency} taxWithheldAdjustment
 */
RemovalShipmentItemAdjustment.prototype.taxWithheldAdjustment = undefined;


