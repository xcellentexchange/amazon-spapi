/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information that is relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range. 
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Currency} from './Currency.js';
import {ModelDate} from './ModelDate.js';

/**
 * The FinancialEventGroup model module.
 * @module financesV0/js-client.financesV0.model/FinancialEventGroup
 * @version v0
 */
export class FinancialEventGroup {
  /**
   * Constructs a new <code>FinancialEventGroup</code>.
   * Information related to a financial event group.
   * @alias module:financesV0/js-client.financesV0.model/FinancialEventGroup
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>FinancialEventGroup</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:financesV0/js-client.financesV0.model/FinancialEventGroup} obj Optional instance to populate.
   * @return {module:financesV0/js-client.financesV0.model/FinancialEventGroup} The populated <code>FinancialEventGroup</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new FinancialEventGroup();
      if (data.hasOwnProperty('FinancialEventGroupId'))
        obj.financialEventGroupId = ApiClient.convertToType(data['FinancialEventGroupId'], 'String');
      if (data.hasOwnProperty('ProcessingStatus'))
        obj.processingStatus = ApiClient.convertToType(data['ProcessingStatus'], 'String');
      if (data.hasOwnProperty('FundTransferStatus'))
        obj.fundTransferStatus = ApiClient.convertToType(data['FundTransferStatus'], 'String');
      if (data.hasOwnProperty('OriginalTotal'))
        obj.originalTotal = Currency.constructFromObject(data['OriginalTotal']);
      if (data.hasOwnProperty('ConvertedTotal'))
        obj.convertedTotal = Currency.constructFromObject(data['ConvertedTotal']);
      if (data.hasOwnProperty('FundTransferDate'))
        obj.fundTransferDate = ModelDate.constructFromObject(data['FundTransferDate']);
      if (data.hasOwnProperty('TraceId'))
        obj.traceId = ApiClient.convertToType(data['TraceId'], 'String');
      if (data.hasOwnProperty('AccountTail'))
        obj.accountTail = ApiClient.convertToType(data['AccountTail'], 'String');
      if (data.hasOwnProperty('BeginningBalance'))
        obj.beginningBalance = Currency.constructFromObject(data['BeginningBalance']);
      if (data.hasOwnProperty('FinancialEventGroupStart'))
        obj.financialEventGroupStart = ModelDate.constructFromObject(data['FinancialEventGroupStart']);
      if (data.hasOwnProperty('FinancialEventGroupEnd'))
        obj.financialEventGroupEnd = ModelDate.constructFromObject(data['FinancialEventGroupEnd']);
    }
    return obj;
  }
}

/**
 * A unique identifier for the financial event group.
 * @member {String} financialEventGroupId
 */
FinancialEventGroup.prototype.financialEventGroupId = undefined;

/**
 * The processing status of the financial event group indicates whether the balance of the financial event group is settled.  Possible values:  * `Open` * `Closed`
 * @member {String} processingStatus
 */
FinancialEventGroup.prototype.processingStatus = undefined;

/**
 * The status of the fund transfer.
 * @member {String} fundTransferStatus
 */
FinancialEventGroup.prototype.fundTransferStatus = undefined;

/**
 * The total amount in the currency of the marketplace in which the transactions occurred. For a closed financial group, this is the total amount of a disbursement or a charge amount. For an open financial event group, this is the current balance.
 * @member {module:financesV0/js-client.financesV0.model/Currency} originalTotal
 */
FinancialEventGroup.prototype.originalTotal = undefined;

/**
 * The total amount in the currency of the marketplace in which the funds were disbursed.
 * @member {module:financesV0/js-client.financesV0.model/Currency} convertedTotal
 */
FinancialEventGroup.prototype.convertedTotal = undefined;

/**
 * The date and time when the disbursement or charge was initiated. Only present for closed settlements. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
 * @member {module:financesV0/js-client.financesV0.model/ModelDate} fundTransferDate
 */
FinancialEventGroup.prototype.fundTransferDate = undefined;

/**
 * The trace identifier used by sellers to look up transactions externally.
 * @member {String} traceId
 */
FinancialEventGroup.prototype.traceId = undefined;

/**
 * The account tail of the payment instrument.
 * @member {String} accountTail
 */
FinancialEventGroup.prototype.accountTail = undefined;

/**
 * The balance at the start of the settlement period.
 * @member {module:financesV0/js-client.financesV0.model/Currency} beginningBalance
 */
FinancialEventGroup.prototype.beginningBalance = undefined;

/**
 * The date and time at which the financial event group is opened. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
 * @member {module:financesV0/js-client.financesV0.model/ModelDate} financialEventGroupStart
 */
FinancialEventGroup.prototype.financialEventGroupStart = undefined;

/**
 * The date and time at which the financial event group is closed. In [ISO 8601](https://developer-docs.amazon.com/sp-api/docs/iso-8601) date-time format.
 * @member {module:financesV0/js-client.financesV0.model/ModelDate} financialEventGroupEnd
 */
FinancialEventGroup.prototype.financialEventGroupEnd = undefined;


