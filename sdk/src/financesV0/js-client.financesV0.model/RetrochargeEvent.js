/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information that is relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range. 
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Currency} from './Currency.js';
import {ModelDate} from './ModelDate.js';
import {TaxWithheldComponentList} from './TaxWithheldComponentList.js';

/**
 * The RetrochargeEvent model module.
 * @module financesV0/js-client.financesV0.model/RetrochargeEvent
 * @version v0
 */
export class RetrochargeEvent {
  /**
   * Constructs a new <code>RetrochargeEvent</code>.
   * A retrocharge or retrocharge reversal.
   * @alias module:financesV0/js-client.financesV0.model/RetrochargeEvent
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>RetrochargeEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:financesV0/js-client.financesV0.model/RetrochargeEvent} obj Optional instance to populate.
   * @return {module:financesV0/js-client.financesV0.model/RetrochargeEvent} The populated <code>RetrochargeEvent</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new RetrochargeEvent();
      if (data.hasOwnProperty('RetrochargeEventType'))
        obj.retrochargeEventType = ApiClient.convertToType(data['RetrochargeEventType'], 'String');
      if (data.hasOwnProperty('AmazonOrderId'))
        obj.amazonOrderId = ApiClient.convertToType(data['AmazonOrderId'], 'String');
      if (data.hasOwnProperty('PostedDate'))
        obj.postedDate = ModelDate.constructFromObject(data['PostedDate']);
      if (data.hasOwnProperty('BaseTax'))
        obj.baseTax = Currency.constructFromObject(data['BaseTax']);
      if (data.hasOwnProperty('ShippingTax'))
        obj.shippingTax = Currency.constructFromObject(data['ShippingTax']);
      if (data.hasOwnProperty('MarketplaceName'))
        obj.marketplaceName = ApiClient.convertToType(data['MarketplaceName'], 'String');
      if (data.hasOwnProperty('RetrochargeTaxWithheldList'))
        obj.retrochargeTaxWithheldList = TaxWithheldComponentList.constructFromObject(data['RetrochargeTaxWithheldList']);
    }
    return obj;
  }
}

/**
 * The type of event.  Possible values:  * `Retrocharge`  * `RetrochargeReversal`
 * @member {String} retrochargeEventType
 */
RetrochargeEvent.prototype.retrochargeEventType = undefined;

/**
 * An Amazon-defined identifier for an order.
 * @member {String} amazonOrderId
 */
RetrochargeEvent.prototype.amazonOrderId = undefined;

/**
 * The date and time when the financial event was posted.
 * @member {module:financesV0/js-client.financesV0.model/ModelDate} postedDate
 */
RetrochargeEvent.prototype.postedDate = undefined;

/**
 * The base tax associated with the retrocharge event.
 * @member {module:financesV0/js-client.financesV0.model/Currency} baseTax
 */
RetrochargeEvent.prototype.baseTax = undefined;

/**
 * The shipping tax associated with the retrocharge event.
 * @member {module:financesV0/js-client.financesV0.model/Currency} shippingTax
 */
RetrochargeEvent.prototype.shippingTax = undefined;

/**
 * The name of the marketplace where the retrocharge event occurred.
 * @member {String} marketplaceName
 */
RetrochargeEvent.prototype.marketplaceName = undefined;

/**
 * A list of information about taxes withheld.
 * @member {module:financesV0/js-client.financesV0.model/TaxWithheldComponentList} retrochargeTaxWithheldList
 */
RetrochargeEvent.prototype.retrochargeTaxWithheldList = undefined;


