/*
 * Selling Partner API for Finances
 * The Selling Partner API for Finances provides financial information that is relevant to a seller's business. You can obtain financial events for a given order, financial event group, or date range without having to wait until a statement period closes. You can also obtain financial event groups for a given date range. 
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {FeeComponentList} from './FeeComponentList.js';

/**
 * The ServiceFeeEvent model module.
 * @module financesV0/js-client.financesV0.model/ServiceFeeEvent
 * @version v0
 */
export class ServiceFeeEvent {
  /**
   * Constructs a new <code>ServiceFeeEvent</code>.
   * A service fee on the seller's account.
   * @alias module:financesV0/js-client.financesV0.model/ServiceFeeEvent
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ServiceFeeEvent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:financesV0/js-client.financesV0.model/ServiceFeeEvent} obj Optional instance to populate.
   * @return {module:financesV0/js-client.financesV0.model/ServiceFeeEvent} The populated <code>ServiceFeeEvent</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ServiceFeeEvent();
      if (data.hasOwnProperty('AmazonOrderId'))
        obj.amazonOrderId = ApiClient.convertToType(data['AmazonOrderId'], 'String');
      if (data.hasOwnProperty('FeeReason'))
        obj.feeReason = ApiClient.convertToType(data['FeeReason'], 'String');
      if (data.hasOwnProperty('FeeList'))
        obj.feeList = FeeComponentList.constructFromObject(data['FeeList']);
      if (data.hasOwnProperty('SellerSKU'))
        obj.sellerSKU = ApiClient.convertToType(data['SellerSKU'], 'String');
      if (data.hasOwnProperty('FnSKU'))
        obj.fnSKU = ApiClient.convertToType(data['FnSKU'], 'String');
      if (data.hasOwnProperty('FeeDescription'))
        obj.feeDescription = ApiClient.convertToType(data['FeeDescription'], 'String');
      if (data.hasOwnProperty('ASIN'))
        obj.ASIN = ApiClient.convertToType(data['ASIN'], 'String');
      if (data.hasOwnProperty('StoreName'))
        obj.storeName = ApiClient.convertToType(data['StoreName'], 'String');
    }
    return obj;
  }
}

/**
 * An Amazon-defined identifier for an order.
 * @member {String} amazonOrderId
 */
ServiceFeeEvent.prototype.amazonOrderId = undefined;

/**
 * A short description of the service fee reason.
 * @member {String} feeReason
 */
ServiceFeeEvent.prototype.feeReason = undefined;

/**
 * A list of fee components associated with the service fee.
 * @member {module:financesV0/js-client.financesV0.model/FeeComponentList} feeList
 */
ServiceFeeEvent.prototype.feeList = undefined;

/**
 * The seller SKU of the item. The seller SKU is qualified by the seller's seller ID, which is included with every call to the Selling Partner API.
 * @member {String} sellerSKU
 */
ServiceFeeEvent.prototype.sellerSKU = undefined;

/**
 * A unique identifier assigned by Amazon to products stored in and fulfilled from an Amazon fulfillment center.
 * @member {String} fnSKU
 */
ServiceFeeEvent.prototype.fnSKU = undefined;

/**
 * A short description of the service fee event.
 * @member {String} feeDescription
 */
ServiceFeeEvent.prototype.feeDescription = undefined;

/**
 * The Amazon Standard Identification Number (ASIN) of the item.
 * @member {String} ASIN
 */
ServiceFeeEvent.prototype.ASIN = undefined;

/**
 * The name of the store where the event occurred.
 * @member {String} storeName
 */
ServiceFeeEvent.prototype.storeName = undefined;


