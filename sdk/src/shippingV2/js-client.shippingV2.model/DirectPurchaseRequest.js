/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {ChannelDetails} from './ChannelDetails.js';
import {PackageList} from './PackageList.js';
import {RequestedDocumentSpecification} from './RequestedDocumentSpecification.js';

/**
 * The DirectPurchaseRequest model module.
 * @module shippingV2/js-client.shippingV2.model/DirectPurchaseRequest
 * @version v2
 */
export class DirectPurchaseRequest {
  /**
   * Constructs a new <code>DirectPurchaseRequest</code>.
   * The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored.
   * @alias module:shippingV2/js-client.shippingV2.model/DirectPurchaseRequest
   * @class
   * @param channelDetails {module:shippingV2/js-client.shippingV2.model/ChannelDetails} 
   */
  constructor(channelDetails) {
    this.channelDetails = channelDetails;
  }

  /**
   * Constructs a <code>DirectPurchaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:shippingV2/js-client.shippingV2.model/DirectPurchaseRequest} obj Optional instance to populate.
   * @return {module:shippingV2/js-client.shippingV2.model/DirectPurchaseRequest} The populated <code>DirectPurchaseRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new DirectPurchaseRequest();
      if (data.hasOwnProperty('shipTo'))
        obj.shipTo = Address.constructFromObject(data['shipTo']);
      if (data.hasOwnProperty('shipFrom'))
        obj.shipFrom = Address.constructFromObject(data['shipFrom']);
      if (data.hasOwnProperty('returnTo'))
        obj.returnTo = Address.constructFromObject(data['returnTo']);
      if (data.hasOwnProperty('packages'))
        obj.packages = PackageList.constructFromObject(data['packages']);
      if (data.hasOwnProperty('channelDetails'))
        obj.channelDetails = ChannelDetails.constructFromObject(data['channelDetails']);
      if (data.hasOwnProperty('labelSpecifications'))
        obj.labelSpecifications = RequestedDocumentSpecification.constructFromObject(data['labelSpecifications']);
    }
    return obj;
  }
}

/**
 * The address where the shipment will be delivered. For vendor orders, shipTo information is pulled directly from the Amazon order.
 * @member {module:shippingV2/js-client.shippingV2.model/Address} shipTo
 */
DirectPurchaseRequest.prototype.shipTo = undefined;

/**
 * The address where the package will be picked up.
 * @member {module:shippingV2/js-client.shippingV2.model/Address} shipFrom
 */
DirectPurchaseRequest.prototype.shipFrom = undefined;

/**
 * The address where the package will be returned if it cannot be delivered.
 * @member {module:shippingV2/js-client.shippingV2.model/Address} returnTo
 */
DirectPurchaseRequest.prototype.returnTo = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/PackageList} packages
 */
DirectPurchaseRequest.prototype.packages = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/ChannelDetails} channelDetails
 */
DirectPurchaseRequest.prototype.channelDetails = undefined;

/**
 * The document (label) specifications requested. The default label returned is PNG DPI 203 4x6 if no label specification is provided. Requesting an invalid file format results in a failure.
 * @member {module:shippingV2/js-client.shippingV2.model/RequestedDocumentSpecification} labelSpecifications
 */
DirectPurchaseRequest.prototype.labelSpecifications = undefined;


