/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AvailableValueAddedServiceGroupList} from './AvailableValueAddedServiceGroupList.js';
import {Benefits} from './Benefits.js';
import {CarrierId} from './CarrierId.js';
import {CarrierName} from './CarrierName.js';
import {Currency} from './Currency.js';
import {PaymentType} from './PaymentType.js';
import {Promise} from './Promise.js';
import {RateId} from './RateId.js';
import {RateItemList} from './RateItemList.js';
import {ServiceId} from './ServiceId.js';
import {ServiceName} from './ServiceName.js';
import {SupportedDocumentSpecificationList} from './SupportedDocumentSpecificationList.js';
import {Weight} from './Weight.js';

/**
 * The Rate model module.
 * @module shippingV2/js-client.shippingV2.model/Rate
 * @version v2
 */
export class Rate {
  /**
   * Constructs a new <code>Rate</code>.
   * The details of a shipping service offering.
   * @alias module:shippingV2/js-client.shippingV2.model/Rate
   * @class
   * @param rateId {module:shippingV2/js-client.shippingV2.model/RateId} 
   * @param carrierId {module:shippingV2/js-client.shippingV2.model/CarrierId} 
   * @param carrierName {module:shippingV2/js-client.shippingV2.model/CarrierName} 
   * @param serviceId {module:shippingV2/js-client.shippingV2.model/ServiceId} 
   * @param serviceName {module:shippingV2/js-client.shippingV2.model/ServiceName} 
   * @param totalCharge {module:shippingV2/js-client.shippingV2.model/Currency} 
   * @param promise {module:shippingV2/js-client.shippingV2.model/Promise} 
   * @param supportedDocumentSpecifications {module:shippingV2/js-client.shippingV2.model/SupportedDocumentSpecificationList} 
   * @param requiresAdditionalInputs {Boolean} When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation.
   */
  constructor(rateId, carrierId, carrierName, serviceId, serviceName, totalCharge, promise, supportedDocumentSpecifications, requiresAdditionalInputs) {
    this.rateId = rateId;
    this.carrierId = carrierId;
    this.carrierName = carrierName;
    this.serviceId = serviceId;
    this.serviceName = serviceName;
    this.totalCharge = totalCharge;
    this.promise = promise;
    this.supportedDocumentSpecifications = supportedDocumentSpecifications;
    this.requiresAdditionalInputs = requiresAdditionalInputs;
  }

  /**
   * Constructs a <code>Rate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:shippingV2/js-client.shippingV2.model/Rate} obj Optional instance to populate.
   * @return {module:shippingV2/js-client.shippingV2.model/Rate} The populated <code>Rate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Rate();
      if (data.hasOwnProperty('rateId'))
        obj.rateId = RateId.constructFromObject(data['rateId']);
      if (data.hasOwnProperty('carrierId'))
        obj.carrierId = CarrierId.constructFromObject(data['carrierId']);
      if (data.hasOwnProperty('carrierName'))
        obj.carrierName = CarrierName.constructFromObject(data['carrierName']);
      if (data.hasOwnProperty('serviceId'))
        obj.serviceId = ServiceId.constructFromObject(data['serviceId']);
      if (data.hasOwnProperty('serviceName'))
        obj.serviceName = ServiceName.constructFromObject(data['serviceName']);
      if (data.hasOwnProperty('billedWeight'))
        obj.billedWeight = Weight.constructFromObject(data['billedWeight']);
      if (data.hasOwnProperty('totalCharge'))
        obj.totalCharge = Currency.constructFromObject(data['totalCharge']);
      if (data.hasOwnProperty('promise'))
        obj.promise = Promise.constructFromObject(data['promise']);
      if (data.hasOwnProperty('supportedDocumentSpecifications'))
        obj.supportedDocumentSpecifications = SupportedDocumentSpecificationList.constructFromObject(data['supportedDocumentSpecifications']);
      if (data.hasOwnProperty('availableValueAddedServiceGroups'))
        obj.availableValueAddedServiceGroups = AvailableValueAddedServiceGroupList.constructFromObject(data['availableValueAddedServiceGroups']);
      if (data.hasOwnProperty('requiresAdditionalInputs'))
        obj.requiresAdditionalInputs = ApiClient.convertToType(data['requiresAdditionalInputs'], 'Boolean');
      if (data.hasOwnProperty('rateItemList'))
        obj.rateItemList = RateItemList.constructFromObject(data['rateItemList']);
      if (data.hasOwnProperty('paymentType'))
        obj.paymentType = PaymentType.constructFromObject(data['paymentType']);
      if (data.hasOwnProperty('benefits'))
        obj.benefits = Benefits.constructFromObject(data['benefits']);
    }
    return obj;
  }
}

/**
 * @member {module:shippingV2/js-client.shippingV2.model/RateId} rateId
 */
Rate.prototype.rateId = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/CarrierId} carrierId
 */
Rate.prototype.carrierId = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/CarrierName} carrierName
 */
Rate.prototype.carrierName = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/ServiceId} serviceId
 */
Rate.prototype.serviceId = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/ServiceName} serviceName
 */
Rate.prototype.serviceName = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/Weight} billedWeight
 */
Rate.prototype.billedWeight = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/Currency} totalCharge
 */
Rate.prototype.totalCharge = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/Promise} promise
 */
Rate.prototype.promise = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/SupportedDocumentSpecificationList} supportedDocumentSpecifications
 */
Rate.prototype.supportedDocumentSpecifications = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/AvailableValueAddedServiceGroupList} availableValueAddedServiceGroups
 */
Rate.prototype.availableValueAddedServiceGroups = undefined;

/**
 * When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation.
 * @member {Boolean} requiresAdditionalInputs
 */
Rate.prototype.requiresAdditionalInputs = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/RateItemList} rateItemList
 */
Rate.prototype.rateItemList = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/PaymentType} paymentType
 */
Rate.prototype.paymentType = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/Benefits} benefits
 */
Rate.prototype.benefits = undefined;


