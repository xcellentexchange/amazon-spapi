/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The Dimensions model module.
 * @module shippingV2/js-client.shippingV2.model/Dimensions
 * @version v2
 */
export class Dimensions {
  /**
   * Constructs a new <code>Dimensions</code>.
   * A set of measurements for a three-dimensional object.
   * @alias module:shippingV2/js-client.shippingV2.model/Dimensions
   * @class
   * @param length {Number} The length of the package.
   * @param width {Number} The width of the package.
   * @param height {Number} The height of the package.
   * @param unit {module:shippingV2/js-client.shippingV2.model/Dimensions.UnitEnum} The unit of measurement.
   */
  constructor(length, width, height, unit) {
    this.length = length;
    this.width = width;
    this.height = height;
    this.unit = unit;
  }

  /**
   * Constructs a <code>Dimensions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:shippingV2/js-client.shippingV2.model/Dimensions} obj Optional instance to populate.
   * @return {module:shippingV2/js-client.shippingV2.model/Dimensions} The populated <code>Dimensions</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Dimensions();
      if (data.hasOwnProperty('length'))
        obj.length = ApiClient.convertToType(data['length'], 'Number');
      if (data.hasOwnProperty('width'))
        obj.width = ApiClient.convertToType(data['width'], 'Number');
      if (data.hasOwnProperty('height'))
        obj.height = ApiClient.convertToType(data['height'], 'Number');
      if (data.hasOwnProperty('unit'))
        obj.unit = ApiClient.convertToType(data['unit'], 'String');
    }
    return obj;
  }
}

/**
 * The length of the package.
 * @member {Number} length
 */
Dimensions.prototype.length = undefined;

/**
 * The width of the package.
 * @member {Number} width
 */
Dimensions.prototype.width = undefined;

/**
 * The height of the package.
 * @member {Number} height
 */
Dimensions.prototype.height = undefined;

/**
 * Allowed values for the <code>unit</code> property.
 * @enum {String}
 * @readonly
 */
Dimensions.UnitEnum = {
  /**
   * value: "INCH"
   * @const
   */
  INCH: "INCH",

  /**
   * value: "CENTIMETER"
   * @const
   */
  CENTIMETER: "CENTIMETER"
};

/**
 * The unit of measurement.
 * @member {module:shippingV2/js-client.shippingV2.model/Dimensions.UnitEnum} unit
 */
Dimensions.prototype.unit = undefined;


