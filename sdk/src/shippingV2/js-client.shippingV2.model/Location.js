/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {City} from './City.js';
import {CountryCode} from './CountryCode.js';
import {PostalCode} from './PostalCode.js';
import {StateOrRegion} from './StateOrRegion.js';

/**
 * The Location model module.
 * @module shippingV2/js-client.shippingV2.model/Location
 * @version v2
 */
export class Location {
  /**
   * Constructs a new <code>Location</code>.
   * The location where the person, business or institution is located.
   * @alias module:shippingV2/js-client.shippingV2.model/Location
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>Location</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:shippingV2/js-client.shippingV2.model/Location} obj Optional instance to populate.
   * @return {module:shippingV2/js-client.shippingV2.model/Location} The populated <code>Location</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Location();
      if (data.hasOwnProperty('stateOrRegion'))
        obj.stateOrRegion = StateOrRegion.constructFromObject(data['stateOrRegion']);
      if (data.hasOwnProperty('city'))
        obj.city = City.constructFromObject(data['city']);
      if (data.hasOwnProperty('countryCode'))
        obj.countryCode = CountryCode.constructFromObject(data['countryCode']);
      if (data.hasOwnProperty('postalCode'))
        obj.postalCode = PostalCode.constructFromObject(data['postalCode']);
    }
    return obj;
  }
}

/**
 * @member {module:shippingV2/js-client.shippingV2.model/StateOrRegion} stateOrRegion
 */
Location.prototype.stateOrRegion = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/City} city
 */
Location.prototype.city = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/CountryCode} countryCode
 */
Location.prototype.countryCode = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/PostalCode} postalCode
 */
Location.prototype.postalCode = undefined;


