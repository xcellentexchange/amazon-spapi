/*
 * Amazon Shipping API
 * The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
 *
 * OpenAPI spec version: v2
 * Contact: swa-api-core@amazon.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AlternateLegTrackingId} from './AlternateLegTrackingId.js';
import {Event} from './Event.js';
import {TrackingId} from './TrackingId.js';
import {TrackingSummary} from './TrackingSummary.js';

/**
 * The GetTrackingResult model module.
 * @module shippingV2/js-client.shippingV2.model/GetTrackingResult
 * @version v2
 */
export class GetTrackingResult {
  /**
   * Constructs a new <code>GetTrackingResult</code>.
   * The payload for the getTracking operation.
   * @alias module:shippingV2/js-client.shippingV2.model/GetTrackingResult
   * @class
   * @param trackingId {module:shippingV2/js-client.shippingV2.model/TrackingId} 
   * @param alternateLegTrackingId {module:shippingV2/js-client.shippingV2.model/AlternateLegTrackingId} 
   * @param eventHistory {Array.<module:shippingV2/js-client.shippingV2.model/Event>} A list of tracking events.
   * @param promisedDeliveryDate {Date} The date and time by which the shipment is promised to be delivered.
   * @param summary {module:shippingV2/js-client.shippingV2.model/TrackingSummary} 
   */
  constructor(trackingId, alternateLegTrackingId, eventHistory, promisedDeliveryDate, summary) {
    this.trackingId = trackingId;
    this.alternateLegTrackingId = alternateLegTrackingId;
    this.eventHistory = eventHistory;
    this.promisedDeliveryDate = promisedDeliveryDate;
    this.summary = summary;
  }

  /**
   * Constructs a <code>GetTrackingResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:shippingV2/js-client.shippingV2.model/GetTrackingResult} obj Optional instance to populate.
   * @return {module:shippingV2/js-client.shippingV2.model/GetTrackingResult} The populated <code>GetTrackingResult</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new GetTrackingResult();
      if (data.hasOwnProperty('trackingId'))
        obj.trackingId = TrackingId.constructFromObject(data['trackingId']);
      if (data.hasOwnProperty('alternateLegTrackingId'))
        obj.alternateLegTrackingId = AlternateLegTrackingId.constructFromObject(data['alternateLegTrackingId']);
      if (data.hasOwnProperty('eventHistory'))
        obj.eventHistory = ApiClient.convertToType(data['eventHistory'], [Event]);
      if (data.hasOwnProperty('promisedDeliveryDate'))
        obj.promisedDeliveryDate = ApiClient.convertToType(data['promisedDeliveryDate'], 'Date');
      if (data.hasOwnProperty('summary'))
        obj.summary = TrackingSummary.constructFromObject(data['summary']);
    }
    return obj;
  }
}

/**
 * @member {module:shippingV2/js-client.shippingV2.model/TrackingId} trackingId
 */
GetTrackingResult.prototype.trackingId = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/AlternateLegTrackingId} alternateLegTrackingId
 */
GetTrackingResult.prototype.alternateLegTrackingId = undefined;

/**
 * A list of tracking events.
 * @member {Array.<module:shippingV2/js-client.shippingV2.model/Event>} eventHistory
 */
GetTrackingResult.prototype.eventHistory = undefined;

/**
 * The date and time by which the shipment is promised to be delivered.
 * @member {Date} promisedDeliveryDate
 */
GetTrackingResult.prototype.promisedDeliveryDate = undefined;

/**
 * @member {module:shippingV2/js-client.shippingV2.model/TrackingSummary} summary
 */
GetTrackingResult.prototype.summary = undefined;


