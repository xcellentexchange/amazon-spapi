/*
 * Selling Partner API for Shipment Invoicing
 * The Selling Partner API for Shipment Invoicing helps you programmatically retrieve shipment invoice information in the Brazil marketplace for a selling partnerâ€™s Fulfillment by Amazon (FBA) orders.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {GetInvoiceStatusResponse} from '../js-client.shipmentInvoicingV0.model/GetInvoiceStatusResponse.js';
import {GetShipmentDetailsResponse} from '../js-client.shipmentInvoicingV0.model/GetShipmentDetailsResponse.js';
import {SubmitInvoiceRequest} from '../js-client.shipmentInvoicingV0.model/SubmitInvoiceRequest.js';
import {SubmitInvoiceResponse} from '../js-client.shipmentInvoicingV0.model/SubmitInvoiceResponse.js';

/**
* ShipmentInvoice service.
* @module shipmentInvoicingV0/js-client.shipmentInvoicingV0.api/ShipmentInvoiceApi
* @version v0
*/
export class ShipmentInvoiceApi {

    /**
    * Constructs a new ShipmentInvoiceApi. 
    * @alias module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.api/ShipmentInvoiceApi
    * @class
    * @param {module:shipmentInvoicingV0/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:shipmentInvoicingV0/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The shipment identifier for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/GetInvoiceStatusResponse} and HTTP response
     */
    getInvoiceStatusWithHttpInfo(shipmentId) {
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getInvoiceStatus");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetInvoiceStatusResponse;

      return this.apiClient.callApi(
        '/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns the invoice status for the shipment you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The shipment identifier for the shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/GetInvoiceStatusResponse}
     */
    getInvoiceStatus(shipmentId) {
      return this.getInvoiceStatusWithHttpInfo(shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/GetShipmentDetailsResponse} and HTTP response
     */
    getShipmentDetailsWithHttpInfo(shipmentId) {
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getShipmentDetails");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetShipmentDetailsResponse;

      return this.apiClient.callApi(
        '/fba/outbound/brazil/v0/shipments/{shipmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns the shipment details required to issue an invoice for the specified shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment. Get this value from the FBAOutboundShipmentStatus notification. For information about subscribing to notifications, see the [Notifications API Use Case Guide](doc:notifications-api-v1-use-case-guide).
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/GetShipmentDetailsResponse}
     */
    getShipmentDetails(shipmentId) {
      return this.getShipmentDetailsWithHttpInfo(shipmentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment.
     * @param {module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/SubmitInvoiceRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/SubmitInvoiceResponse} and HTTP response
     */
    submitInvoiceWithHttpInfo(shipmentId, body) {
      let postBody = body;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling submitInvoice");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling submitInvoice");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubmitInvoiceResponse;

      return this.apiClient.callApi(
        '/fba/outbound/brazil/v0/shipments/{shipmentId}/invoice', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Submits a shipment invoice document for a given shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1.133 | 25 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} shipmentId The identifier for the shipment.
     * @param {module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/SubmitInvoiceRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:shipmentInvoicingV0/js-client.shipmentInvoicingV0.model/SubmitInvoiceResponse}
     */
    submitInvoice(shipmentId, body) {
      return this.submitInvoiceWithHttpInfo(shipmentId, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
