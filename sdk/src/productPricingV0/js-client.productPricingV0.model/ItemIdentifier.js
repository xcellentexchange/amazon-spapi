/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ConditionType} from './ConditionType.js';

/**
 * The ItemIdentifier model module.
 * @module productPricingV0/js-client.productPricingV0.model/ItemIdentifier
 * @version v0
 */
export class ItemIdentifier {
  /**
   * Constructs a new <code>ItemIdentifier</code>.
   * Information that identifies an item.
   * @alias module:productPricingV0/js-client.productPricingV0.model/ItemIdentifier
   * @class
   * @param marketplaceId {String} A marketplace identifier. Specifies the marketplace from which prices are returned.
   * @param itemCondition {module:productPricingV0/js-client.productPricingV0.model/ConditionType} The condition of the item.
   */
  constructor(marketplaceId, itemCondition) {
    this.marketplaceId = marketplaceId;
    this.itemCondition = itemCondition;
  }

  /**
   * Constructs a <code>ItemIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productPricingV0/js-client.productPricingV0.model/ItemIdentifier} obj Optional instance to populate.
   * @return {module:productPricingV0/js-client.productPricingV0.model/ItemIdentifier} The populated <code>ItemIdentifier</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ItemIdentifier();
      if (data.hasOwnProperty('MarketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['MarketplaceId'], 'String');
      if (data.hasOwnProperty('ASIN'))
        obj.ASIN = ApiClient.convertToType(data['ASIN'], 'String');
      if (data.hasOwnProperty('SellerSKU'))
        obj.sellerSKU = ApiClient.convertToType(data['SellerSKU'], 'String');
      if (data.hasOwnProperty('ItemCondition'))
        obj.itemCondition = ConditionType.constructFromObject(data['ItemCondition']);
    }
    return obj;
  }
}

/**
 * A marketplace identifier. Specifies the marketplace from which prices are returned.
 * @member {String} marketplaceId
 */
ItemIdentifier.prototype.marketplaceId = undefined;

/**
 * The Amazon Standard Identification Number (ASIN) of the item.
 * @member {String} ASIN
 */
ItemIdentifier.prototype.ASIN = undefined;

/**
 * The seller stock keeping unit (SKU) of the item.
 * @member {String} sellerSKU
 */
ItemIdentifier.prototype.sellerSKU = undefined;

/**
 * The condition of the item.
 * @member {module:productPricingV0/js-client.productPricingV0.model/ConditionType} itemCondition
 */
ItemIdentifier.prototype.itemCondition = undefined;


