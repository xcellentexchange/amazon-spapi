/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {MoneyType} from './MoneyType.js';
import {Points} from './Points.js';

/**
 * The PriceType model module.
 * @module productPricingV0/js-client.productPricingV0.model/PriceType
 * @version v0
 */
export class PriceType {
  /**
   * Constructs a new <code>PriceType</code>.
   * @alias module:productPricingV0/js-client.productPricingV0.model/PriceType
   * @class
   * @param listingPrice {module:productPricingV0/js-client.productPricingV0.model/MoneyType} The listing price of the item including any promotions that apply.
   */
  constructor(listingPrice) {
    this.listingPrice = listingPrice;
  }

  /**
   * Constructs a <code>PriceType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productPricingV0/js-client.productPricingV0.model/PriceType} obj Optional instance to populate.
   * @return {module:productPricingV0/js-client.productPricingV0.model/PriceType} The populated <code>PriceType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PriceType();
      if (data.hasOwnProperty('LandedPrice'))
        obj.landedPrice = MoneyType.constructFromObject(data['LandedPrice']);
      if (data.hasOwnProperty('ListingPrice'))
        obj.listingPrice = MoneyType.constructFromObject(data['ListingPrice']);
      if (data.hasOwnProperty('Shipping'))
        obj.shipping = MoneyType.constructFromObject(data['Shipping']);
      if (data.hasOwnProperty('Points'))
        obj.points = Points.constructFromObject(data['Points']);
    }
    return obj;
  }
}

/**
 * The value calculated by adding ListingPrice + Shipping - Points. Note that if the landed price is not returned, the listing price represents the product with the lowest landed price.
 * @member {module:productPricingV0/js-client.productPricingV0.model/MoneyType} landedPrice
 */
PriceType.prototype.landedPrice = undefined;

/**
 * The listing price of the item including any promotions that apply.
 * @member {module:productPricingV0/js-client.productPricingV0.model/MoneyType} listingPrice
 */
PriceType.prototype.listingPrice = undefined;

/**
 * The shipping cost of the product. Note that the shipping cost is not always available.
 * @member {module:productPricingV0/js-client.productPricingV0.model/MoneyType} shipping
 */
PriceType.prototype.shipping = undefined;

/**
 * The number of Amazon Points offered with the purchase of an item, and their monetary value.
 * @member {module:productPricingV0/js-client.productPricingV0.model/Points} points
 */
PriceType.prototype.points = undefined;


