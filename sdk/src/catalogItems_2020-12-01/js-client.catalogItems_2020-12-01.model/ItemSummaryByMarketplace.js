/*
 * Selling Partner API for Catalog Items
 * The Selling Partner API for Catalog Items provides programmatic access to information about items in the Amazon catalog.  For more information, see the [Catalog Items API Use Case Guide](doc:catalog-items-api-v2020-12-01-use-case-guide).
 *
 * OpenAPI spec version: 2020-12-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The ItemSummaryByMarketplace model module.
 * @module catalogItems_2020-12-01/js-client.catalogItems_2020-12-01.model/ItemSummaryByMarketplace
 * @version 2020-12-01
 */
export class ItemSummaryByMarketplace {
  /**
   * Constructs a new <code>ItemSummaryByMarketplace</code>.
   * Summary details of an Amazon catalog item for the indicated Amazon marketplace.
   * @alias module:catalogItems_2020-12-01/js-client.catalogItems_2020-12-01.model/ItemSummaryByMarketplace
   * @class
   * @param marketplaceId {String} Amazon marketplace identifier.
   */
  constructor(marketplaceId) {
    this.marketplaceId = marketplaceId;
  }

  /**
   * Constructs a <code>ItemSummaryByMarketplace</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:catalogItems_2020-12-01/js-client.catalogItems_2020-12-01.model/ItemSummaryByMarketplace} obj Optional instance to populate.
   * @return {module:catalogItems_2020-12-01/js-client.catalogItems_2020-12-01.model/ItemSummaryByMarketplace} The populated <code>ItemSummaryByMarketplace</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ItemSummaryByMarketplace();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = ApiClient.convertToType(data['marketplaceId'], 'String');
      if (data.hasOwnProperty('brandName'))
        obj.brandName = ApiClient.convertToType(data['brandName'], 'String');
      if (data.hasOwnProperty('browseNode'))
        obj.browseNode = ApiClient.convertToType(data['browseNode'], 'String');
      if (data.hasOwnProperty('colorName'))
        obj.colorName = ApiClient.convertToType(data['colorName'], 'String');
      if (data.hasOwnProperty('itemName'))
        obj.itemName = ApiClient.convertToType(data['itemName'], 'String');
      if (data.hasOwnProperty('manufacturer'))
        obj.manufacturer = ApiClient.convertToType(data['manufacturer'], 'String');
      if (data.hasOwnProperty('modelNumber'))
        obj.modelNumber = ApiClient.convertToType(data['modelNumber'], 'String');
      if (data.hasOwnProperty('sizeName'))
        obj.sizeName = ApiClient.convertToType(data['sizeName'], 'String');
      if (data.hasOwnProperty('styleName'))
        obj.styleName = ApiClient.convertToType(data['styleName'], 'String');
    }
    return obj;
  }
}

/**
 * Amazon marketplace identifier.
 * @member {String} marketplaceId
 */
ItemSummaryByMarketplace.prototype.marketplaceId = undefined;

/**
 * Name of the brand associated with an Amazon catalog item.
 * @member {String} brandName
 */
ItemSummaryByMarketplace.prototype.brandName = undefined;

/**
 * Identifier of the browse node associated with an Amazon catalog item.
 * @member {String} browseNode
 */
ItemSummaryByMarketplace.prototype.browseNode = undefined;

/**
 * Name of the color associated with an Amazon catalog item.
 * @member {String} colorName
 */
ItemSummaryByMarketplace.prototype.colorName = undefined;

/**
 * Name, or title, associated with an Amazon catalog item.
 * @member {String} itemName
 */
ItemSummaryByMarketplace.prototype.itemName = undefined;

/**
 * Name of the manufacturer associated with an Amazon catalog item.
 * @member {String} manufacturer
 */
ItemSummaryByMarketplace.prototype.manufacturer = undefined;

/**
 * Model number associated with an Amazon catalog item.
 * @member {String} modelNumber
 */
ItemSummaryByMarketplace.prototype.modelNumber = undefined;

/**
 * Name of the size associated with an Amazon catalog item.
 * @member {String} sizeName
 */
ItemSummaryByMarketplace.prototype.sizeName = undefined;

/**
 * Name of the style associated with an Amazon catalog item.
 * @member {String} styleName
 */
ItemSummaryByMarketplace.prototype.styleName = undefined;


