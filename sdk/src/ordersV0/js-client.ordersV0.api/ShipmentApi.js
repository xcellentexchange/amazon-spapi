/*
 * Selling Partner API for Orders
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {UpdateShipmentStatusErrorResponse} from '../js-client.ordersV0.model/UpdateShipmentStatusErrorResponse.js';
import {UpdateShipmentStatusRequest} from '../js-client.ordersV0.model/UpdateShipmentStatusRequest.js';

/**
* Shipment service.
* @module ordersV0/js-client.ordersV0.api/ShipmentApi
* @version v0
*/
export class ShipmentApi {

    /**
    * Constructs a new ShipmentApi. 
    * @alias module:ordersV0/js-client.ordersV0.api/ShipmentApi
    * @class
    * @param {module:ordersV0/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ordersV0/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Update the shipment status for an order that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 5 | 15 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId An Amazon-defined order identifier, in 3-7-7 format.
     * @param {module:ordersV0/js-client.ordersV0.model/UpdateShipmentStatusRequest} payload The request body for the `updateShipmentStatus` operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    updateShipmentStatusWithHttpInfo(orderId, payload) {
      let postBody = payload;

      // verify the required parameter 'orderId' is set
      if (orderId === undefined || orderId === null) {
        throw new Error("Missing the required parameter 'orderId' when calling updateShipmentStatus");
      }

      // verify the required parameter 'payload' is set
      if (payload === undefined || payload === null) {
        throw new Error("Missing the required parameter 'payload' when calling updateShipmentStatus");
      }


      let pathParams = {
        'orderId': orderId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;

      return this.apiClient.callApi(
        '/orders/v0/orders/{orderId}/shipment', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Update the shipment status for an order that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 5 | 15 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The preceding table contains the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may receive higher rate and burst values then those shown here. For more information, refer to [Usage Plans and Rate Limits](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {String} orderId An Amazon-defined order identifier, in 3-7-7 format.
     * @param {module:ordersV0/js-client.ordersV0.model/UpdateShipmentStatusRequest} payload The request body for the `updateShipmentStatus` operation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    updateShipmentStatus(orderId, payload) {
      return this.updateShipmentStatusWithHttpInfo(orderId, payload)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
