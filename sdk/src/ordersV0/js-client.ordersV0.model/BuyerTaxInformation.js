/*
 * Selling Partner API for Orders
 * Use the Orders Selling Partner API to programmatically retrieve order information. With this API, you can develop fast, flexible, and custom applications to manage order synchronization, perform order research, and create demand-based decision support tools.   _Note:_ For the JP, AU, and SG marketplaces, the Orders API supports orders from 2016 onward. For all other marketplaces, the Orders API supports orders for the last two years (orders older than this don't show up in the response).
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The BuyerTaxInformation model module.
 * @module ordersV0/js-client.ordersV0.model/BuyerTaxInformation
 * @version v0
 */
export class BuyerTaxInformation {
  /**
   * Constructs a new <code>BuyerTaxInformation</code>.
   * Contains the business invoice tax information. Available only in the TR marketplace.
   * @alias module:ordersV0/js-client.ordersV0.model/BuyerTaxInformation
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>BuyerTaxInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:ordersV0/js-client.ordersV0.model/BuyerTaxInformation} obj Optional instance to populate.
   * @return {module:ordersV0/js-client.ordersV0.model/BuyerTaxInformation} The populated <code>BuyerTaxInformation</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new BuyerTaxInformation();
      if (data.hasOwnProperty('BuyerLegalCompanyName'))
        obj.buyerLegalCompanyName = ApiClient.convertToType(data['BuyerLegalCompanyName'], 'String');
      if (data.hasOwnProperty('BuyerBusinessAddress'))
        obj.buyerBusinessAddress = ApiClient.convertToType(data['BuyerBusinessAddress'], 'String');
      if (data.hasOwnProperty('BuyerTaxRegistrationId'))
        obj.buyerTaxRegistrationId = ApiClient.convertToType(data['BuyerTaxRegistrationId'], 'String');
      if (data.hasOwnProperty('BuyerTaxOffice'))
        obj.buyerTaxOffice = ApiClient.convertToType(data['BuyerTaxOffice'], 'String');
    }
    return obj;
  }
}

/**
 * Business buyer's company legal name.
 * @member {String} buyerLegalCompanyName
 */
BuyerTaxInformation.prototype.buyerLegalCompanyName = undefined;

/**
 * Business buyer's address.
 * @member {String} buyerBusinessAddress
 */
BuyerTaxInformation.prototype.buyerBusinessAddress = undefined;

/**
 * Business buyer's tax registration ID.
 * @member {String} buyerTaxRegistrationId
 */
BuyerTaxInformation.prototype.buyerTaxRegistrationId = undefined;

/**
 * Business buyer's tax office.
 * @member {String} buyerTaxOffice
 */
BuyerTaxInformation.prototype.buyerTaxOffice = undefined;


