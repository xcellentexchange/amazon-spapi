/*
 * Selling Partner API for A+ Content Management
 * With the A+ Content API, you can build applications that help selling partners add rich marketing content to their Amazon product detail pages. A+ content helps selling partners share their brand and product story, which helps buyers make informed purchasing decisions. Selling partners assemble content by choosing from content modules and adding images and text.
 *
 * OpenAPI spec version: 2020-11-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {ErrorList} from '../js-client.aplusContent_2020-11-01.model/ErrorList.js';
import {GetContentDocumentResponse} from '../js-client.aplusContent_2020-11-01.model/GetContentDocumentResponse.js';
import {ListContentDocumentAsinRelationsResponse} from '../js-client.aplusContent_2020-11-01.model/ListContentDocumentAsinRelationsResponse.js';
import {PostContentDocumentApprovalSubmissionResponse} from '../js-client.aplusContent_2020-11-01.model/PostContentDocumentApprovalSubmissionResponse.js';
import {PostContentDocumentAsinRelationsRequest} from '../js-client.aplusContent_2020-11-01.model/PostContentDocumentAsinRelationsRequest.js';
import {PostContentDocumentAsinRelationsResponse} from '../js-client.aplusContent_2020-11-01.model/PostContentDocumentAsinRelationsResponse.js';
import {PostContentDocumentRequest} from '../js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest.js';
import {PostContentDocumentResponse} from '../js-client.aplusContent_2020-11-01.model/PostContentDocumentResponse.js';
import {PostContentDocumentSuspendSubmissionResponse} from '../js-client.aplusContent_2020-11-01.model/PostContentDocumentSuspendSubmissionResponse.js';
import {SearchContentDocumentsResponse} from '../js-client.aplusContent_2020-11-01.model/SearchContentDocumentsResponse.js';
import {SearchContentPublishRecordsResponse} from '../js-client.aplusContent_2020-11-01.model/SearchContentPublishRecordsResponse.js';
import {ValidateContentDocumentAsinRelationsResponse} from '../js-client.aplusContent_2020-11-01.model/ValidateContentDocumentAsinRelationsResponse.js';

/**
* AplusContent service.
* @module aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.api/AplusContentApi
* @version 2020-11-01
*/
export class AplusContentApi {

    /**
    * Constructs a new AplusContentApi. 
    * @alias module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.api/AplusContentApi
    * @class
    * @param {module:aplusContent_2020-11-01/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:aplusContent_2020-11-01/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Creates a new A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest} postContentDocumentRequest The content document request details.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentResponse} and HTTP response
     */
    createContentDocumentWithHttpInfo(marketplaceId, postContentDocumentRequest) {
      let postBody = postContentDocumentRequest;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling createContentDocument");
      }

      // verify the required parameter 'postContentDocumentRequest' is set
      if (postContentDocumentRequest === undefined || postContentDocumentRequest === null) {
        throw new Error("Missing the required parameter 'postContentDocumentRequest' when calling createContentDocument");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostContentDocumentResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Creates a new A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest} postContentDocumentRequest The content document request details.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentResponse}
     */
    createContentDocument(marketplaceId, postContentDocumentRequest) {
      return this.createContentDocumentWithHttpInfo(marketplaceId, postContentDocumentRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns an A+ Content document, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {Array.<module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/String>} includedDataSet The set of A+ Content data types to include in the response.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/GetContentDocumentResponse} and HTTP response
     */
    getContentDocumentWithHttpInfo(contentReferenceKey, marketplaceId, includedDataSet) {
      let postBody = null;

      // verify the required parameter 'contentReferenceKey' is set
      if (contentReferenceKey === undefined || contentReferenceKey === null) {
        throw new Error("Missing the required parameter 'contentReferenceKey' when calling getContentDocument");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling getContentDocument");
      }

      // verify the required parameter 'includedDataSet' is set
      if (includedDataSet === undefined || includedDataSet === null) {
        throw new Error("Missing the required parameter 'includedDataSet' when calling getContentDocument");
      }


      let pathParams = {
        'contentReferenceKey': contentReferenceKey
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'includedDataSet': this.apiClient.buildCollectionParam(includedDataSet, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetContentDocumentResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns an A+ Content document, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {Array.<module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/String>} includedDataSet The set of A+ Content data types to include in the response.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/GetContentDocumentResponse}
     */
    getContentDocument(contentReferenceKey, marketplaceId, includedDataSet) {
      return this.getContentDocumentWithHttpInfo(contentReferenceKey, marketplaceId, includedDataSet)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns a list of ASINs related to the specified A+ Content document, if available. If you do not include the asinSet parameter, the operation returns all ASINs related to the content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/String>} opts.includedDataSet The set of A+ Content data types to include in the response. If you do not include this parameter, the operation returns the related ASINs without metadata.
     * @param {Array.<String>} opts.asinSet The set of ASINs.
     * @param {String} opts.pageToken A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/ListContentDocumentAsinRelationsResponse} and HTTP response
     */
    listContentDocumentAsinRelationsWithHttpInfo(contentReferenceKey, marketplaceId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'contentReferenceKey' is set
      if (contentReferenceKey === undefined || contentReferenceKey === null) {
        throw new Error("Missing the required parameter 'contentReferenceKey' when calling listContentDocumentAsinRelations");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling listContentDocumentAsinRelations");
      }


      let pathParams = {
        'contentReferenceKey': contentReferenceKey
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'includedDataSet': this.apiClient.buildCollectionParam(opts['includedDataSet'], 'csv'),
        'asinSet': this.apiClient.buildCollectionParam(opts['asinSet'], 'csv'),
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ListContentDocumentAsinRelationsResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/asins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns a list of ASINs related to the specified A+ Content document, if available. If you do not include the asinSet parameter, the operation returns all ASINs related to the content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/String>} opts.includedDataSet The set of A+ Content data types to include in the response. If you do not include this parameter, the operation returns the related ASINs without metadata.
     * @param {Array.<String>} opts.asinSet The set of ASINs.
     * @param {String} opts.pageToken A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/ListContentDocumentAsinRelationsResponse}
     */
    listContentDocumentAsinRelations(contentReferenceKey, marketplaceId, opts) {
      return this.listContentDocumentAsinRelationsWithHttpInfo(contentReferenceKey, marketplaceId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Submits an A+ Content document for review, approval, and publishing.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentApprovalSubmissionResponse} and HTTP response
     */
    postContentDocumentApprovalSubmissionWithHttpInfo(contentReferenceKey, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'contentReferenceKey' is set
      if (contentReferenceKey === undefined || contentReferenceKey === null) {
        throw new Error("Missing the required parameter 'contentReferenceKey' when calling postContentDocumentApprovalSubmission");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling postContentDocumentApprovalSubmission");
      }


      let pathParams = {
        'contentReferenceKey': contentReferenceKey
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostContentDocumentApprovalSubmissionResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/approvalSubmissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Submits an A+ Content document for review, approval, and publishing.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentApprovalSubmissionResponse}
     */
    postContentDocumentApprovalSubmission(contentReferenceKey, marketplaceId) {
      return this.postContentDocumentApprovalSubmissionWithHttpInfo(contentReferenceKey, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Replaces all ASINs related to the specified A+ Content document, if available. This may add or remove ASINs, depending on the current set of related ASINs. Removing an ASIN has the side effect of suspending the content document from that ASIN.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentAsinRelationsRequest} postContentDocumentAsinRelationsRequest The content document ASIN relations request details.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentAsinRelationsResponse} and HTTP response
     */
    postContentDocumentAsinRelationsWithHttpInfo(contentReferenceKey, marketplaceId, postContentDocumentAsinRelationsRequest) {
      let postBody = postContentDocumentAsinRelationsRequest;

      // verify the required parameter 'contentReferenceKey' is set
      if (contentReferenceKey === undefined || contentReferenceKey === null) {
        throw new Error("Missing the required parameter 'contentReferenceKey' when calling postContentDocumentAsinRelations");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling postContentDocumentAsinRelations");
      }

      // verify the required parameter 'postContentDocumentAsinRelationsRequest' is set
      if (postContentDocumentAsinRelationsRequest === undefined || postContentDocumentAsinRelationsRequest === null) {
        throw new Error("Missing the required parameter 'postContentDocumentAsinRelationsRequest' when calling postContentDocumentAsinRelations");
      }


      let pathParams = {
        'contentReferenceKey': contentReferenceKey
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostContentDocumentAsinRelationsResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/asins', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Replaces all ASINs related to the specified A+ Content document, if available. This may add or remove ASINs, depending on the current set of related ASINs. Removing an ASIN has the side effect of suspending the content document from that ASIN.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentAsinRelationsRequest} postContentDocumentAsinRelationsRequest The content document ASIN relations request details.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentAsinRelationsResponse}
     */
    postContentDocumentAsinRelations(contentReferenceKey, marketplaceId, postContentDocumentAsinRelationsRequest) {
      return this.postContentDocumentAsinRelationsWithHttpInfo(contentReferenceKey, marketplaceId, postContentDocumentAsinRelationsRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Submits a request to suspend visible A+ Content. This neither deletes the content document nor the ASIN relations.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentSuspendSubmissionResponse} and HTTP response
     */
    postContentDocumentSuspendSubmissionWithHttpInfo(contentReferenceKey, marketplaceId) {
      let postBody = null;

      // verify the required parameter 'contentReferenceKey' is set
      if (contentReferenceKey === undefined || contentReferenceKey === null) {
        throw new Error("Missing the required parameter 'contentReferenceKey' when calling postContentDocumentSuspendSubmission");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling postContentDocumentSuspendSubmission");
      }


      let pathParams = {
        'contentReferenceKey': contentReferenceKey
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostContentDocumentSuspendSubmissionResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}/suspendSubmissions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Submits a request to suspend visible A+ Content. This neither deletes the content document nor the ASIN relations.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentSuspendSubmissionResponse}
     */
    postContentDocumentSuspendSubmission(contentReferenceKey, marketplaceId) {
      return this.postContentDocumentSuspendSubmissionWithHttpInfo(contentReferenceKey, marketplaceId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Returns a list of all A+ Content documents assigned to a selling partner. This operation returns only the metadata of the A+ Content documents. Call the getContentDocument operation to get the actual contents of the A+ Content documents.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {Object} opts Optional parameters
     * @param {String} opts.pageToken A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/SearchContentDocumentsResponse} and HTTP response
     */
    searchContentDocumentsWithHttpInfo(marketplaceId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling searchContentDocuments");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchContentDocumentsResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns a list of all A+ Content documents assigned to a selling partner. This operation returns only the metadata of the A+ Content documents. Call the getContentDocument operation to get the actual contents of the A+ Content documents.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {Object} opts Optional parameters
     * @param {String} opts.pageToken A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/SearchContentDocumentsResponse}
     */
    searchContentDocuments(marketplaceId, opts) {
      return this.searchContentDocumentsWithHttpInfo(marketplaceId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Searches for A+ Content publishing records, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {String} asin The Amazon Standard Identification Number (ASIN).
     * @param {Object} opts Optional parameters
     * @param {String} opts.pageToken A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/SearchContentPublishRecordsResponse} and HTTP response
     */
    searchContentPublishRecordsWithHttpInfo(marketplaceId, asin, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling searchContentPublishRecords");
      }

      // verify the required parameter 'asin' is set
      if (asin === undefined || asin === null) {
        throw new Error("Missing the required parameter 'asin' when calling searchContentPublishRecords");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'asin': asin,
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SearchContentPublishRecordsResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentPublishRecords', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Searches for A+ Content publishing records, if available.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {String} asin The Amazon Standard Identification Number (ASIN).
     * @param {Object} opts Optional parameters
     * @param {String} opts.pageToken A page token from the nextPageToken response element returned by your previous call to this operation. nextPageToken is returned when the results of a call exceed the page size. To get the next page of results, call the operation and include pageToken as the only parameter. Specifying pageToken with any other parameter will cause the request to fail. When no nextPageToken value is returned there are no more pages to return. A pageToken value is not usable across different operations.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/SearchContentPublishRecordsResponse}
     */
    searchContentPublishRecords(marketplaceId, asin, opts) {
      return this.searchContentPublishRecordsWithHttpInfo(marketplaceId, asin, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates an existing A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest} postContentDocumentRequest The content document request details.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentResponse} and HTTP response
     */
    updateContentDocumentWithHttpInfo(contentReferenceKey, marketplaceId, postContentDocumentRequest) {
      let postBody = postContentDocumentRequest;

      // verify the required parameter 'contentReferenceKey' is set
      if (contentReferenceKey === undefined || contentReferenceKey === null) {
        throw new Error("Missing the required parameter 'contentReferenceKey' when calling updateContentDocument");
      }

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling updateContentDocument");
      }

      // verify the required parameter 'postContentDocumentRequest' is set
      if (postContentDocumentRequest === undefined || postContentDocumentRequest === null) {
        throw new Error("Missing the required parameter 'postContentDocumentRequest' when calling updateContentDocument");
      }


      let pathParams = {
        'contentReferenceKey': contentReferenceKey
      };
      let queryParams = {
        'marketplaceId': marketplaceId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PostContentDocumentResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentDocuments/{contentReferenceKey}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Updates an existing A+ Content document.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} contentReferenceKey The unique reference key for the A+ Content document. A content reference key cannot form a permalink and may change in the future. A content reference key is not guaranteed to match any A+ Content identifier.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest} postContentDocumentRequest The content document request details.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentResponse}
     */
    updateContentDocument(contentReferenceKey, marketplaceId, postContentDocumentRequest) {
      return this.updateContentDocumentWithHttpInfo(contentReferenceKey, marketplaceId, postContentDocumentRequest)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Checks if the A+ Content document is valid for use on a set of ASINs.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest} postContentDocumentRequest The content document request details.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.asinSet The set of ASINs.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/ValidateContentDocumentAsinRelationsResponse} and HTTP response
     */
    validateContentDocumentAsinRelationsWithHttpInfo(marketplaceId, postContentDocumentRequest, opts) {
      opts = opts || {};
      let postBody = postContentDocumentRequest;

      // verify the required parameter 'marketplaceId' is set
      if (marketplaceId === undefined || marketplaceId === null) {
        throw new Error("Missing the required parameter 'marketplaceId' when calling validateContentDocumentAsinRelations");
      }

      // verify the required parameter 'postContentDocumentRequest' is set
      if (postContentDocumentRequest === undefined || postContentDocumentRequest === null) {
        throw new Error("Missing the required parameter 'postContentDocumentRequest' when calling validateContentDocumentAsinRelations");
      }


      let pathParams = {
      };
      let queryParams = {
        'marketplaceId': marketplaceId,
        'asinSet': this.apiClient.buildCollectionParam(opts['asinSet'], 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidateContentDocumentAsinRelationsResponse;

      return this.apiClient.callApi(
        '/aplus/2020-11-01/contentAsinValidations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Checks if the A+ Content document is valid for use on a set of ASINs.  **Usage Plans:**  | Plan type | Rate (requests per second) | Burst | | ---- | ---- | ---- | |Default| 10 | 10 | |Selling partner specific| Variable | Variable |  The x-amzn-RateLimit-Limit response header returns the usage plan rate limits that were applied to the requested operation. Rate limits for some selling partners will vary from the default rate and burst shown in the table above. For more information, see \"Usage Plans and Rate Limits\" in the Selling Partner API documentation.
     * @param {String} marketplaceId The identifier for the marketplace where the A+ Content is published.
     * @param {module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/PostContentDocumentRequest} postContentDocumentRequest The content document request details.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.asinSet The set of ASINs.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:aplusContent_2020-11-01/js-client.aplusContent_2020-11-01.model/ValidateContentDocumentAsinRelationsResponse}
     */
    validateContentDocumentAsinRelations(marketplaceId, postContentDocumentRequest, opts) {
      return this.validateContentDocumentAsinRelationsWithHttpInfo(marketplaceId, postContentDocumentRequest, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
