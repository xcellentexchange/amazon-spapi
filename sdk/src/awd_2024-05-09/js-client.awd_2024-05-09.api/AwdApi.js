/*
 * The Selling Partner API for Amazon Warehousing and Distribution
 * The Selling Partner API for Amazon Warehousing and Distribution (AWD) provides programmatic access to information about AWD shipments and inventory. 
 *
 * OpenAPI spec version: 2024-05-09
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {ErrorList} from '../js-client.awd_2024-05-09.model/ErrorList.js';
import {InboundShipment} from '../js-client.awd_2024-05-09.model/InboundShipment.js';
import {InventoryListing} from '../js-client.awd_2024-05-09.model/InventoryListing.js';
import {ShipmentListing} from '../js-client.awd_2024-05-09.model/ShipmentListing.js';

/**
* Awd service.
* @module awd_2024-05-09/js-client.awd_2024-05-09.api/AwdApi
* @version 2024-05-09
*/
export class AwdApi {

    /**
    * Constructs a new AwdApi. 
    * @alias module:awd_2024-05-09/js-client.awd_2024-05-09.api/AwdApi
    * @class
    * @param {module:awd_2024-05-09/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:awd_2024-05-09/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
     * @param {String} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.skuQuantities If equal to `SHOW`, the response includes the shipment SKU quantity details.  Defaults to `HIDE`, in which case the response does not contain SKU quantities
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundShipment} and HTTP response
     */
    getInboundShipmentWithHttpInfo(shipmentId, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'shipmentId' is set
      if (shipmentId === undefined || shipmentId === null) {
        throw new Error("Missing the required parameter 'shipmentId' when calling getInboundShipment");
      }


      let pathParams = {
        'shipmentId': shipmentId
      };
      let queryParams = {
        'skuQuantities': opts['skuQuantities']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InboundShipment;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundShipments/{shipmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves an AWD inbound shipment.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api)
     * @param {String} shipmentId ID for the shipment. A shipment contains the cases being inbounded.
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.skuQuantities If equal to `SHOW`, the response includes the shipment SKU quantity details.  Defaults to `HIDE`, in which case the response does not contain SKU quantities
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InboundShipment}
     */
    getInboundShipment(shipmentId, opts) {
      return this.getInboundShipmentWithHttpInfo(shipmentId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortBy Field to sort results by. By default, the response will be sorted by UPDATED_AT.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.shipmentStatus Filter by inbound shipment status.
     * @param {Date} opts.updatedAfter List the inbound shipments that were updated after a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.updatedBefore List the inbound shipments that were updated before a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @param {String} opts.nextToken Token to retrieve the next set of paginated results.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/ShipmentListing} and HTTP response
     */
    listInboundShipmentsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'sortBy': opts['sortBy'],
        'sortOrder': opts['sortOrder'],
        'shipmentStatus': opts['shipmentStatus'],
        'updatedAfter': opts['updatedAfter'],
        'updatedBefore': opts['updatedBefore'],
        'maxResults': opts['maxResults'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ShipmentListing;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inboundShipments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Retrieves a summary of all the inbound AWD shipments associated with a merchant, with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 1 | 1 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortBy Field to sort results by. By default, the response will be sorted by UPDATED_AT.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in ASCENDING or DESCENDING order. By default, the response will be sorted in DESCENDING order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.shipmentStatus Filter by inbound shipment status.
     * @param {Date} opts.updatedAfter List the inbound shipments that were updated after a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.updatedBefore List the inbound shipments that were updated before a certain time (inclusive). The date must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @param {String} opts.nextToken Token to retrieve the next set of paginated results.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/ShipmentListing}
     */
    listInboundShipments(opts) {
      return this.listInboundShipmentsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {String} opts.sku Filter by seller or merchant SKU for the item.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in `ASCENDING` or `DESCENDING` order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.details Set to `SHOW` to return summaries with additional inventory details. Defaults to `HIDE,` which returns only inventory summary totals.
     * @param {String} opts.nextToken Token to retrieve the next set of paginated results.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InventoryListing} and HTTP response
     */
    listInventoryWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'sku': opts['sku'],
        'sortOrder': opts['sortOrder'],
        'details': opts['details'],
        'nextToken': opts['nextToken'],
        'maxResults': opts['maxResults']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InventoryListing;

      return this.apiClient.callApi(
        '/awd/2024-05-09/inventory', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Lists AWD inventory associated with a merchant with the ability to apply optional filters.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 2 | 2 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {String} opts.sku Filter by seller or merchant SKU for the item.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.sortOrder Sort the response in `ASCENDING` or `DESCENDING` order.
     * @param {module:awd_2024-05-09/js-client.awd_2024-05-09.model/String} opts.details Set to `SHOW` to return summaries with additional inventory details. Defaults to `HIDE,` which returns only inventory summary totals.
     * @param {String} opts.nextToken Token to retrieve the next set of paginated results.
     * @param {Number} opts.maxResults Maximum number of results to return. (default to 25)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:awd_2024-05-09/js-client.awd_2024-05-09.model/InventoryListing}
     */
    listInventory(opts) {
      return this.listInventoryWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
