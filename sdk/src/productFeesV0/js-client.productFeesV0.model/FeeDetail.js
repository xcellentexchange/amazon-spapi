/*
 * Selling Partner API for Product Fees
 * The Selling Partner API for Product Fees lets you programmatically retrieve estimated fees for a product. You can then account for those fees in your pricing.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {IncludedFeeDetailList} from './IncludedFeeDetailList.js';
import {MoneyType} from './MoneyType.js';

/**
 * The FeeDetail model module.
 * @module productFeesV0/js-client.productFeesV0.model/FeeDetail
 * @version v0
 */
export class FeeDetail {
  /**
   * Constructs a new <code>FeeDetail</code>.
   * The type of fee, fee amount, and other details.
   * @alias module:productFeesV0/js-client.productFeesV0.model/FeeDetail
   * @class
   * @param feeType {String} The type of fee charged to a seller.
   * @param feeAmount {module:productFeesV0/js-client.productFeesV0.model/MoneyType} The amount charged for a given fee.
   * @param finalFee {module:productFeesV0/js-client.productFeesV0.model/MoneyType} The final fee amount for a given fee.
   */
  constructor(feeType, feeAmount, finalFee) {
    this.feeType = feeType;
    this.feeAmount = feeAmount;
    this.finalFee = finalFee;
  }

  /**
   * Constructs a <code>FeeDetail</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productFeesV0/js-client.productFeesV0.model/FeeDetail} obj Optional instance to populate.
   * @return {module:productFeesV0/js-client.productFeesV0.model/FeeDetail} The populated <code>FeeDetail</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new FeeDetail();
      if (data.hasOwnProperty('FeeType'))
        obj.feeType = ApiClient.convertToType(data['FeeType'], 'String');
      if (data.hasOwnProperty('FeeAmount'))
        obj.feeAmount = MoneyType.constructFromObject(data['FeeAmount']);
      if (data.hasOwnProperty('FeePromotion'))
        obj.feePromotion = MoneyType.constructFromObject(data['FeePromotion']);
      if (data.hasOwnProperty('TaxAmount'))
        obj.taxAmount = MoneyType.constructFromObject(data['TaxAmount']);
      if (data.hasOwnProperty('FinalFee'))
        obj.finalFee = MoneyType.constructFromObject(data['FinalFee']);
      if (data.hasOwnProperty('IncludedFeeDetailList'))
        obj.includedFeeDetailList = IncludedFeeDetailList.constructFromObject(data['IncludedFeeDetailList']);
    }
    return obj;
  }
}

/**
 * The type of fee charged to a seller.
 * @member {String} feeType
 */
FeeDetail.prototype.feeType = undefined;

/**
 * The amount charged for a given fee.
 * @member {module:productFeesV0/js-client.productFeesV0.model/MoneyType} feeAmount
 */
FeeDetail.prototype.feeAmount = undefined;

/**
 * The promotion amount for a given fee.
 * @member {module:productFeesV0/js-client.productFeesV0.model/MoneyType} feePromotion
 */
FeeDetail.prototype.feePromotion = undefined;

/**
 * The tax amount for a given fee.
 * @member {module:productFeesV0/js-client.productFeesV0.model/MoneyType} taxAmount
 */
FeeDetail.prototype.taxAmount = undefined;

/**
 * The final fee amount for a given fee.
 * @member {module:productFeesV0/js-client.productFeesV0.model/MoneyType} finalFee
 */
FeeDetail.prototype.finalFee = undefined;

/**
 * @member {module:productFeesV0/js-client.productFeesV0.model/IncludedFeeDetailList} includedFeeDetailList
 */
FeeDetail.prototype.includedFeeDetailList = undefined;


