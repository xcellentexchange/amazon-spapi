/*
 * Selling Partner API for Product Fees
 * The Selling Partner API for Product Fees lets you programmatically retrieve estimated fees for a product. You can then account for those fees in your pricing.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {MoneyType} from './MoneyType.js';
import {Points} from './Points.js';

/**
 * The PriceToEstimateFees model module.
 * @module productFeesV0/js-client.productFeesV0.model/PriceToEstimateFees
 * @version v0
 */
export class PriceToEstimateFees {
  /**
   * Constructs a new <code>PriceToEstimateFees</code>.
   * Price information for an item, used to estimate fees.
   * @alias module:productFeesV0/js-client.productFeesV0.model/PriceToEstimateFees
   * @class
   * @param listingPrice {module:productFeesV0/js-client.productFeesV0.model/MoneyType} The price of the item.
   */
  constructor(listingPrice) {
    this.listingPrice = listingPrice;
  }

  /**
   * Constructs a <code>PriceToEstimateFees</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productFeesV0/js-client.productFeesV0.model/PriceToEstimateFees} obj Optional instance to populate.
   * @return {module:productFeesV0/js-client.productFeesV0.model/PriceToEstimateFees} The populated <code>PriceToEstimateFees</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PriceToEstimateFees();
      if (data.hasOwnProperty('ListingPrice'))
        obj.listingPrice = MoneyType.constructFromObject(data['ListingPrice']);
      if (data.hasOwnProperty('Shipping'))
        obj.shipping = MoneyType.constructFromObject(data['Shipping']);
      if (data.hasOwnProperty('Points'))
        obj.points = Points.constructFromObject(data['Points']);
    }
    return obj;
  }
}

/**
 * The price of the item.
 * @member {module:productFeesV0/js-client.productFeesV0.model/MoneyType} listingPrice
 */
PriceToEstimateFees.prototype.listingPrice = undefined;

/**
 * The shipping cost.
 * @member {module:productFeesV0/js-client.productFeesV0.model/MoneyType} shipping
 */
PriceToEstimateFees.prototype.shipping = undefined;

/**
 * The number of Amazon Points offered with the purchase of an item.
 * @member {module:productFeesV0/js-client.productFeesV0.model/Points} points
 */
PriceToEstimateFees.prototype.points = undefined;


