/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {GetShipmentDetailsResponse} from '../js-client.vendorShipments.model/GetShipmentDetailsResponse.js';
import {SubmitShipmentConfirmationsRequest} from '../js-client.vendorShipments.model/SubmitShipmentConfirmationsRequest.js';
import {SubmitShipmentConfirmationsResponse} from '../js-client.vendorShipments.model/SubmitShipmentConfirmationsResponse.js';
import {SubmitShipments} from '../js-client.vendorShipments.model/SubmitShipments.js';

/**
* VendorShipping service.
* @module vendorShipments/js-client.vendorShipments.api/VendorShippingApi
* @version v1
*/
export class VendorShippingApi {

    /**
    * Constructs a new VendorShippingApi. 
    * @alias module:vendorShipments/js-client.vendorShipments.api/VendorShippingApi
    * @class
    * @param {module:vendorShipments/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:vendorShipments/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit The limit to the number of records returned. Default value is 50 records.
     * @param {module:vendorShipments/js-client.vendorShipments.model/String} opts.sortOrder Sort in ascending or descending order by purchase order creation date.
     * @param {String} opts.nextToken Used for pagination when there are more shipments than the specified result size limit.
     * @param {Date} opts.createdAfter Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.createdBefore Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentConfirmedBefore Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentConfirmedAfter Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.packageLabelCreatedBefore Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.packageLabelCreatedAfter Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shippedBefore Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shippedAfter Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.estimatedDeliveryBefore Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.estimatedDeliveryAfter Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentDeliveryBefore Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentDeliveryAfter Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.requestedPickUpBefore Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.requestedPickUpAfter Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.scheduledPickUpBefore Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.scheduledPickUpAfter Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {String} opts.currentShipmentStatus Get Shipment Details by passing Current shipment status.
     * @param {String} opts.vendorShipmentIdentifier Get Shipment Details by passing Vendor Shipment ID
     * @param {String} opts.buyerReferenceNumber Get Shipment Details by passing buyer Reference ID
     * @param {String} opts.buyerWarehouseCode Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.
     * @param {String} opts.sellerWarehouseCode Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:vendorShipments/js-client.vendorShipments.model/GetShipmentDetailsResponse} and HTTP response
     */
    getShipmentDetailsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'sortOrder': opts['sortOrder'],
        'nextToken': opts['nextToken'],
        'createdAfter': opts['createdAfter'],
        'createdBefore': opts['createdBefore'],
        'shipmentConfirmedBefore': opts['shipmentConfirmedBefore'],
        'shipmentConfirmedAfter': opts['shipmentConfirmedAfter'],
        'packageLabelCreatedBefore': opts['packageLabelCreatedBefore'],
        'packageLabelCreatedAfter': opts['packageLabelCreatedAfter'],
        'shippedBefore': opts['shippedBefore'],
        'shippedAfter': opts['shippedAfter'],
        'estimatedDeliveryBefore': opts['estimatedDeliveryBefore'],
        'estimatedDeliveryAfter': opts['estimatedDeliveryAfter'],
        'shipmentDeliveryBefore': opts['shipmentDeliveryBefore'],
        'shipmentDeliveryAfter': opts['shipmentDeliveryAfter'],
        'requestedPickUpBefore': opts['requestedPickUpBefore'],
        'requestedPickUpAfter': opts['requestedPickUpAfter'],
        'scheduledPickUpBefore': opts['scheduledPickUpBefore'],
        'scheduledPickUpAfter': opts['scheduledPickUpAfter'],
        'currentShipmentStatus': opts['currentShipmentStatus'],
        'vendorShipmentIdentifier': opts['vendorShipmentIdentifier'],
        'buyerReferenceNumber': opts['buyerReferenceNumber'],
        'buyerWarehouseCode': opts['buyerWarehouseCode'],
        'sellerWarehouseCode': opts['sellerWarehouseCode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetShipmentDetailsResponse;

      return this.apiClient.callApi(
        '/vendor/shipping/v1/shipments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Returns the Details about Shipment, Carrier Details,  status of the shipment, container details and other details related to shipment based on the filter parameters value that you specify.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit The limit to the number of records returned. Default value is 50 records.
     * @param {module:vendorShipments/js-client.vendorShipments.model/String} opts.sortOrder Sort in ascending or descending order by purchase order creation date.
     * @param {String} opts.nextToken Used for pagination when there are more shipments than the specified result size limit.
     * @param {Date} opts.createdAfter Get Shipment Details that became available after this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.createdBefore Get Shipment Details that became available before this timestamp will be included in the result. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentConfirmedBefore Get Shipment Details by passing Shipment confirmed create Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentConfirmedAfter Get Shipment Details by passing Shipment confirmed create Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.packageLabelCreatedBefore Get Shipment Details by passing Package label create Date by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.packageLabelCreatedAfter Get Shipment Details by passing Package label create Date After by buyer. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shippedBefore Get Shipment Details by passing Shipped Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shippedAfter Get Shipment Details by passing Shipped Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.estimatedDeliveryBefore Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.estimatedDeliveryAfter Get Shipment Details by passing Estimated Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentDeliveryBefore Get Shipment Details by passing Shipment Delivery Date Before. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.shipmentDeliveryAfter Get Shipment Details by passing Shipment Delivery Date After. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.requestedPickUpBefore Get Shipment Details by passing Before Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.requestedPickUpAfter Get Shipment Details by passing After Requested pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.scheduledPickUpBefore Get Shipment Details by passing Before scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {Date} opts.scheduledPickUpAfter Get Shipment Details by passing After Scheduled pickup date. Must be in <a href='https://developer-docs.amazon.com/sp-api/docs/iso-8601'>ISO 8601</a> format.
     * @param {String} opts.currentShipmentStatus Get Shipment Details by passing Current shipment status.
     * @param {String} opts.vendorShipmentIdentifier Get Shipment Details by passing Vendor Shipment ID
     * @param {String} opts.buyerReferenceNumber Get Shipment Details by passing buyer Reference ID
     * @param {String} opts.buyerWarehouseCode Get Shipping Details based on buyer warehouse code. This value should be same as 'shipToParty.partyId' in the Shipment.
     * @param {String} opts.sellerWarehouseCode Get Shipping Details based on vendor warehouse code. This value should be same as 'sellingParty.partyId' in the Shipment.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:vendorShipments/js-client.vendorShipments.model/GetShipmentDetailsResponse}
     */
    getShipmentDetails(opts) {
      return this.getShipmentDetailsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:vendorShipments/js-client.vendorShipments.model/SubmitShipmentConfirmationsRequest} body A request to submit shipment confirmation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:vendorShipments/js-client.vendorShipments.model/SubmitShipmentConfirmationsResponse} and HTTP response
     */
    submitShipmentConfirmationsWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling submitShipmentConfirmations");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubmitShipmentConfirmationsResponse;

      return this.apiClient.callApi(
        '/vendor/shipping/v1/shipmentConfirmations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Submits one or more shipment confirmations for vendor orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:vendorShipments/js-client.vendorShipments.model/SubmitShipmentConfirmationsRequest} body A request to submit shipment confirmation.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:vendorShipments/js-client.vendorShipments.model/SubmitShipmentConfirmationsResponse}
     */
    submitShipmentConfirmations(body) {
      return this.submitShipmentConfirmationsWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:vendorShipments/js-client.vendorShipments.model/SubmitShipments} body A request to submit shipment request.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:vendorShipments/js-client.vendorShipments.model/SubmitShipmentConfirmationsResponse} and HTTP response
     */
    submitShipmentsWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling submitShipments");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SubmitShipmentConfirmationsResponse;

      return this.apiClient.callApi(
        '/vendor/shipping/v1/shipments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Submits one or more shipment request for vendor Orders.  **Usage Plan:**  | Rate (requests per second) | Burst | | ---- | ---- | | 10 | 10 |  The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @param {module:vendorShipments/js-client.vendorShipments.model/SubmitShipments} body A request to submit shipment request.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:vendorShipments/js-client.vendorShipments.model/SubmitShipmentConfirmationsResponse}
     */
    submitShipments(body) {
      return this.submitShipmentsWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
