/*
 * Selling Partner API for Retail Procurement Shipments
 * The Selling Partner API for Retail Procurement Shipments provides programmatic access to retail shipping data for vendors.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Decimal} from './Decimal.js';

/**
 * The Dimensions model module.
 * @module vendorShipments/js-client.vendorShipments.model/Dimensions
 * @version v1
 */
export class Dimensions {
  /**
   * Constructs a new <code>Dimensions</code>.
   * Physical dimensional measurements of a container.
   * @alias module:vendorShipments/js-client.vendorShipments.model/Dimensions
   * @class
   * @param length {module:vendorShipments/js-client.vendorShipments.model/Decimal} The length of the container.
   * @param width {module:vendorShipments/js-client.vendorShipments.model/Decimal} The width of the container.
   * @param height {module:vendorShipments/js-client.vendorShipments.model/Decimal} The height of the container.
   * @param unitOfMeasure {module:vendorShipments/js-client.vendorShipments.model/Dimensions.UnitOfMeasureEnum} The unit of measure for dimensions.
   */
  constructor(length, width, height, unitOfMeasure) {
    this.length = length;
    this.width = width;
    this.height = height;
    this.unitOfMeasure = unitOfMeasure;
  }

  /**
   * Constructs a <code>Dimensions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorShipments/js-client.vendorShipments.model/Dimensions} obj Optional instance to populate.
   * @return {module:vendorShipments/js-client.vendorShipments.model/Dimensions} The populated <code>Dimensions</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Dimensions();
      if (data.hasOwnProperty('length'))
        obj.length = Decimal.constructFromObject(data['length']);
      if (data.hasOwnProperty('width'))
        obj.width = Decimal.constructFromObject(data['width']);
      if (data.hasOwnProperty('height'))
        obj.height = Decimal.constructFromObject(data['height']);
      if (data.hasOwnProperty('unitOfMeasure'))
        obj.unitOfMeasure = ApiClient.convertToType(data['unitOfMeasure'], 'String');
    }
    return obj;
  }
}

/**
 * The length of the container.
 * @member {module:vendorShipments/js-client.vendorShipments.model/Decimal} length
 */
Dimensions.prototype.length = undefined;

/**
 * The width of the container.
 * @member {module:vendorShipments/js-client.vendorShipments.model/Decimal} width
 */
Dimensions.prototype.width = undefined;

/**
 * The height of the container.
 * @member {module:vendorShipments/js-client.vendorShipments.model/Decimal} height
 */
Dimensions.prototype.height = undefined;

/**
 * Allowed values for the <code>unitOfMeasure</code> property.
 * @enum {String}
 * @readonly
 */
Dimensions.UnitOfMeasureEnum = {
  /**
   * value: "In"
   * @const
   */
  _in: "In",

  /**
   * value: "Ft"
   * @const
   */
  ft: "Ft",

  /**
   * value: "Meter"
   * @const
   */
  meter: "Meter",

  /**
   * value: "Yard"
   * @const
   */
  yard: "Yard"
};

/**
 * The unit of measure for dimensions.
 * @member {module:vendorShipments/js-client.vendorShipments.model/Dimensions.UnitOfMeasureEnum} unitOfMeasure
 */
Dimensions.prototype.unitOfMeasure = undefined;


