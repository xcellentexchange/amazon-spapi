/*
 * Selling Partner API for Reports
 * Effective **June 27, 2024**, the Selling Partner API for Reports v2020-09-04 will no longer be available and all calls to it will fail. Integrations that rely on the Reports API must migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
 *
 * OpenAPI spec version: 2020-09-04
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from "../ApiClient.js";
import {CancelReportResponse} from '../js-client.reports_2020-09-04.model/CancelReportResponse.js';
import {CancelReportScheduleResponse} from '../js-client.reports_2020-09-04.model/CancelReportScheduleResponse.js';
import {CreateReportResponse} from '../js-client.reports_2020-09-04.model/CreateReportResponse.js';
import {CreateReportScheduleResponse} from '../js-client.reports_2020-09-04.model/CreateReportScheduleResponse.js';
import {CreateReportScheduleSpecification} from '../js-client.reports_2020-09-04.model/CreateReportScheduleSpecification.js';
import {CreateReportSpecification} from '../js-client.reports_2020-09-04.model/CreateReportSpecification.js';
import {GetReportDocumentResponse} from '../js-client.reports_2020-09-04.model/GetReportDocumentResponse.js';
import {GetReportResponse} from '../js-client.reports_2020-09-04.model/GetReportResponse.js';
import {GetReportScheduleResponse} from '../js-client.reports_2020-09-04.model/GetReportScheduleResponse.js';
import {GetReportSchedulesResponse} from '../js-client.reports_2020-09-04.model/GetReportSchedulesResponse.js';
import {GetReportsResponse} from '../js-client.reports_2020-09-04.model/GetReportsResponse.js';

/**
* Reports service.
* @module reports_2020-09-04/js-client.reports_2020-09-04.api/ReportsApi
* @version 2020-09-04
*/
export class ReportsApi {

    /**
    * Constructs a new ReportsApi. 
    * @alias module:reports_2020-09-04/js-client.reports_2020-09-04.api/ReportsApi
    * @class
    * @param {module:reports_2020-09-04/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:reports_2020-09-04/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Effective **June 27, 2023**, the `cancelReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportId The identifier for the report. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CancelReportResponse} and HTTP response
     */
    cancelReportWithHttpInfo(reportId) {
      let postBody = null;

      // verify the required parameter 'reportId' is set
      if (reportId === undefined || reportId === null) {
        throw new Error("Missing the required parameter 'reportId' when calling cancelReport");
      }


      let pathParams = {
        'reportId': reportId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CancelReportResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/reports/{reportId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `cancelReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportId The identifier for the report. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CancelReportResponse}
     */
    cancelReport(reportId) {
      return this.cancelReportWithHttpInfo(reportId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `cancelReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportScheduleId The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CancelReportScheduleResponse} and HTTP response
     */
    cancelReportScheduleWithHttpInfo(reportScheduleId) {
      let postBody = null;

      // verify the required parameter 'reportScheduleId' is set
      if (reportScheduleId === undefined || reportScheduleId === null) {
        throw new Error("Missing the required parameter 'reportScheduleId' when calling cancelReportSchedule");
      }


      let pathParams = {
        'reportScheduleId': reportScheduleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CancelReportScheduleResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/schedules/{reportScheduleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `cancelReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportScheduleId The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CancelReportScheduleResponse}
     */
    cancelReportSchedule(reportScheduleId) {
      return this.cancelReportScheduleWithHttpInfo(reportScheduleId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `createReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportSpecification} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportResponse} and HTTP response
     */
    createReportWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createReport");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateReportResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/reports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `createReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportSpecification} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportResponse}
     */
    createReport(body) {
      return this.createReportWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `createReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportScheduleSpecification} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportScheduleResponse} and HTTP response
     */
    createReportScheduleWithHttpInfo(body) {
      let postBody = body;

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling createReportSchedule");
      }


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CreateReportScheduleResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/schedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `createReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportScheduleSpecification} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/CreateReportScheduleResponse}
     */
    createReportSchedule(body) {
      return this.createReportScheduleWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `getReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportId The identifier for the report. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportResponse} and HTTP response
     */
    getReportWithHttpInfo(reportId) {
      let postBody = null;

      // verify the required parameter 'reportId' is set
      if (reportId === undefined || reportId === null) {
        throw new Error("Missing the required parameter 'reportId' when calling getReport");
      }


      let pathParams = {
        'reportId': reportId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReportResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/reports/{reportId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `getReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportId The identifier for the report. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportResponse}
     */
    getReport(reportId) {
      return this.getReportWithHttpInfo(reportId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `getReportDocument` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportDocumentId The identifier for the report document.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportDocumentResponse} and HTTP response
     */
    getReportDocumentWithHttpInfo(reportDocumentId) {
      let postBody = null;

      // verify the required parameter 'reportDocumentId' is set
      if (reportDocumentId === undefined || reportDocumentId === null) {
        throw new Error("Missing the required parameter 'reportDocumentId' when calling getReportDocument");
      }


      let pathParams = {
        'reportDocumentId': reportDocumentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReportDocumentResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/documents/{reportDocumentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `getReportDocument` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportDocumentId The identifier for the report document.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportDocumentResponse}
     */
    getReportDocument(reportDocumentId) {
      return this.getReportDocumentWithHttpInfo(reportDocumentId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `getReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportScheduleId The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportScheduleResponse} and HTTP response
     */
    getReportScheduleWithHttpInfo(reportScheduleId) {
      let postBody = null;

      // verify the required parameter 'reportScheduleId' is set
      if (reportScheduleId === undefined || reportScheduleId === null) {
        throw new Error("Missing the required parameter 'reportScheduleId' when calling getReportSchedule");
      }


      let pathParams = {
        'reportScheduleId': reportScheduleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReportScheduleResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/schedules/{reportScheduleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `getReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {String} reportScheduleId The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportScheduleResponse}
     */
    getReportSchedule(reportScheduleId) {
      return this.getReportScheduleWithHttpInfo(reportScheduleId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `getReportSchedules` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {Array.<String>} reportTypes A list of report types used to filter report schedules.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportSchedulesResponse} and HTTP response
     */
    getReportSchedulesWithHttpInfo(reportTypes) {
      let postBody = null;

      // verify the required parameter 'reportTypes' is set
      if (reportTypes === undefined || reportTypes === null) {
        throw new Error("Missing the required parameter 'reportTypes' when calling getReportSchedules");
      }


      let pathParams = {
      };
      let queryParams = {
        'reportTypes': this.apiClient.buildCollectionParam(reportTypes, 'csv')
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReportSchedulesResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/schedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `getReportSchedules` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {Array.<String>} reportTypes A list of report types used to filter report schedules.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportSchedulesResponse}
     */
    getReportSchedules(reportTypes) {
      return this.getReportSchedulesWithHttpInfo(reportTypes)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Effective **June 27, 2023**, the `getReports` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.reportTypes A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required.
     * @param {Array.<module:reports_2020-09-04/js-client.reports_2020-09-04.model/String>} opts.processingStatuses A list of processing statuses used to filter reports.
     * @param {Array.<String>} opts.marketplaceIds A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify.
     * @param {Number} opts.pageSize The maximum number of reports to return in a single call. (default to 10)
     * @param {Date} opts.createdSince The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days.
     * @param {Date} opts.createdUntil The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now.
     * @param {String} opts.nextToken A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportsResponse} and HTTP response
     */
    getReportsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'reportTypes': this.apiClient.buildCollectionParam(opts['reportTypes'], 'csv'),
        'processingStatuses': this.apiClient.buildCollectionParam(opts['processingStatuses'], 'csv'),
        'marketplaceIds': this.apiClient.buildCollectionParam(opts['marketplaceIds'], 'csv'),
        'pageSize': opts['pageSize'],
        'createdSince': opts['createdSince'],
        'createdUntil': opts['createdUntil'],
        'nextToken': opts['nextToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetReportsResponse;

      return this.apiClient.callApi(
        '/reports/2020-09-04/reports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        contentTypes, accepts, returnType
      );
    }

    /**
     * Effective **June 27, 2023**, the `getReports` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.reportTypes A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required.
     * @param {Array.<module:reports_2020-09-04/js-client.reports_2020-09-04.model/String>} opts.processingStatuses A list of processing statuses used to filter reports.
     * @param {Array.<String>} opts.marketplaceIds A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify.
     * @param {Number} opts.pageSize The maximum number of reports to return in a single call. (default to 10)
     * @param {Date} opts.createdSince The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days.
     * @param {Date} opts.createdUntil The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now.
     * @param {String} opts.nextToken A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:reports_2020-09-04/js-client.reports_2020-09-04.model/GetReportsResponse}
     */
    getReports(opts) {
      return this.getReportsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
