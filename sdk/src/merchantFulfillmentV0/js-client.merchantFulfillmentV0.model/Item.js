/*
 * Selling Partner API for Merchant Fulfillment
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AdditionalSellerInputsList} from './AdditionalSellerInputsList.js';
import {DangerousGoodsDetails} from './DangerousGoodsDetails.js';
import {ItemDescription} from './ItemDescription.js';
import {ItemQuantity} from './ItemQuantity.js';
import {LiquidVolume} from './LiquidVolume.js';
import {OrderItemId} from './OrderItemId.js';
import {TransparencyCodeList} from './TransparencyCodeList.js';
import {Weight} from './Weight.js';

/**
 * The Item model module.
 * @module merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Item
 * @version v0
 */
export class Item {
  /**
   * Constructs a new <code>Item</code>.
   * An Amazon order item identifier and a quantity.
   * @alias module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Item
   * @class
   * @param orderItemId {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/OrderItemId} 
   * @param quantity {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/ItemQuantity} 
   */
  constructor(orderItemId, quantity) {
    this.orderItemId = orderItemId;
    this.quantity = quantity;
  }

  /**
   * Constructs a <code>Item</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Item} obj Optional instance to populate.
   * @return {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Item} The populated <code>Item</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Item();
      if (data.hasOwnProperty('OrderItemId'))
        obj.orderItemId = OrderItemId.constructFromObject(data['OrderItemId']);
      if (data.hasOwnProperty('Quantity'))
        obj.quantity = ItemQuantity.constructFromObject(data['Quantity']);
      if (data.hasOwnProperty('ItemWeight'))
        obj.itemWeight = Weight.constructFromObject(data['ItemWeight']);
      if (data.hasOwnProperty('ItemDescription'))
        obj.itemDescription = ItemDescription.constructFromObject(data['ItemDescription']);
      if (data.hasOwnProperty('TransparencyCodeList'))
        obj.transparencyCodeList = TransparencyCodeList.constructFromObject(data['TransparencyCodeList']);
      if (data.hasOwnProperty('ItemLevelSellerInputsList'))
        obj.itemLevelSellerInputsList = AdditionalSellerInputsList.constructFromObject(data['ItemLevelSellerInputsList']);
      if (data.hasOwnProperty('LiquidVolume'))
        obj.liquidVolume = LiquidVolume.constructFromObject(data['LiquidVolume']);
      if (data.hasOwnProperty('IsHazmat'))
        obj.isHazmat = ApiClient.convertToType(data['IsHazmat'], 'Boolean');
      if (data.hasOwnProperty('DangerousGoodsDetails'))
        obj.dangerousGoodsDetails = DangerousGoodsDetails.constructFromObject(data['DangerousGoodsDetails']);
    }
    return obj;
  }
}

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/OrderItemId} orderItemId
 */
Item.prototype.orderItemId = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/ItemQuantity} quantity
 */
Item.prototype.quantity = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Weight} itemWeight
 */
Item.prototype.itemWeight = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/ItemDescription} itemDescription
 */
Item.prototype.itemDescription = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/TransparencyCodeList} transparencyCodeList
 */
Item.prototype.transparencyCodeList = undefined;

/**
 * A list of additional seller inputs required to ship this item using the chosen shipping service.
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/AdditionalSellerInputsList} itemLevelSellerInputsList
 */
Item.prototype.itemLevelSellerInputsList = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/LiquidVolume} liquidVolume
 */
Item.prototype.liquidVolume = undefined;

/**
 * When true, the item qualifies as hazardous materials (hazmat). Defaults to false.
 * @member {Boolean} isHazmat
 */
Item.prototype.isHazmat = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/DangerousGoodsDetails} dangerousGoodsDetails
 */
Item.prototype.dangerousGoodsDetails = undefined;


