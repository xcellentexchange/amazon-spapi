/*
 * Selling Partner API for Merchant Fulfillment
 * The Selling Partner API for Merchant Fulfillment helps you build applications that let sellers purchase shipping for non-Prime and Prime orders using Amazonâ€™s Buy Shipping Services.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {CurrencyAmount} from './CurrencyAmount.js';
import {Length} from './Length.js';
import {Timestamp} from './Timestamp.js';
import {Weight} from './Weight.js';

/**
 * The AdditionalSellerInput model module.
 * @module merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/AdditionalSellerInput
 * @version v0
 */
export class AdditionalSellerInput {
  /**
   * Constructs a new <code>AdditionalSellerInput</code>.
   * Additional information required to purchase shipping.
   * @alias module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/AdditionalSellerInput
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AdditionalSellerInput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/AdditionalSellerInput} obj Optional instance to populate.
   * @return {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/AdditionalSellerInput} The populated <code>AdditionalSellerInput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new AdditionalSellerInput();
      if (data.hasOwnProperty('DataType'))
        obj.dataType = ApiClient.convertToType(data['DataType'], 'String');
      if (data.hasOwnProperty('ValueAsString'))
        obj.valueAsString = ApiClient.convertToType(data['ValueAsString'], 'String');
      if (data.hasOwnProperty('ValueAsBoolean'))
        obj.valueAsBoolean = ApiClient.convertToType(data['ValueAsBoolean'], 'Boolean');
      if (data.hasOwnProperty('ValueAsInteger'))
        obj.valueAsInteger = ApiClient.convertToType(data['ValueAsInteger'], 'Number');
      if (data.hasOwnProperty('ValueAsTimestamp'))
        obj.valueAsTimestamp = Timestamp.constructFromObject(data['ValueAsTimestamp']);
      if (data.hasOwnProperty('ValueAsAddress'))
        obj.valueAsAddress = Address.constructFromObject(data['ValueAsAddress']);
      if (data.hasOwnProperty('ValueAsWeight'))
        obj.valueAsWeight = Weight.constructFromObject(data['ValueAsWeight']);
      if (data.hasOwnProperty('ValueAsDimension'))
        obj.valueAsDimension = Length.constructFromObject(data['ValueAsDimension']);
      if (data.hasOwnProperty('ValueAsCurrency'))
        obj.valueAsCurrency = CurrencyAmount.constructFromObject(data['ValueAsCurrency']);
    }
    return obj;
  }
}

/**
 * The data type of the additional information.
 * @member {String} dataType
 */
AdditionalSellerInput.prototype.dataType = undefined;

/**
 * The value when the data type is string.
 * @member {String} valueAsString
 */
AdditionalSellerInput.prototype.valueAsString = undefined;

/**
 * The value when the data type is boolean.
 * @member {Boolean} valueAsBoolean
 */
AdditionalSellerInput.prototype.valueAsBoolean = undefined;

/**
 * The value when the data type is integer.
 * @member {Number} valueAsInteger
 */
AdditionalSellerInput.prototype.valueAsInteger = undefined;

/**
 * The value when the data type is a date-time formatted string.
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Timestamp} valueAsTimestamp
 */
AdditionalSellerInput.prototype.valueAsTimestamp = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Address} valueAsAddress
 */
AdditionalSellerInput.prototype.valueAsAddress = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Weight} valueAsWeight
 */
AdditionalSellerInput.prototype.valueAsWeight = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/Length} valueAsDimension
 */
AdditionalSellerInput.prototype.valueAsDimension = undefined;

/**
 * @member {module:merchantFulfillmentV0/js-client.merchantFulfillmentV0.model/CurrencyAmount} valueAsCurrency
 */
AdditionalSellerInput.prototype.valueAsCurrency = undefined;


