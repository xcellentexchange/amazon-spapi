/*
 * Selling Partner API for Shipping
 * Provides programmatic access to Amazon Shipping APIs.   **Note:** If you are new to the Amazon Shipping API, refer to the latest version of <a href=\"https://developer-docs.amazon.com/amazon-shipping/docs/shipping-api-v2-reference\">Amazon Shipping API (v2)</a> on the <a href=\"https://developer-docs.amazon.com/amazon-shipping/\">Amazon Shipping Developer Documentation</a> site.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {ClientReferenceId} from './ClientReferenceId.js';
import {ContainerList} from './ContainerList.js';
import {LabelSpecification} from './LabelSpecification.js';
import {ServiceType} from './ServiceType.js';

/**
 * The PurchaseShipmentRequest model module.
 * @module shipping/js-client.shipping.model/PurchaseShipmentRequest
 * @version v1
 */
export class PurchaseShipmentRequest {
  /**
   * Constructs a new <code>PurchaseShipmentRequest</code>.
   * The payload schema for the purchaseShipment operation.
   * @alias module:shipping/js-client.shipping.model/PurchaseShipmentRequest
   * @class
   * @param clientReferenceId {module:shipping/js-client.shipping.model/ClientReferenceId} 
   * @param shipTo {module:shipping/js-client.shipping.model/Address} 
   * @param shipFrom {module:shipping/js-client.shipping.model/Address} 
   * @param serviceType {module:shipping/js-client.shipping.model/ServiceType} 
   * @param containers {module:shipping/js-client.shipping.model/ContainerList} 
   * @param labelSpecification {module:shipping/js-client.shipping.model/LabelSpecification} 
   */
  constructor(clientReferenceId, shipTo, shipFrom, serviceType, containers, labelSpecification) {
    this.clientReferenceId = clientReferenceId;
    this.shipTo = shipTo;
    this.shipFrom = shipFrom;
    this.serviceType = serviceType;
    this.containers = containers;
    this.labelSpecification = labelSpecification;
  }

  /**
   * Constructs a <code>PurchaseShipmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:shipping/js-client.shipping.model/PurchaseShipmentRequest} obj Optional instance to populate.
   * @return {module:shipping/js-client.shipping.model/PurchaseShipmentRequest} The populated <code>PurchaseShipmentRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PurchaseShipmentRequest();
      if (data.hasOwnProperty('clientReferenceId'))
        obj.clientReferenceId = ClientReferenceId.constructFromObject(data['clientReferenceId']);
      if (data.hasOwnProperty('shipTo'))
        obj.shipTo = Address.constructFromObject(data['shipTo']);
      if (data.hasOwnProperty('shipFrom'))
        obj.shipFrom = Address.constructFromObject(data['shipFrom']);
      if (data.hasOwnProperty('shipDate'))
        obj.shipDate = ApiClient.convertToType(data['shipDate'], 'Date');
      if (data.hasOwnProperty('serviceType'))
        obj.serviceType = ServiceType.constructFromObject(data['serviceType']);
      if (data.hasOwnProperty('containers'))
        obj.containers = ContainerList.constructFromObject(data['containers']);
      if (data.hasOwnProperty('labelSpecification'))
        obj.labelSpecification = LabelSpecification.constructFromObject(data['labelSpecification']);
    }
    return obj;
  }
}

/**
 * @member {module:shipping/js-client.shipping.model/ClientReferenceId} clientReferenceId
 */
PurchaseShipmentRequest.prototype.clientReferenceId = undefined;

/**
 * @member {module:shipping/js-client.shipping.model/Address} shipTo
 */
PurchaseShipmentRequest.prototype.shipTo = undefined;

/**
 * @member {module:shipping/js-client.shipping.model/Address} shipFrom
 */
PurchaseShipmentRequest.prototype.shipFrom = undefined;

/**
 * The start date and time. This defaults to the current date and time.
 * @member {Date} shipDate
 */
PurchaseShipmentRequest.prototype.shipDate = undefined;

/**
 * @member {module:shipping/js-client.shipping.model/ServiceType} serviceType
 */
PurchaseShipmentRequest.prototype.serviceType = undefined;

/**
 * @member {module:shipping/js-client.shipping.model/ContainerList} containers
 */
PurchaseShipmentRequest.prototype.containers = undefined;

/**
 * @member {module:shipping/js-client.shipping.model/LabelSpecification} labelSpecification
 */
PurchaseShipmentRequest.prototype.labelSpecification = undefined;


