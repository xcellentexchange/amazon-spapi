/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {InboundShipmentPlanRequestItemList} from './InboundShipmentPlanRequestItemList.js';
import {LabelPrepPreference} from './LabelPrepPreference.js';

/**
 * The CreateInboundShipmentPlanRequest model module.
 * @module fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/CreateInboundShipmentPlanRequest
 * @version v0
 */
export class CreateInboundShipmentPlanRequest {
  /**
   * Constructs a new <code>CreateInboundShipmentPlanRequest</code>.
   * The request schema for the createInboundShipmentPlan operation.
   * @alias module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/CreateInboundShipmentPlanRequest
   * @class
   * @param shipFromAddress {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Address} The address from which the inbound shipment will be sent.
   * @param labelPrepPreference {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/LabelPrepPreference} The seller's preference for label preparation for an inbound shipment.
   * @param inboundShipmentPlanRequestItems {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanRequestItemList} 
   */
  constructor(shipFromAddress, labelPrepPreference, inboundShipmentPlanRequestItems) {
    this.shipFromAddress = shipFromAddress;
    this.labelPrepPreference = labelPrepPreference;
    this.inboundShipmentPlanRequestItems = inboundShipmentPlanRequestItems;
  }

  /**
   * Constructs a <code>CreateInboundShipmentPlanRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/CreateInboundShipmentPlanRequest} obj Optional instance to populate.
   * @return {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/CreateInboundShipmentPlanRequest} The populated <code>CreateInboundShipmentPlanRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CreateInboundShipmentPlanRequest();
      if (data.hasOwnProperty('ShipFromAddress'))
        obj.shipFromAddress = Address.constructFromObject(data['ShipFromAddress']);
      if (data.hasOwnProperty('LabelPrepPreference'))
        obj.labelPrepPreference = LabelPrepPreference.constructFromObject(data['LabelPrepPreference']);
      if (data.hasOwnProperty('ShipToCountryCode'))
        obj.shipToCountryCode = ApiClient.convertToType(data['ShipToCountryCode'], 'String');
      if (data.hasOwnProperty('ShipToCountrySubdivisionCode'))
        obj.shipToCountrySubdivisionCode = ApiClient.convertToType(data['ShipToCountrySubdivisionCode'], 'String');
      if (data.hasOwnProperty('InboundShipmentPlanRequestItems'))
        obj.inboundShipmentPlanRequestItems = InboundShipmentPlanRequestItemList.constructFromObject(data['InboundShipmentPlanRequestItems']);
    }
    return obj;
  }
}

/**
 * The address from which the inbound shipment will be sent.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Address} shipFromAddress
 */
CreateInboundShipmentPlanRequest.prototype.shipFromAddress = undefined;

/**
 * The seller's preference for label preparation for an inbound shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/LabelPrepPreference} labelPrepPreference
 */
CreateInboundShipmentPlanRequest.prototype.labelPrepPreference = undefined;

/**
 * The two-character country code for the country where the inbound shipment is to be sent.  Note: Not required. Specifying both ShipToCountryCode and ShipToCountrySubdivisionCode returns an error.   Values:   ShipToCountryCode values for North America:  * CA – Canada  * MX - Mexico  * US - United States  ShipToCountryCode values for MCI sellers in Europe:  * DE – Germany  * ES – Spain  * FR – France  * GB – United Kingdom  * IT – Italy  Default: The country code for the seller's home marketplace.
 * @member {String} shipToCountryCode
 */
CreateInboundShipmentPlanRequest.prototype.shipToCountryCode = undefined;

/**
 * The two-character country code, followed by a dash and then up to three characters that represent the subdivision of the country where the inbound shipment is to be sent. For example, \"IN-MH\". In full ISO 3166-2 format.  Note: Not required. Specifying both ShipToCountryCode and ShipToCountrySubdivisionCode returns an error.
 * @member {String} shipToCountrySubdivisionCode
 */
CreateInboundShipmentPlanRequest.prototype.shipToCountrySubdivisionCode = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanRequestItemList} inboundShipmentPlanRequestItems
 */
CreateInboundShipmentPlanRequest.prototype.inboundShipmentPlanRequestItems = undefined;


