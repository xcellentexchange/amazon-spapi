/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ShipmentType} from './ShipmentType.js';
import {TransportDetailInput} from './TransportDetailInput.js';

/**
 * The PutTransportDetailsRequest model module.
 * @module fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PutTransportDetailsRequest
 * @version v0
 */
export class PutTransportDetailsRequest {
  /**
   * Constructs a new <code>PutTransportDetailsRequest</code>.
   * The request schema for a putTransportDetails operation.
   * @alias module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PutTransportDetailsRequest
   * @class
   * @param isPartnered {Boolean} Indicates whether a putTransportDetails request is for an Amazon-partnered carrier.
   * @param shipmentType {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/ShipmentType} 
   * @param transportDetails {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportDetailInput} Information required to create an Amazon-partnered carrier shipping estimate, or to alert the Amazon fulfillment center to the arrival of an inbound shipment by a non-Amazon-partnered carrier.
   */
  constructor(isPartnered, shipmentType, transportDetails) {
    this.isPartnered = isPartnered;
    this.shipmentType = shipmentType;
    this.transportDetails = transportDetails;
  }

  /**
   * Constructs a <code>PutTransportDetailsRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PutTransportDetailsRequest} obj Optional instance to populate.
   * @return {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PutTransportDetailsRequest} The populated <code>PutTransportDetailsRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PutTransportDetailsRequest();
      if (data.hasOwnProperty('IsPartnered'))
        obj.isPartnered = ApiClient.convertToType(data['IsPartnered'], 'Boolean');
      if (data.hasOwnProperty('ShipmentType'))
        obj.shipmentType = ShipmentType.constructFromObject(data['ShipmentType']);
      if (data.hasOwnProperty('TransportDetails'))
        obj.transportDetails = TransportDetailInput.constructFromObject(data['TransportDetails']);
    }
    return obj;
  }
}

/**
 * Indicates whether a putTransportDetails request is for an Amazon-partnered carrier.
 * @member {Boolean} isPartnered
 */
PutTransportDetailsRequest.prototype.isPartnered = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/ShipmentType} shipmentType
 */
PutTransportDetailsRequest.prototype.shipmentType = undefined;

/**
 * Information required to create an Amazon-partnered carrier shipping estimate, or to alert the Amazon fulfillment center to the arrival of an inbound shipment by a non-Amazon-partnered carrier.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportDetailInput} transportDetails
 */
PutTransportDetailsRequest.prototype.transportDetails = undefined;


