/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Address} from './Address.js';
import {BoxContentsFeeDetails} from './BoxContentsFeeDetails.js';
import {InboundShipmentPlanItemList} from './InboundShipmentPlanItemList.js';
import {LabelPrepType} from './LabelPrepType.js';

/**
 * The InboundShipmentPlan model module.
 * @module fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlan
 * @version v0
 */
export class InboundShipmentPlan {
  /**
   * Constructs a new <code>InboundShipmentPlan</code>.
   * Inbound shipment information used to create an inbound shipment. Returned by the createInboundShipmentPlan operation.
   * @alias module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlan
   * @class
   * @param shipmentId {String} A shipment identifier originally returned by the createInboundShipmentPlan operation.
   * @param destinationFulfillmentCenterId {String} An Amazon fulfillment center identifier created by Amazon.
   * @param shipToAddress {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Address} The address of the Amazon fulfillment center to which to ship the items.
   * @param labelPrepType {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/LabelPrepType} 
   * @param items {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanItemList} SKU and quantity information for the items in the shipment.
   */
  constructor(shipmentId, destinationFulfillmentCenterId, shipToAddress, labelPrepType, items) {
    this.shipmentId = shipmentId;
    this.destinationFulfillmentCenterId = destinationFulfillmentCenterId;
    this.shipToAddress = shipToAddress;
    this.labelPrepType = labelPrepType;
    this.items = items;
  }

  /**
   * Constructs a <code>InboundShipmentPlan</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlan} obj Optional instance to populate.
   * @return {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlan} The populated <code>InboundShipmentPlan</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new InboundShipmentPlan();
      if (data.hasOwnProperty('ShipmentId'))
        obj.shipmentId = ApiClient.convertToType(data['ShipmentId'], 'String');
      if (data.hasOwnProperty('DestinationFulfillmentCenterId'))
        obj.destinationFulfillmentCenterId = ApiClient.convertToType(data['DestinationFulfillmentCenterId'], 'String');
      if (data.hasOwnProperty('ShipToAddress'))
        obj.shipToAddress = Address.constructFromObject(data['ShipToAddress']);
      if (data.hasOwnProperty('LabelPrepType'))
        obj.labelPrepType = LabelPrepType.constructFromObject(data['LabelPrepType']);
      if (data.hasOwnProperty('Items'))
        obj.items = InboundShipmentPlanItemList.constructFromObject(data['Items']);
      if (data.hasOwnProperty('EstimatedBoxContentsFee'))
        obj.estimatedBoxContentsFee = BoxContentsFeeDetails.constructFromObject(data['EstimatedBoxContentsFee']);
    }
    return obj;
  }
}

/**
 * A shipment identifier originally returned by the createInboundShipmentPlan operation.
 * @member {String} shipmentId
 */
InboundShipmentPlan.prototype.shipmentId = undefined;

/**
 * An Amazon fulfillment center identifier created by Amazon.
 * @member {String} destinationFulfillmentCenterId
 */
InboundShipmentPlan.prototype.destinationFulfillmentCenterId = undefined;

/**
 * The address of the Amazon fulfillment center to which to ship the items.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Address} shipToAddress
 */
InboundShipmentPlan.prototype.shipToAddress = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/LabelPrepType} labelPrepType
 */
InboundShipmentPlan.prototype.labelPrepType = undefined;

/**
 * SKU and quantity information for the items in the shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanItemList} items
 */
InboundShipmentPlan.prototype.items = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/BoxContentsFeeDetails} estimatedBoxContentsFee
 */
InboundShipmentPlan.prototype.estimatedBoxContentsFee = undefined;


