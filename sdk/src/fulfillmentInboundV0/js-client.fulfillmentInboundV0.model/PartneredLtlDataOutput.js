/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Amount} from './Amount.js';
import {Contact} from './Contact.js';
import {DateStringType} from './DateStringType.js';
import {PalletList} from './PalletList.js';
import {PartneredEstimate} from './PartneredEstimate.js';
import {SellerFreightClass} from './SellerFreightClass.js';
import {UnsignedIntType} from './UnsignedIntType.js';
import {Weight} from './Weight.js';

/**
 * The PartneredLtlDataOutput model module.
 * @module fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PartneredLtlDataOutput
 * @version v0
 */
export class PartneredLtlDataOutput {
  /**
   * Constructs a new <code>PartneredLtlDataOutput</code>.
   * Information returned by Amazon about a Less Than Truckload/Full Truckload (LTL/FTL) shipment by an Amazon-partnered carrier.
   * @alias module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PartneredLtlDataOutput
   * @class
   * @param contact {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Contact} Contact information for the person in the seller's organization who is responsible for the shipment. Used by the carrier if they have questions about the shipment.
   * @param boxCount {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/UnsignedIntType} The number of boxes in the shipment.
   * @param freightReadyDate {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/DateStringType} The date on which the shipment is ready for carrier pickup. Must be in YYYY-MM-DD format.
   * @param palletList {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PalletList} 
   * @param totalWeight {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Weight} The total weight of the shipment.
   * @param previewPickupDate {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/DateStringType} The estimated date that the shipment will be picked up by the carrier, in YYYY-MM-DD format.
   * @param previewDeliveryDate {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/DateStringType} The estimated date that the shipment will be delivered to an Amazon fulfillment center, in YYYY-MM-DD format.
   * @param previewFreightClass {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/SellerFreightClass} The freight class of the shipment as estimated by Amazon if you did not include a freight class when you called the putTransportDetails operation.
   * @param amazonReferenceId {String} A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment.
   * @param isBillOfLadingAvailable {Boolean} Indicates whether the bill of lading for the shipment is available.
   * @param carrierName {String} The carrier for the inbound shipment.
   */
  constructor(contact, boxCount, freightReadyDate, palletList, totalWeight, previewPickupDate, previewDeliveryDate, previewFreightClass, amazonReferenceId, isBillOfLadingAvailable, carrierName) {
    this.contact = contact;
    this.boxCount = boxCount;
    this.freightReadyDate = freightReadyDate;
    this.palletList = palletList;
    this.totalWeight = totalWeight;
    this.previewPickupDate = previewPickupDate;
    this.previewDeliveryDate = previewDeliveryDate;
    this.previewFreightClass = previewFreightClass;
    this.amazonReferenceId = amazonReferenceId;
    this.isBillOfLadingAvailable = isBillOfLadingAvailable;
    this.carrierName = carrierName;
  }

  /**
   * Constructs a <code>PartneredLtlDataOutput</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PartneredLtlDataOutput} obj Optional instance to populate.
   * @return {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PartneredLtlDataOutput} The populated <code>PartneredLtlDataOutput</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new PartneredLtlDataOutput();
      if (data.hasOwnProperty('Contact'))
        obj.contact = Contact.constructFromObject(data['Contact']);
      if (data.hasOwnProperty('BoxCount'))
        obj.boxCount = UnsignedIntType.constructFromObject(data['BoxCount']);
      if (data.hasOwnProperty('SellerFreightClass'))
        obj.sellerFreightClass = SellerFreightClass.constructFromObject(data['SellerFreightClass']);
      if (data.hasOwnProperty('FreightReadyDate'))
        obj.freightReadyDate = DateStringType.constructFromObject(data['FreightReadyDate']);
      if (data.hasOwnProperty('PalletList'))
        obj.palletList = PalletList.constructFromObject(data['PalletList']);
      if (data.hasOwnProperty('TotalWeight'))
        obj.totalWeight = Weight.constructFromObject(data['TotalWeight']);
      if (data.hasOwnProperty('SellerDeclaredValue'))
        obj.sellerDeclaredValue = Amount.constructFromObject(data['SellerDeclaredValue']);
      if (data.hasOwnProperty('AmazonCalculatedValue'))
        obj.amazonCalculatedValue = Amount.constructFromObject(data['AmazonCalculatedValue']);
      if (data.hasOwnProperty('PreviewPickupDate'))
        obj.previewPickupDate = DateStringType.constructFromObject(data['PreviewPickupDate']);
      if (data.hasOwnProperty('PreviewDeliveryDate'))
        obj.previewDeliveryDate = DateStringType.constructFromObject(data['PreviewDeliveryDate']);
      if (data.hasOwnProperty('PreviewFreightClass'))
        obj.previewFreightClass = SellerFreightClass.constructFromObject(data['PreviewFreightClass']);
      if (data.hasOwnProperty('AmazonReferenceId'))
        obj.amazonReferenceId = ApiClient.convertToType(data['AmazonReferenceId'], 'String');
      if (data.hasOwnProperty('IsBillOfLadingAvailable'))
        obj.isBillOfLadingAvailable = ApiClient.convertToType(data['IsBillOfLadingAvailable'], 'Boolean');
      if (data.hasOwnProperty('PartneredEstimate'))
        obj.partneredEstimate = PartneredEstimate.constructFromObject(data['PartneredEstimate']);
      if (data.hasOwnProperty('CarrierName'))
        obj.carrierName = ApiClient.convertToType(data['CarrierName'], 'String');
    }
    return obj;
  }
}

/**
 * Contact information for the person in the seller's organization who is responsible for the shipment. Used by the carrier if they have questions about the shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Contact} contact
 */
PartneredLtlDataOutput.prototype.contact = undefined;

/**
 * The number of boxes in the shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/UnsignedIntType} boxCount
 */
PartneredLtlDataOutput.prototype.boxCount = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/SellerFreightClass} sellerFreightClass
 */
PartneredLtlDataOutput.prototype.sellerFreightClass = undefined;

/**
 * The date on which the shipment is ready for carrier pickup. Must be in YYYY-MM-DD format.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/DateStringType} freightReadyDate
 */
PartneredLtlDataOutput.prototype.freightReadyDate = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PalletList} palletList
 */
PartneredLtlDataOutput.prototype.palletList = undefined;

/**
 * The total weight of the shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Weight} totalWeight
 */
PartneredLtlDataOutput.prototype.totalWeight = undefined;

/**
 * Your declaration of the total value of the inventory in the shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Amount} sellerDeclaredValue
 */
PartneredLtlDataOutput.prototype.sellerDeclaredValue = undefined;

/**
 * Estimate by Amazon of the total value of the inventory in the shipment.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Amount} amazonCalculatedValue
 */
PartneredLtlDataOutput.prototype.amazonCalculatedValue = undefined;

/**
 * The estimated date that the shipment will be picked up by the carrier, in YYYY-MM-DD format.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/DateStringType} previewPickupDate
 */
PartneredLtlDataOutput.prototype.previewPickupDate = undefined;

/**
 * The estimated date that the shipment will be delivered to an Amazon fulfillment center, in YYYY-MM-DD format.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/DateStringType} previewDeliveryDate
 */
PartneredLtlDataOutput.prototype.previewDeliveryDate = undefined;

/**
 * The freight class of the shipment as estimated by Amazon if you did not include a freight class when you called the putTransportDetails operation.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/SellerFreightClass} previewFreightClass
 */
PartneredLtlDataOutput.prototype.previewFreightClass = undefined;

/**
 * A unique identifier created by Amazon that identifies this Amazon-partnered, Less Than Truckload/Full Truckload (LTL/FTL) shipment.
 * @member {String} amazonReferenceId
 */
PartneredLtlDataOutput.prototype.amazonReferenceId = undefined;

/**
 * Indicates whether the bill of lading for the shipment is available.
 * @member {Boolean} isBillOfLadingAvailable
 */
PartneredLtlDataOutput.prototype.isBillOfLadingAvailable = undefined;

/**
 * The estimated shipping cost using an Amazon-partnered carrier.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PartneredEstimate} partneredEstimate
 */
PartneredLtlDataOutput.prototype.partneredEstimate = undefined;

/**
 * The carrier for the inbound shipment.
 * @member {String} carrierName
 */
PartneredLtlDataOutput.prototype.carrierName = undefined;


