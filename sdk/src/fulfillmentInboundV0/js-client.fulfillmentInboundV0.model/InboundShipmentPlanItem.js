/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {PrepDetailsList} from './PrepDetailsList.js';
import {Quantity} from './Quantity.js';

/**
 * The InboundShipmentPlanItem model module.
 * @module fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanItem
 * @version v0
 */
export class InboundShipmentPlanItem {
  /**
   * Constructs a new <code>InboundShipmentPlanItem</code>.
   * Item information used to create an inbound shipment. Returned by the createInboundShipmentPlan operation.
   * @alias module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanItem
   * @class
   * @param sellerSKU {String} The seller SKU of the item.
   * @param fulfillmentNetworkSKU {String} Amazon's fulfillment network SKU of the item.
   * @param quantity {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Quantity} The item quantity that you are shipping.
   */
  constructor(sellerSKU, fulfillmentNetworkSKU, quantity) {
    this.sellerSKU = sellerSKU;
    this.fulfillmentNetworkSKU = fulfillmentNetworkSKU;
    this.quantity = quantity;
  }

  /**
   * Constructs a <code>InboundShipmentPlanItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanItem} obj Optional instance to populate.
   * @return {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/InboundShipmentPlanItem} The populated <code>InboundShipmentPlanItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new InboundShipmentPlanItem();
      if (data.hasOwnProperty('SellerSKU'))
        obj.sellerSKU = ApiClient.convertToType(data['SellerSKU'], 'String');
      if (data.hasOwnProperty('FulfillmentNetworkSKU'))
        obj.fulfillmentNetworkSKU = ApiClient.convertToType(data['FulfillmentNetworkSKU'], 'String');
      if (data.hasOwnProperty('Quantity'))
        obj.quantity = Quantity.constructFromObject(data['Quantity']);
      if (data.hasOwnProperty('PrepDetailsList'))
        obj.prepDetailsList = PrepDetailsList.constructFromObject(data['PrepDetailsList']);
    }
    return obj;
  }
}

/**
 * The seller SKU of the item.
 * @member {String} sellerSKU
 */
InboundShipmentPlanItem.prototype.sellerSKU = undefined;

/**
 * Amazon's fulfillment network SKU of the item.
 * @member {String} fulfillmentNetworkSKU
 */
InboundShipmentPlanItem.prototype.fulfillmentNetworkSKU = undefined;

/**
 * The item quantity that you are shipping.
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/Quantity} quantity
 */
InboundShipmentPlanItem.prototype.quantity = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/PrepDetailsList} prepDetailsList
 */
InboundShipmentPlanItem.prototype.prepDetailsList = undefined;


