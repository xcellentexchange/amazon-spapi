/*
 * Selling Partner API for Fulfillment Inbound
 * The Selling Partner API for Fulfillment Inbound lets you create applications that create and update inbound shipments of inventory to Amazon's fulfillment network.
 *
 * OpenAPI spec version: v0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {TransportDetailOutput} from './TransportDetailOutput.js';
import {TransportHeader} from './TransportHeader.js';
import {TransportResult} from './TransportResult.js';

/**
 * The TransportContent model module.
 * @module fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportContent
 * @version v0
 */
export class TransportContent {
  /**
   * Constructs a new <code>TransportContent</code>.
   * Inbound shipment information, including carrier details, shipment status, and the workflow status for a request for shipment with an Amazon-partnered carrier.
   * @alias module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportContent
   * @class
   * @param transportHeader {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportHeader} 
   * @param transportDetails {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportDetailOutput} 
   * @param transportResult {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportResult} 
   */
  constructor(transportHeader, transportDetails, transportResult) {
    this.transportHeader = transportHeader;
    this.transportDetails = transportDetails;
    this.transportResult = transportResult;
  }

  /**
   * Constructs a <code>TransportContent</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportContent} obj Optional instance to populate.
   * @return {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportContent} The populated <code>TransportContent</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new TransportContent();
      if (data.hasOwnProperty('TransportHeader'))
        obj.transportHeader = TransportHeader.constructFromObject(data['TransportHeader']);
      if (data.hasOwnProperty('TransportDetails'))
        obj.transportDetails = TransportDetailOutput.constructFromObject(data['TransportDetails']);
      if (data.hasOwnProperty('TransportResult'))
        obj.transportResult = TransportResult.constructFromObject(data['TransportResult']);
    }
    return obj;
  }
}

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportHeader} transportHeader
 */
TransportContent.prototype.transportHeader = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportDetailOutput} transportDetails
 */
TransportContent.prototype.transportDetails = undefined;

/**
 * @member {module:fulfillmentInboundV0/js-client.fulfillmentInboundV0.model/TransportResult} transportResult
 */
TransportContent.prototype.transportResult = undefined;


