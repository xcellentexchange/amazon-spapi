/*
 * Selling Partner API for Retail Procurement Payments
 * The Selling Partner API for Retail Procurement Payments provides programmatic access to vendors payments data.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {AdditionalDetails} from './AdditionalDetails.js';
import {AllowanceDetails} from './AllowanceDetails.js';
import {ChargeDetails} from './ChargeDetails.js';
import {InvoiceItem} from './InvoiceItem.js';
import {Money} from './Money.js';
import {PartyIdentification} from './PartyIdentification.js';
import {PaymentTerms} from './PaymentTerms.js';
import {TaxDetails} from './TaxDetails.js';

/**
 * The Invoice model module.
 * @module vendorInvoices/js-client.vendorInvoices.model/Invoice
 * @version v1
 */
export class Invoice {
  /**
   * Constructs a new <code>Invoice</code>.
   * Represents an invoice or credit note document with details about the transaction, parties involved, and line items.
   * @alias module:vendorInvoices/js-client.vendorInvoices.model/Invoice
   * @class
   * @param invoiceType {module:vendorInvoices/js-client.vendorInvoices.model/Invoice.InvoiceTypeEnum} Identifies the type of invoice.
   * @param id {String} Unique number relating to the charges defined in this document. This will be invoice number if the document type is Invoice or CreditNote number if the document type is Credit Note. Failure to provide this reference will result in a rejection.
   * @param _date {Date} Date when the invoice/credit note information was generated in the origin's accounting system. The invoice date should be on or after the purchase order creation date.
   * @param remitToParty {module:vendorInvoices/js-client.vendorInvoices.model/PartyIdentification} Name, address, and tax details of the party receiving the payment of this invoice.
   * @param invoiceTotal {module:vendorInvoices/js-client.vendorInvoices.model/Money} Total monetary amount charged in the invoice or full value of credit note to be paid including all relevant taxes. It is the total amount of invoice (including charges, less allowances) before terms discount (if discount is applicable).
   */
  constructor(invoiceType, id, _date, remitToParty, invoiceTotal) {
    this.invoiceType = invoiceType;
    this.id = id;
    this._date = _date;
    this.remitToParty = remitToParty;
    this.invoiceTotal = invoiceTotal;
  }

  /**
   * Constructs a <code>Invoice</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorInvoices/js-client.vendorInvoices.model/Invoice} obj Optional instance to populate.
   * @return {module:vendorInvoices/js-client.vendorInvoices.model/Invoice} The populated <code>Invoice</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new Invoice();
      if (data.hasOwnProperty('invoiceType'))
        obj.invoiceType = ApiClient.convertToType(data['invoiceType'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('referenceNumber'))
        obj.referenceNumber = ApiClient.convertToType(data['referenceNumber'], 'String');
      if (data.hasOwnProperty('date'))
        obj._date = 'Date'.constructFromObject(data['date']);
      if (data.hasOwnProperty('remitToParty'))
        obj.remitToParty = PartyIdentification.constructFromObject(data['remitToParty']);
      if (data.hasOwnProperty('shipToParty'))
        obj.shipToParty = PartyIdentification.constructFromObject(data['shipToParty']);
      if (data.hasOwnProperty('shipFromParty'))
        obj.shipFromParty = PartyIdentification.constructFromObject(data['shipFromParty']);
      if (data.hasOwnProperty('billToParty'))
        obj.billToParty = PartyIdentification.constructFromObject(data['billToParty']);
      if (data.hasOwnProperty('paymentTerms'))
        obj.paymentTerms = PaymentTerms.constructFromObject(data['paymentTerms']);
      if (data.hasOwnProperty('invoiceTotal'))
        obj.invoiceTotal = Money.constructFromObject(data['invoiceTotal']);
      if (data.hasOwnProperty('taxDetails'))
        obj.taxDetails = ApiClient.convertToType(data['taxDetails'], [TaxDetails]);
      if (data.hasOwnProperty('additionalDetails'))
        obj.additionalDetails = ApiClient.convertToType(data['additionalDetails'], [AdditionalDetails]);
      if (data.hasOwnProperty('chargeDetails'))
        obj.chargeDetails = ApiClient.convertToType(data['chargeDetails'], [ChargeDetails]);
      if (data.hasOwnProperty('allowanceDetails'))
        obj.allowanceDetails = ApiClient.convertToType(data['allowanceDetails'], [AllowanceDetails]);
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [InvoiceItem]);
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>invoiceType</code> property.
 * @enum {String}
 * @readonly
 */
Invoice.InvoiceTypeEnum = {
  /**
   * value: "Invoice"
   * @const
   */
  invoice: "Invoice",

  /**
   * value: "CreditNote"
   * @const
   */
  creditNote: "CreditNote"
};

/**
 * Identifies the type of invoice.
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/Invoice.InvoiceTypeEnum} invoiceType
 */
Invoice.prototype.invoiceType = undefined;

/**
 * Unique number relating to the charges defined in this document. This will be invoice number if the document type is Invoice or CreditNote number if the document type is Credit Note. Failure to provide this reference will result in a rejection.
 * @member {String} id
 */
Invoice.prototype.id = undefined;

/**
 * An additional unique reference number used for regulatory or other purposes.
 * @member {String} referenceNumber
 */
Invoice.prototype.referenceNumber = undefined;

/**
 * Date when the invoice/credit note information was generated in the origin's accounting system. The invoice date should be on or after the purchase order creation date.
 * @member {Date} _date
 */
Invoice.prototype._date = undefined;

/**
 * Name, address, and tax details of the party receiving the payment of this invoice.
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/PartyIdentification} remitToParty
 */
Invoice.prototype.remitToParty = undefined;

/**
 * Name, address, and tax details of the party receiving a shipment of products.
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/PartyIdentification} shipToParty
 */
Invoice.prototype.shipToParty = undefined;

/**
 * Name, address, and tax details of the party sending a shipment of products.
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/PartyIdentification} shipFromParty
 */
Invoice.prototype.shipFromParty = undefined;

/**
 * Name, address, and tax details of the party to whom this invoice is issued.
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/PartyIdentification} billToParty
 */
Invoice.prototype.billToParty = undefined;

/**
 * The payment terms for the invoice.
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/PaymentTerms} paymentTerms
 */
Invoice.prototype.paymentTerms = undefined;

/**
 * Total monetary amount charged in the invoice or full value of credit note to be paid including all relevant taxes. It is the total amount of invoice (including charges, less allowances) before terms discount (if discount is applicable).
 * @member {module:vendorInvoices/js-client.vendorInvoices.model/Money} invoiceTotal
 */
Invoice.prototype.invoiceTotal = undefined;

/**
 * Total tax amount details for all line items.
 * @member {Array.<module:vendorInvoices/js-client.vendorInvoices.model/TaxDetails>} taxDetails
 */
Invoice.prototype.taxDetails = undefined;

/**
 * Additional details provided by the selling party, for tax related or other purposes.
 * @member {Array.<module:vendorInvoices/js-client.vendorInvoices.model/AdditionalDetails>} additionalDetails
 */
Invoice.prototype.additionalDetails = undefined;

/**
 * Total charge amount details for all line items.
 * @member {Array.<module:vendorInvoices/js-client.vendorInvoices.model/ChargeDetails>} chargeDetails
 */
Invoice.prototype.chargeDetails = undefined;

/**
 * Total allowance amount details for all line items.
 * @member {Array.<module:vendorInvoices/js-client.vendorInvoices.model/AllowanceDetails>} allowanceDetails
 */
Invoice.prototype.allowanceDetails = undefined;

/**
 * The list of invoice items.
 * @member {Array.<module:vendorInvoices/js-client.vendorInvoices.model/InvoiceItem>} items
 */
Invoice.prototype.items = undefined;


