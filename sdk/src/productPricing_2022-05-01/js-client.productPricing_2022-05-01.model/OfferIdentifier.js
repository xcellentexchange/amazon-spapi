/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-05-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Asin} from './Asin.js';
import {FulfillmentType} from './FulfillmentType.js';
import {MarketplaceId} from './MarketplaceId.js';

/**
 * The OfferIdentifier model module.
 * @module productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/OfferIdentifier
 * @version 2022-05-01
 */
export class OfferIdentifier {
  /**
   * Constructs a new <code>OfferIdentifier</code>.
   * Identifies an offer from a particular seller on an ASIN.
   * @alias module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/OfferIdentifier
   * @class
   * @param marketplaceId {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/MarketplaceId} A marketplace identifier.
   * @param asin {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/Asin} The Amazon identifier for the item.
   */
  constructor(marketplaceId, asin) {
    this.marketplaceId = marketplaceId;
    this.asin = asin;
  }

  /**
   * Constructs a <code>OfferIdentifier</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/OfferIdentifier} obj Optional instance to populate.
   * @return {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/OfferIdentifier} The populated <code>OfferIdentifier</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new OfferIdentifier();
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = MarketplaceId.constructFromObject(data['marketplaceId']);
      if (data.hasOwnProperty('sellerId'))
        obj.sellerId = ApiClient.convertToType(data['sellerId'], 'String');
      if (data.hasOwnProperty('sku'))
        obj.sku = ApiClient.convertToType(data['sku'], 'String');
      if (data.hasOwnProperty('asin'))
        obj.asin = Asin.constructFromObject(data['asin']);
      if (data.hasOwnProperty('fulfillmentType'))
        obj.fulfillmentType = FulfillmentType.constructFromObject(data['fulfillmentType']);
    }
    return obj;
  }
}

/**
 * A marketplace identifier.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/MarketplaceId} marketplaceId
 */
OfferIdentifier.prototype.marketplaceId = undefined;

/**
 * The seller identifier for the offer.
 * @member {String} sellerId
 */
OfferIdentifier.prototype.sellerId = undefined;

/**
 * The seller stock keeping unit (SKU) of the item. This will only be present for the target offer, which belongs to the requesting seller.
 * @member {String} sku
 */
OfferIdentifier.prototype.sku = undefined;

/**
 * The Amazon identifier for the item.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/Asin} asin
 */
OfferIdentifier.prototype.asin = undefined;

/**
 * The fulfillment type for the offer.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/FulfillmentType} fulfillmentType
 */
OfferIdentifier.prototype.fulfillmentType = undefined;


