/*
 * Selling Partner API for Pricing
 * The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer pricing information for Amazon Marketplace products.  For more information, refer to the [Product Pricing v2022-05-01 Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/product-pricing-api-v2022-05-01-use-case-guide).
 *
 * OpenAPI spec version: 2022-05-01
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {Asin} from './Asin.js';
import {CompetitiveSummaryIncludedData} from './CompetitiveSummaryIncludedData.js';
import {HttpMethod} from './HttpMethod.js';
import {HttpUri} from './HttpUri.js';
import {LowestPricedOffersInput} from './LowestPricedOffersInput.js';
import {MarketplaceId} from './MarketplaceId.js';

/**
 * The CompetitiveSummaryRequest model module.
 * @module productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/CompetitiveSummaryRequest
 * @version 2022-05-01
 */
export class CompetitiveSummaryRequest {
  /**
   * Constructs a new <code>CompetitiveSummaryRequest</code>.
   * An individual `competitiveSummary` request for an ASIN and `marketplaceId`.
   * @alias module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/CompetitiveSummaryRequest
   * @class
   * @param asin {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/Asin} The Amazon identifier for the item.
   * @param marketplaceId {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/MarketplaceId} A marketplace identifier.
   * @param includedData {Array.<module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/CompetitiveSummaryIncludedData>} The list of requested competitive pricing data for the product.
   * @param method {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/HttpMethod} HTTP method type
   * @param uri {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/HttpUri} The URI associated with the individual APIs being called as part of the batch request. For `getCompetitiveSummary`, this should be `/products/pricing/2022-05-01/items/competitiveSummary`.
   */
  constructor(asin, marketplaceId, includedData, method, uri) {
    this.asin = asin;
    this.marketplaceId = marketplaceId;
    this.includedData = includedData;
    this.method = method;
    this.uri = uri;
  }

  /**
   * Constructs a <code>CompetitiveSummaryRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/CompetitiveSummaryRequest} obj Optional instance to populate.
   * @return {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/CompetitiveSummaryRequest} The populated <code>CompetitiveSummaryRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new CompetitiveSummaryRequest();
      if (data.hasOwnProperty('asin'))
        obj.asin = Asin.constructFromObject(data['asin']);
      if (data.hasOwnProperty('marketplaceId'))
        obj.marketplaceId = MarketplaceId.constructFromObject(data['marketplaceId']);
      if (data.hasOwnProperty('includedData'))
        obj.includedData = ApiClient.convertToType(data['includedData'], [CompetitiveSummaryIncludedData]);
      if (data.hasOwnProperty('lowestPricedOffersInputs'))
        obj.lowestPricedOffersInputs = ApiClient.convertToType(data['lowestPricedOffersInputs'], [LowestPricedOffersInput]);
      if (data.hasOwnProperty('method'))
        obj.method = HttpMethod.constructFromObject(data['method']);
      if (data.hasOwnProperty('uri'))
        obj.uri = HttpUri.constructFromObject(data['uri']);
    }
    return obj;
  }
}

/**
 * The Amazon identifier for the item.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/Asin} asin
 */
CompetitiveSummaryRequest.prototype.asin = undefined;

/**
 * A marketplace identifier.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/MarketplaceId} marketplaceId
 */
CompetitiveSummaryRequest.prototype.marketplaceId = undefined;

/**
 * The list of requested competitive pricing data for the product.
 * @member {Array.<module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/CompetitiveSummaryIncludedData>} includedData
 */
CompetitiveSummaryRequest.prototype.includedData = undefined;

/**
 * The list of `lowestPricedOffersInput` parameters used to build the `lowestPricedOffers` in the response. This attribute is valid only if `lowestPricedOffers` is requested in `includedData`.
 * @member {Array.<module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/LowestPricedOffersInput>} lowestPricedOffersInputs
 */
CompetitiveSummaryRequest.prototype.lowestPricedOffersInputs = undefined;

/**
 * HTTP method type
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/HttpMethod} method
 */
CompetitiveSummaryRequest.prototype.method = undefined;

/**
 * The URI associated with the individual APIs being called as part of the batch request. For `getCompetitiveSummary`, this should be `/products/pricing/2022-05-01/items/competitiveSummary`.
 * @member {module:productPricing_2022-05-01/js-client.productPricing_2022-05-01.model/HttpUri} uri
 */
CompetitiveSummaryRequest.prototype.uri = undefined;


