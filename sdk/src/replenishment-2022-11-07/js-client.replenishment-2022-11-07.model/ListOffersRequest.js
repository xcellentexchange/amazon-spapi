/*
 * Selling Partner API for Replenishment
 * The Selling Partner API for Replenishment (Replenishment API) provides programmatic access to replenishment program metrics and offers. These programs provide recurring delivery of any replenishable item at a frequency chosen by the customer.  The Replenishment API is available worldwide wherever Amazon Subscribe & Save is available or is supported. The API is available to vendors and FBA selling partners.
 *
 * OpenAPI spec version: 2022-11-07
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ListOffersRequestFilters} from './ListOffersRequestFilters.js';
import {ListOffersRequestPagination} from './ListOffersRequestPagination.js';
import {ListOffersRequestSort} from './ListOffersRequestSort.js';

/**
 * The ListOffersRequest model module.
 * @module replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequest
 * @version 2022-11-07
 */
export class ListOffersRequest {
  /**
   * Constructs a new <code>ListOffersRequest</code>.
   * The request body for the `listOffers` operation.
   * @alias module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequest
   * @class
   * @param pagination {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequestPagination} Use these parameters to paginate through the response.
   * @param filters {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequestFilters} Use these parameters to filter results. Any result must match all provided parameters. For any parameter that is an array, the result must match at least one element in the provided array.
   */
  constructor(pagination, filters) {
    this.pagination = pagination;
    this.filters = filters;
  }

  /**
   * Constructs a <code>ListOffersRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequest} obj Optional instance to populate.
   * @return {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequest} The populated <code>ListOffersRequest</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ListOffersRequest();
      if (data.hasOwnProperty('pagination'))
        obj.pagination = ListOffersRequestPagination.constructFromObject(data['pagination']);
      if (data.hasOwnProperty('filters'))
        obj.filters = ListOffersRequestFilters.constructFromObject(data['filters']);
      if (data.hasOwnProperty('sort'))
        obj.sort = ListOffersRequestSort.constructFromObject(data['sort']);
    }
    return obj;
  }
}

/**
 * Use these parameters to paginate through the response.
 * @member {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequestPagination} pagination
 */
ListOffersRequest.prototype.pagination = undefined;

/**
 * Use these parameters to filter results. Any result must match all provided parameters. For any parameter that is an array, the result must match at least one element in the provided array.
 * @member {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequestFilters} filters
 */
ListOffersRequest.prototype.filters = undefined;

/**
 * Use these parameters to sort the response.
 * @member {module:replenishment-2022-11-07/js-client.replenishment-2022-11-07.model/ListOffersRequestSort} sort
 */
ListOffersRequest.prototype.sort = undefined;


