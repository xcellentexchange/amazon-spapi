/*
 * Selling Partner API for FBA Inventory
 * The Selling Partner API for FBA Inventory lets you programmatically retrieve information about inventory in Amazon's fulfillment network.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The UnfulfillableQuantity model module.
 * @module fbaInventory/js-client.fbaInventory.model/UnfulfillableQuantity
 * @version v1
 */
export class UnfulfillableQuantity {
  /**
   * Constructs a new <code>UnfulfillableQuantity</code>.
   * The quantity of unfulfillable inventory.
   * @alias module:fbaInventory/js-client.fbaInventory.model/UnfulfillableQuantity
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>UnfulfillableQuantity</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:fbaInventory/js-client.fbaInventory.model/UnfulfillableQuantity} obj Optional instance to populate.
   * @return {module:fbaInventory/js-client.fbaInventory.model/UnfulfillableQuantity} The populated <code>UnfulfillableQuantity</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new UnfulfillableQuantity();
      if (data.hasOwnProperty('totalUnfulfillableQuantity'))
        obj.totalUnfulfillableQuantity = ApiClient.convertToType(data['totalUnfulfillableQuantity'], 'Number');
      if (data.hasOwnProperty('customerDamagedQuantity'))
        obj.customerDamagedQuantity = ApiClient.convertToType(data['customerDamagedQuantity'], 'Number');
      if (data.hasOwnProperty('warehouseDamagedQuantity'))
        obj.warehouseDamagedQuantity = ApiClient.convertToType(data['warehouseDamagedQuantity'], 'Number');
      if (data.hasOwnProperty('distributorDamagedQuantity'))
        obj.distributorDamagedQuantity = ApiClient.convertToType(data['distributorDamagedQuantity'], 'Number');
      if (data.hasOwnProperty('carrierDamagedQuantity'))
        obj.carrierDamagedQuantity = ApiClient.convertToType(data['carrierDamagedQuantity'], 'Number');
      if (data.hasOwnProperty('defectiveQuantity'))
        obj.defectiveQuantity = ApiClient.convertToType(data['defectiveQuantity'], 'Number');
      if (data.hasOwnProperty('expiredQuantity'))
        obj.expiredQuantity = ApiClient.convertToType(data['expiredQuantity'], 'Number');
    }
    return obj;
  }
}

/**
 * The total number of units in Amazon's fulfillment network in unsellable condition.
 * @member {Number} totalUnfulfillableQuantity
 */
UnfulfillableQuantity.prototype.totalUnfulfillableQuantity = undefined;

/**
 * The number of units in customer damaged disposition.
 * @member {Number} customerDamagedQuantity
 */
UnfulfillableQuantity.prototype.customerDamagedQuantity = undefined;

/**
 * The number of units in warehouse damaged disposition.
 * @member {Number} warehouseDamagedQuantity
 */
UnfulfillableQuantity.prototype.warehouseDamagedQuantity = undefined;

/**
 * The number of units in distributor damaged disposition.
 * @member {Number} distributorDamagedQuantity
 */
UnfulfillableQuantity.prototype.distributorDamagedQuantity = undefined;

/**
 * The number of units in carrier damaged disposition.
 * @member {Number} carrierDamagedQuantity
 */
UnfulfillableQuantity.prototype.carrierDamagedQuantity = undefined;

/**
 * The number of units in defective disposition.
 * @member {Number} defectiveQuantity
 */
UnfulfillableQuantity.prototype.defectiveQuantity = undefined;

/**
 * The number of units in expired disposition.
 * @member {Number} expiredQuantity
 */
UnfulfillableQuantity.prototype.expiredQuantity = undefined;


