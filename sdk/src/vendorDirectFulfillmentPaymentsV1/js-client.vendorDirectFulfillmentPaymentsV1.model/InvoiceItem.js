/*
 * Selling Partner API for Direct Fulfillment Payments
 * The Selling Partner API for Direct Fulfillment Payments provides programmatic access to a direct fulfillment vendor's invoice data.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ChargeDetails} from './ChargeDetails.js';
import {ItemQuantity} from './ItemQuantity.js';
import {Money} from './Money.js';
import {TaxDetail} from './TaxDetail.js';

/**
 * The InvoiceItem model module.
 * @module vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/InvoiceItem
 * @version v1
 */
export class InvoiceItem {
  /**
   * Constructs a new <code>InvoiceItem</code>.
   * Details of the invoice items.
   * @alias module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/InvoiceItem
   * @class
   * @param itemSequenceNumber {String} Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on.
   * @param invoicedQuantity {module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/ItemQuantity} Item quantity invoiced.
   * @param netCost {module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/Money} Net price (before tax) to vendor with currency details.
   * @param purchaseOrderNumber {String} The purchase order number for this order. Formatting Notes: 8-character alpha-numeric code.
   */
  constructor(itemSequenceNumber, invoicedQuantity, netCost, purchaseOrderNumber) {
    this.itemSequenceNumber = itemSequenceNumber;
    this.invoicedQuantity = invoicedQuantity;
    this.netCost = netCost;
    this.purchaseOrderNumber = purchaseOrderNumber;
  }

  /**
   * Constructs a <code>InvoiceItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/InvoiceItem} obj Optional instance to populate.
   * @return {module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/InvoiceItem} The populated <code>InvoiceItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new InvoiceItem();
      if (data.hasOwnProperty('itemSequenceNumber'))
        obj.itemSequenceNumber = ApiClient.convertToType(data['itemSequenceNumber'], 'String');
      if (data.hasOwnProperty('buyerProductIdentifier'))
        obj.buyerProductIdentifier = ApiClient.convertToType(data['buyerProductIdentifier'], 'String');
      if (data.hasOwnProperty('vendorProductIdentifier'))
        obj.vendorProductIdentifier = ApiClient.convertToType(data['vendorProductIdentifier'], 'String');
      if (data.hasOwnProperty('invoicedQuantity'))
        obj.invoicedQuantity = ItemQuantity.constructFromObject(data['invoicedQuantity']);
      if (data.hasOwnProperty('netCost'))
        obj.netCost = Money.constructFromObject(data['netCost']);
      if (data.hasOwnProperty('purchaseOrderNumber'))
        obj.purchaseOrderNumber = ApiClient.convertToType(data['purchaseOrderNumber'], 'String');
      if (data.hasOwnProperty('vendorOrderNumber'))
        obj.vendorOrderNumber = ApiClient.convertToType(data['vendorOrderNumber'], 'String');
      if (data.hasOwnProperty('hsnCode'))
        obj.hsnCode = ApiClient.convertToType(data['hsnCode'], 'String');
      if (data.hasOwnProperty('taxDetails'))
        obj.taxDetails = ApiClient.convertToType(data['taxDetails'], [TaxDetail]);
      if (data.hasOwnProperty('chargeDetails'))
        obj.chargeDetails = ApiClient.convertToType(data['chargeDetails'], [ChargeDetails]);
    }
    return obj;
  }
}

/**
 * Numbering of the item on the purchase order. The first item will be 1, the second 2, and so on.
 * @member {String} itemSequenceNumber
 */
InvoiceItem.prototype.itemSequenceNumber = undefined;

/**
 * Buyer's standard identification number (ASIN) of an item.
 * @member {String} buyerProductIdentifier
 */
InvoiceItem.prototype.buyerProductIdentifier = undefined;

/**
 * The vendor selected product identification of the item.
 * @member {String} vendorProductIdentifier
 */
InvoiceItem.prototype.vendorProductIdentifier = undefined;

/**
 * Item quantity invoiced.
 * @member {module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/ItemQuantity} invoicedQuantity
 */
InvoiceItem.prototype.invoicedQuantity = undefined;

/**
 * Net price (before tax) to vendor with currency details.
 * @member {module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/Money} netCost
 */
InvoiceItem.prototype.netCost = undefined;

/**
 * The purchase order number for this order. Formatting Notes: 8-character alpha-numeric code.
 * @member {String} purchaseOrderNumber
 */
InvoiceItem.prototype.purchaseOrderNumber = undefined;

/**
 * The vendor's order number for this order.
 * @member {String} vendorOrderNumber
 */
InvoiceItem.prototype.vendorOrderNumber = undefined;

/**
 * Harmonized System of Nomenclature (HSN) tax code. The HSN number cannot contain alphabets.
 * @member {String} hsnCode
 */
InvoiceItem.prototype.hsnCode = undefined;

/**
 * Individual tax details per line item.
 * @member {Array.<module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/TaxDetail>} taxDetails
 */
InvoiceItem.prototype.taxDetails = undefined;

/**
 * Individual charge details per line item.
 * @member {Array.<module:vendorDirectFulfillmentPaymentsV1/js-client.vendorDirectFulfillmentPaymentsV1.model/ChargeDetails>} chargeDetails
 */
InvoiceItem.prototype.chargeDetails = undefined;


