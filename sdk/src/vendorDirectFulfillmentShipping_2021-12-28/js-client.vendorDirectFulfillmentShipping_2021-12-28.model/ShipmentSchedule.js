/*
 * Selling Partner API for Direct Fulfillment Shipping
 * The Selling Partner API for Direct Fulfillment Shipping provides programmatic access to a direct fulfillment vendor's shipping data.
 *
 * OpenAPI spec version: 2021-12-28
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';

/**
 * The ShipmentSchedule model module.
 * @module vendorDirectFulfillmentShipping_2021-12-28/js-client.vendorDirectFulfillmentShipping_2021-12-28.model/ShipmentSchedule
 * @version 2021-12-28
 */
export class ShipmentSchedule {
  /**
   * Constructs a new <code>ShipmentSchedule</code>.
   * Details about the estimated delivery window.
   * @alias module:vendorDirectFulfillmentShipping_2021-12-28/js-client.vendorDirectFulfillmentShipping_2021-12-28.model/ShipmentSchedule
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>ShipmentSchedule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorDirectFulfillmentShipping_2021-12-28/js-client.vendorDirectFulfillmentShipping_2021-12-28.model/ShipmentSchedule} obj Optional instance to populate.
   * @return {module:vendorDirectFulfillmentShipping_2021-12-28/js-client.vendorDirectFulfillmentShipping_2021-12-28.model/ShipmentSchedule} The populated <code>ShipmentSchedule</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new ShipmentSchedule();
      if (data.hasOwnProperty('estimatedDeliveryDateTime'))
        obj.estimatedDeliveryDateTime = ApiClient.convertToType(data['estimatedDeliveryDateTime'], 'Date');
      if (data.hasOwnProperty('apptWindowStartDateTime'))
        obj.apptWindowStartDateTime = ApiClient.convertToType(data['apptWindowStartDateTime'], 'Date');
      if (data.hasOwnProperty('apptWindowEndDateTime'))
        obj.apptWindowEndDateTime = ApiClient.convertToType(data['apptWindowEndDateTime'], 'Date');
    }
    return obj;
  }
}

/**
 * Date on which the shipment is expected to reach the customer delivery location. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
 * @member {Date} estimatedDeliveryDateTime
 */
ShipmentSchedule.prototype.estimatedDeliveryDateTime = undefined;

/**
 * This field indicates the date and time at the start of the appointment window scheduled to deliver the shipment. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
 * @member {Date} apptWindowStartDateTime
 */
ShipmentSchedule.prototype.apptWindowStartDateTime = undefined;

/**
 * This field indicates the date and time at the end of the appointment window scheduled to deliver the shipment. This field is expected to be in ISO-8601 date/time format, with UTC time zone or UTC offset. For example, 2020-07-16T23:00:00Z or 2020-07-16T23:00:00+01:00.
 * @member {Date} apptWindowEndDateTime
 */
ShipmentSchedule.prototype.apptWindowEndDateTime = undefined;


