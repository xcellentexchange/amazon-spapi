/*
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {OrderAcknowledgementItem} from './OrderAcknowledgementItem.js';
import {PartyIdentification} from './PartyIdentification.js';

/**
 * The OrderAcknowledgement model module.
 * @module vendorOrders/js-client.vendorOrders.model/OrderAcknowledgement
 * @version v1
 */
export class OrderAcknowledgement {
  /**
   * Constructs a new <code>OrderAcknowledgement</code>.
   * @alias module:vendorOrders/js-client.vendorOrders.model/OrderAcknowledgement
   * @class
   * @param purchaseOrderNumber {String} The purchase order number. Formatting Notes: 8-character alpha-numeric code.
   * @param sellingParty {module:vendorOrders/js-client.vendorOrders.model/PartyIdentification} Name, address and tax details of the party receiving a shipment of products.
   * @param acknowledgementDate {Date} The date and time when the purchase order is acknowledged, in ISO-8601 date/time format.
   * @param items {Array.<module:vendorOrders/js-client.vendorOrders.model/OrderAcknowledgementItem>} A list of the items being acknowledged with associated details.
   */
  constructor(purchaseOrderNumber, sellingParty, acknowledgementDate, items) {
    this.purchaseOrderNumber = purchaseOrderNumber;
    this.sellingParty = sellingParty;
    this.acknowledgementDate = acknowledgementDate;
    this.items = items;
  }

  /**
   * Constructs a <code>OrderAcknowledgement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorOrders/js-client.vendorOrders.model/OrderAcknowledgement} obj Optional instance to populate.
   * @return {module:vendorOrders/js-client.vendorOrders.model/OrderAcknowledgement} The populated <code>OrderAcknowledgement</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new OrderAcknowledgement();
      if (data.hasOwnProperty('purchaseOrderNumber'))
        obj.purchaseOrderNumber = ApiClient.convertToType(data['purchaseOrderNumber'], 'String');
      if (data.hasOwnProperty('sellingParty'))
        obj.sellingParty = PartyIdentification.constructFromObject(data['sellingParty']);
      if (data.hasOwnProperty('acknowledgementDate'))
        obj.acknowledgementDate = ApiClient.convertToType(data['acknowledgementDate'], 'Date');
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [OrderAcknowledgementItem]);
    }
    return obj;
  }
}

/**
 * The purchase order number. Formatting Notes: 8-character alpha-numeric code.
 * @member {String} purchaseOrderNumber
 */
OrderAcknowledgement.prototype.purchaseOrderNumber = undefined;

/**
 * Name, address and tax details of the party receiving a shipment of products.
 * @member {module:vendorOrders/js-client.vendorOrders.model/PartyIdentification} sellingParty
 */
OrderAcknowledgement.prototype.sellingParty = undefined;

/**
 * The date and time when the purchase order is acknowledged, in ISO-8601 date/time format.
 * @member {Date} acknowledgementDate
 */
OrderAcknowledgement.prototype.acknowledgementDate = undefined;

/**
 * A list of the items being acknowledged with associated details.
 * @member {Array.<module:vendorOrders/js-client.vendorOrders.model/OrderAcknowledgementItem>} items
 */
OrderAcknowledgement.prototype.items = undefined;


