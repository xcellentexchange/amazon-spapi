/*
 * Selling Partner API for Retail Procurement Orders
 * The Selling Partner API for Retail Procurement Orders provides programmatic access to vendor orders data.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.29
 *
 * Do not edit the class manually.
 *
 */

import {ApiClient} from '../ApiClient.js';
import {ItemQuantity} from './ItemQuantity.js';

/**
 * The OrderItemAcknowledgement model module.
 * @module vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement
 * @version v1
 */
export class OrderItemAcknowledgement {
  /**
   * Constructs a new <code>OrderItemAcknowledgement</code>.
   * @alias module:vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement
   * @class
   * @param acknowledgementCode {module:vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement.AcknowledgementCodeEnum} This indicates the acknowledgement code.
   * @param acknowledgedQuantity {module:vendorOrders/js-client.vendorOrders.model/ItemQuantity} Details of quantity acknowledged with the above acknowledgement code.
   */
  constructor(acknowledgementCode, acknowledgedQuantity) {
    this.acknowledgementCode = acknowledgementCode;
    this.acknowledgedQuantity = acknowledgedQuantity;
  }

  /**
   * Constructs a <code>OrderItemAcknowledgement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement} obj Optional instance to populate.
   * @return {module:vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement} The populated <code>OrderItemAcknowledgement</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      switch(typeof data) {
        case 'string':
          obj = String(data);
          break;
        case 'number':
          obj = Number(data);
          break;
        case 'boolean':
          obj = Boolean(data);
          break;
      }
      obj = obj || new OrderItemAcknowledgement();
      if (data.hasOwnProperty('acknowledgementCode'))
        obj.acknowledgementCode = ApiClient.convertToType(data['acknowledgementCode'], 'String');
      if (data.hasOwnProperty('acknowledgedQuantity'))
        obj.acknowledgedQuantity = ItemQuantity.constructFromObject(data['acknowledgedQuantity']);
      if (data.hasOwnProperty('scheduledShipDate'))
        obj.scheduledShipDate = ApiClient.convertToType(data['scheduledShipDate'], 'Date');
      if (data.hasOwnProperty('scheduledDeliveryDate'))
        obj.scheduledDeliveryDate = ApiClient.convertToType(data['scheduledDeliveryDate'], 'Date');
      if (data.hasOwnProperty('rejectionReason'))
        obj.rejectionReason = ApiClient.convertToType(data['rejectionReason'], 'String');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>acknowledgementCode</code> property.
 * @enum {String}
 * @readonly
 */
OrderItemAcknowledgement.AcknowledgementCodeEnum = {
  /**
   * value: "Accepted"
   * @const
   */
  accepted: "Accepted",

  /**
   * value: "Backordered"
   * @const
   */
  backordered: "Backordered",

  /**
   * value: "Rejected"
   * @const
   */
  rejected: "Rejected"
};

/**
 * This indicates the acknowledgement code.
 * @member {module:vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement.AcknowledgementCodeEnum} acknowledgementCode
 */
OrderItemAcknowledgement.prototype.acknowledgementCode = undefined;

/**
 * Details of quantity acknowledged with the above acknowledgement code.
 * @member {module:vendorOrders/js-client.vendorOrders.model/ItemQuantity} acknowledgedQuantity
 */
OrderItemAcknowledgement.prototype.acknowledgedQuantity = undefined;

/**
 * Estimated ship date per line item. Must be in ISO-8601 date/time format.
 * @member {Date} scheduledShipDate
 */
OrderItemAcknowledgement.prototype.scheduledShipDate = undefined;

/**
 * Estimated delivery date per line item. Must be in ISO-8601 date/time format.
 * @member {Date} scheduledDeliveryDate
 */
OrderItemAcknowledgement.prototype.scheduledDeliveryDate = undefined;

/**
 * Allowed values for the <code>rejectionReason</code> property.
 * @enum {String}
 * @readonly
 */
OrderItemAcknowledgement.RejectionReasonEnum = {
  /**
   * value: "TemporarilyUnavailable"
   * @const
   */
  temporarilyUnavailable: "TemporarilyUnavailable",

  /**
   * value: "InvalidProductIdentifier"
   * @const
   */
  invalidProductIdentifier: "InvalidProductIdentifier",

  /**
   * value: "ObsoleteProduct"
   * @const
   */
  obsoleteProduct: "ObsoleteProduct"
};

/**
 * Indicates the reason for rejection.
 * @member {module:vendorOrders/js-client.vendorOrders.model/OrderItemAcknowledgement.RejectionReasonEnum} rejectionReason
 */
OrderItemAcknowledgement.prototype.rejectionReason = undefined;


